;(function($){    function checkbox(el, options, onAfter)    {        this.el = $(el);        this.idCB = this.el.attr("id");		this.options = options;        this.isCtrlPressed = false;        this.onAfter = onAfter;        this.init(options);    }    $.fn.CheckBox = function (options, onAfter)    {        var defaults = {			splitter: ",",			width: "120",            ctrl: true,            single_val: false,            callback: function(){}        };        var options = $.extend({}, defaults, options);                var plugin = new checkbox(this.get(0), options, onAfter);                $(this).data('CheckBox', plugin);                if (typeof onAfter == 'function')        {        	onAfter.call({obj:this});        }        return plugin;    };    checkbox.prototype = {        init: function (options)        {            var $this = this;                        $this.resetHiddenVal();                        $this.el.removeClass("CBdisabled");            $this.el.find(".CBpuls").on("click", function ()            {                if ($(this).hasClass("CBpulsSel"))                {                    if ($this.options.ctrl)                    {                        if (!$this.isCtrlPressed)                        {                        	$this.deselectAll();                            $this.selectByValue($(this).data("value"));                        }                        else                        {                        	$this.deselectByValue($(this).data("value"));                        }                    }                    else                    {                        $this.deselectByValue($(this).data("value"));                    }                }                else                {                    if ($this.options.ctrl)                    {                        if (!$this.isCtrlPressed)                        {                            $this.deselectAll();                        }                    }                    $this.selectByValue($(this).data("value"));                }            });            if (options.width != null && options.width != 'none')            {                this.el.find(".CBpuls").width(options.width);            };            $(document).keydown(function (e)            {                if (e.keyCode == 17)                {                    $this.isCtrlPressed = true;                }            });            $(document).keyup(function (e)            {                if (e.keyCode == 17)                {                    $this.isCtrlPressed = false;                }            });        },        resetHiddenVal: function() {        	        	var val = "";        	this.el.find(".CBpulsSel").each(function(k,v){            	if(k!=0) val += ",";            	val += $(v).data("value");            });        	$("[name='" + this.idCB + "']").val(val);        },        selectByValue: function (val)        {            if (this.isEnabled())            {                $cb = this.el.find("[data-value='" + val + "']");                if (($cb.html() != null) && (!$cb.hasClass("CBpulsSel")))                {                    $cb.addClass("CBpulsSel");                    this.addVal(val);                    if (typeof this.options.callback == 'function')                    {                        this.options.callback.call();                    }                }            }        },        selectByAttr: function (attr,val)        {            if (this.isEnabled())            {                $cb = this.el.find("[data-"+attr+"='" + val + "']");                if (($cb.html() != null) && (!$cb.hasClass("CBpulsSel")))                {                    $cb.addClass("CBpulsSel");                    this.addVal(val);                    if (typeof this.options.callback == 'function')                    {                        this.options.callback.call();                    }                }            }        },        deselectByValue: function (val)        {            if (this.isEnabled())            {                $cb = this.el.find("[data-value='" + val + "']");                if (($cb.html() != null) && ($cb.hasClass("CBpulsSel")))                {                    $cb.removeClass("CBpulsSel");                    this.remVal(val);                    if (typeof this.options.callback == 'function')                    {                    	this.options.callback.call();					}                    				}            }        },        val: function ()        {            return $("[name='" + this.idCB + "']").val();        },        descr: function ()        {        	var descr = "";                    	this.el.find(".CBpulsSel").each(function(k,v){            	if(k!=0) descr += ",";            	descr += $(v).text().trim();            });                        return descr;        },        getJsonArray: function(all)        {            var quali = all ? ".CBpuls" : ".CBpulsSel";            var group = this.el.find(quali);            var jsonArray = [];            $.each(group, function (index, value)            {                var $el = $(value);                jsonArray.push({                    key: $el.data('value'),                    label: $el.attr('title')                });            });            return jsonArray;        },        isEnabled: function ()        {            return !this.el.hasClass("CBdisabled");        },        addVal: function (val)        {            var el = $("[name='" + this.idCB + "']");            var valori = this.val();            if (valori == "" || this.options.single_val)            {                el.val(val);            }            else            {                el.val(valori + this.options.splitter + val);            }            this.triggerChange();        },        remVal: function (val)        {            var valori = this.val();            valori = valori.split(this.options.splitter);            valori = jQuery.grep(valori, function (value)            {                return value != val;            });            valori = valori.join(this.options.splitter);            $("[name='" + this.idCB + "']").val(valori);            this.triggerChange();        },        selectAll: function ()        {            var $this = this;            if (this.isEnabled())            {                var group = this.el.find(".CBpuls");                $.each(group, function (index, value)                {                    $this.selectByValue($(value).data("value"));                });            }        },        deselectAll: function ()        {            var $this = this;            if (this.isEnabled())            {                /*var group = this.el.find(".CBpulsSel");                $.each(group, function (index, value)                {                    $this.deselectByValue($(value).data("value"))                })*/                this.el.find(".CBpulsSel").removeClass("CBpulsSel");                $("[name='" + this.idCB + "']").val('');            }        },        enable: function ()        {            if (!this.isEnabled())            {                this.init(this.options);            }        },        disable: function ()        {            if (this.isEnabled())            {                this.el.addClass("CBdisabled");                var group = this.el.find(".CBpuls");                $.each(group, function (index, value)                {                    $(value).unbind('click');                });            }        },        getSplitter:function()        {        	return this.options.splitter;        },        triggerChange:function()        {            $("#"+this.idCB).trigger("change");        }    };})(jQuery);var CHECK={    crea:function(param,opt)    {        var check=$("<div>").addClass("CheckBox").attr({"id":param.id}).append($("<input>").attr({"type":"hidden","name":param.id,"id":"h-"+param.id}));        $.each(param.elements,function(k,v){            var el=$("<div>").addClass("CBpuls CBcolorDefault").attr({"id":param.id+"_"+ v.val,"data-value":v.val}).append($("<i>")).append($("<span>").text(v.descr));            check.append(el);        });        if(opt==null)opt = {};        check.CheckBox(opt);        return  check;    }};