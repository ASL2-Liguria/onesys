<?xml version = "1.0"?>
<QUERIES>
    <QUERY_GROUP id="WORKLIST">

        <QUERY id="WK_RICERCA_ANAGRAFICA">
            <SQL>
				SELECT * FROM
				(
					SELECT
						ANAGRAFICA.IDEN as IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME,ANAGRAFICA.NOME,ANAGRAFICA.SESSO,ANAGRAFICA.DATA_NASCITA,ANAGRAFICA.CODICE_FISCALE,ANAGRAFICA.READONLY,ANAGRAFICA.DATA_MORTE,
						PCK_PRIVACY.CHECKCONSENSOUNICO(ANAGRAFICA.PRIVACY_PAZIENTE) AS PRIVACY_CONSENSO_UNICO,
						(SELECT DESCRIZIONE FROM FX$COMUNI WHERE IDEN_COMUNE = ANAGRAFICA.IDEN_COMUNE_NASCITA) AS COMUNE_NASCITA,
						CASE
							WHEN CODICI_ESTERNI.ID4 IS NOT NULL THEN
								1
							ELSE
								0
							END ANAGRAFICA_PINNATA
					FROM
						FX$ANAGRAFICA ANAGRAFICA
						INNER JOIN FX$ANAGRAFICA_CODICI_ESTERNI CODICI_ESTERNI ON CODICI_ESTERNI.IDEN_ANAG = ANAGRAFICA.IDEN
					WHERE
						ANAGRAFICA.DELETED = 'N' AND ANAGRAFICA.NOME LIKE :nome AND ANAGRAFICA.COGNOME LIKE :cognome AND
						(:data IS NULL OR ANAGRAFICA.DATA_NASCITA = :data) AND (:codice_fiscale IS NULL OR ANAGRAFICA.CODICE_FISCALE = :codice_fiscale)
				)
				ORDER BY
					ANAGRAFICA_PINNATA DESC,COGNOME, NOME
            </SQL>
        </QUERY>
        <QUERY id="WK_RICERCA_ANAGRAFICA_BY_CODICE_FISCALE">
            <SQL>
				SELECT * FROM
				(
					SELECT
						ANAGRAFICA.IDEN as IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME,ANAGRAFICA.NOME,ANAGRAFICA.SESSO,ANAGRAFICA.DATA_NASCITA,ANAGRAFICA.CODICE_FISCALE, ANAGRAFICA.READONLY, ANAGRAFICA.DATA_MORTE,
						PCK_PRIVACY.CHECKCONSENSOUNICO(ANAGRAFICA.PRIVACY_PAZIENTE) AS PRIVACY_CONSENSO_UNICO,
						(SELECT DESCRIZIONE FROM FX$COMUNI WHERE IDEN_COMUNE = ANAGRAFICA.IDEN_COMUNE_NASCITA) AS COMUNE_NASCITA,
						CASE
							WHEN CODICI_ESTERNI.ID4 IS NOT NULL THEN
								1
							ELSE
								0
						END ANAGRAFICA_PINNATA
					FROM
						FX$ANAGRAFICA ANAGRAFICA
						INNER JOIN FX$ANAGRAFICA_CODICI_ESTERNI CODICI_ESTERNI ON CODICI_ESTERNI.IDEN_ANAG = ANAGRAFICA.IDEN
					WHERE
						DELETED = 'N' AND ANAGRAFICA.NOME LIKE :nome AND ANAGRAFICA.COGNOME LIKE :cognome AND ANAGRAFICA.CODICE_FISCALE = :codice_fiscale AND (:data IS NULL OR DATA_NASCITA = :data)
				)
				ORDER BY
					ANAGRAFICA_PINNATA DESC,COGNOME, NOME
            </SQL>
        </QUERY>
        <QUERY id="WK_RICERCA_ANAGRAFICA_PAZSCONO">
        	<SQL>
        		SELECT
            		IDEN as IDEN_ANAG, COGNOME,NOME,SESSO, DATA_NASCITA, CODICE_FISCALE
            	FROM
            		FX$ANAGRAFICA
            	WHERE
            		DELETED = 'N' AND
            		NOME LIKE :nome AND
            		COGNOME LIKE :cognome AND
            		(:codice_fiscale is null or CODICE_FISCALE = :codice_fiscale)
                {#ORDER#}
        	</SQL>
        </QUERY>
        <QUERY id="WK_TRASFERIMENTI_ACCETTAZIONE">
            <SQL>
            	<![CDATA[
	            	SELECT DISTINCT
				  		ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
				  		ANAGRAFICA.SESSO,
				  		GIURIDICI.IDEN,
				  		CONTATTI.IDEN IDEN_CONTATTO,
				  		CONTATTI.TIPO AS IDEN_TIPO_RICOVERO,
				  		CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) TIPO_RICOVERO,
				  		CONTATTI.REGIME AS IDEN_REGIME_RICOVERO,
				  		CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO,
				  		TO_CHAR(ASSISTENZIALI.DATA_INIZIO, 'yyyyMMddHH24:mi') DATA_RICHIESTA_TRASFERIMENTO,
				 		ADT_REPARTI.DECODEPROVENIENZA(GIURIDICI.IDEN_PROVENIENZA) AS REPARTO_GIURIDICO,
				  		ADT_REPARTI.DECODEPROVENIENZA(ASSISTENZIALI.IDEN_PROVENIENZA) AS REPARTO_ASSISTENZIALE,
				  		(SELECT ADT_REPARTI.DECODEPROVENIENZA(IDEN_PROVENIENZA) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S') AS REPARTO_RICHIEDENTE,
				  		DECODE(EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="AMBULANZA"]'),'null', 'N','S','SI','N','NO') AS AMBULANZA,
				  		EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="DATA_PARTENZA_AMBULANZA"]') AS AMBULANZA_DATA_PARTENZA
					FROM
					  	CONTATTI_SINTESI SINTESI
					  	INNER JOIN CONTATTI on CONTATTI.IDEN = SINTESI.IDEN_CONTATTO
					  	INNER JOIN CONTATTI_ASSISTENZIALI ASSISTENZIALI ON ASSISTENZIALI.IDEN_CONTATTO = SINTESI.IDEN_CONTATTO
					  	INNER JOIN CONTATTI_GIURIDICI GIURIDICI ON GIURIDICI.IDEN = ASSISTENZIALI.IDEN_CONTATTO_GIURIDICO
					  	INNER JOIN FX$ANAGRAFICA ANAGRAFICA on ANAGRAFICA.IDEN= CONTATTI.IDEN_ANAGRAFICA
					WHERE
					  	SINTESI.STATO = CODIFICHE.DECODESTATO('ADMITTED','ADT')
					 	AND ASSISTENZIALI.STATO  = CODIFICHE.DECODESTATO('REQUESTED','ADT')
					  	AND ASSISTENZIALI.ATTIVO = 'N'
					  	AND ASSISTENZIALI.IDEN_CDC in (select CODICE_NUMBER from FX$FILTRI where USERNAME = :username and ID_FILTRO = 'TRASFERIMENTI_FILTRO_REPARTO_ASSISTENZIALE')
					{#ORDER#}
            	]]>
            </SQL>
        </QUERY>
        <QUERY id="WK_TRASFERIMENTI_PAZIENTE">
            <SQL>
            	<![CDATA[
	            	SELECT
				  		GIURIDICI.IDEN AS IDEN_CONTATTO_GIURIDICO,
				  		ASSISTENZIALI.IDEN AS IDEN_CONTATTO_ASSISTENZIALE,
				  		ASSISTENZIALI.IDEN_CONTATTO,
				  		CODIFICHE.ENCODETIPO(ASSISTENZIALI.STATO) AS STATO_CODICE,
				  		CODIFICHE.DESCRIBETIPO(ASSISTENZIALI.STATO) AS STATO_DESCRIZIONE,
				  		ASSISTENZIALI.PROGRESSIVO AS PROGRESSIVO,
				  		TO_CHAR(ASSISTENZIALI.DATA_INIZIO,'yyyyMMddhh24:mi') as DATA_INIZIO,
				  		TO_CHAR(ASSISTENZIALI.DATA_FINE,'yyyyMMddhh24:mi') as DATA_FINE,
				  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = ASSISTENZIALI.IDEN_CDC) AS CDC_ASSISTENZIALE,
				  		  (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = GIURIDICI.IDEN_CDC) AS CDC_GIURIDICO,
				 	 	NVL(EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="AMBULANZA"]'),'N') AS AMBULANZA,
				  		EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="DATA_PARTENZA_AMBULANZA"]') AS DATA_PARTENZA_AMBULANZA,
				  		EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="DATA_ARRIVO_AMBULANZA"]') AS DATA_ARRIVO_AMBULANZA,
				  		CODICI_ESTERNI.CODICE1 AS IDEN_ACCESSO_CARTELLA,
				  		(TO_DATE(EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="DATA_ARRIVO_AMBULANZA"]'),'YYYYMMDDHH24:MI') - TO_DATE(EXTRACTVALUE(ASSISTENZIALI.METADATI,'/METADATI/DATO[@KEY="DATA_PARTENZA_AMBULANZA"]'),'YYYYMMDDHH24:MI'))*24*60 AS DIFF_MINUTI
				  	FROM
				  		CONTATTI_GIURIDICI GIURIDICI
				  		INNER JOIN CONTATTI_ASSISTENZIALI ASSISTENZIALI ON  ASSISTENZIALI.IDEN_CONTATTO_GIURIDICO = GIURIDICI.IDEN
				  		INNER JOIN CONTATTI_GIU_CODICI_ESTERNI CODICI_ESTERNI ON CODICI_ESTERNI.IDEN_CONTATTO_GIURIDICO = GIURIDICI.IDEN
				  	WHERE
				  		ASSISTENZIALI.IDEN_CONTATTO = :IDEN_CONTATTO AND ASSISTENZIALI.DELETED = 'N' AND GIURIDICI.DELETED = 'N'
  					{#ORDER#}
            	]]>
           	</SQL>
        </QUERY>
        <QUERY id="WK_RICOVERATI">
            <SQL>
				<![CDATA[
                    WITH
					  	REGIME_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'CONTATTI_FILTRO_REGIME_RICOVERO'
					 	),
					  	TIPO_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'CONTATTI_FILTRO_TIPO_RICOVERO'
					  	),
					  	CDC_FILTRI AS
					  	(
					  		SELECT CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'CONTATTI_FILTRO_REPARTO'
					  	)
					SELECT
						DISTINCT
				  		ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
				  		ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
				  		CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE, TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
				  		TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd hh24:mi') AS DATA_INIZIO_ISO,
				  		(SELECT CODICE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_CODICE,
				  		(SELECT DESCRIZIONE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
				  		(SELECT CODICE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_CODICE,
				  		(SELECT DESCRIZIONE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
				  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
				  		CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE,
				  		NVL(
				  			(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_ASSISTENZIALE),
				  			(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = (SELECT IDEN_CDC FROM CONTATTI_ASSISTENZIALI WHERE IDEN = (SELECT MAX(IDEN) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND DELETED = 'N')))
				  		) AS REPARTO_ASSISTENZIALE,
				  		(SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE,
				  		DECODE(EXISTSNODE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DEA_ANNO"]'), 0, 'N', 'S') AS IS_CONTATTO_FROM_PS,
				  		DECODE(CODIFICHE.ENCODETIPO(SINTESI.REGIME),'3','PRE-RICOVERO', 'RICOVERATO') AS STATO,
				  		EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="CHIUSURA_FORZATA"]') AS CHIUSURA_FORZATA,
				  		SINTESI.ABSENT AS IS_ABSENT,
				  		CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '1' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			DECODE(CONTATTI.DATA_FINE, NULL, ROUND(SYSDATE - CONTATTI.DATA_INIZIO) + 1, ROUND(CONTATTI.DATA_FINE - CONTATTI.DATA_INIZIO) + 1)
				    		ELSE
				    			NULL
				  		END GIORNI_RICOVERO,
				  		CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '2' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			(SELECT COUNT(1) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND DELETED = 'N')
				    		ELSE NULL
				  		END N_ACCESSI,
				  		CASE
				    		WHEN (
				    				SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '2' AND CODICE_NUMBER = CONTATTI.REGIME AND CODIFICHE.ENCODETIPO(CONTATTI.TIPO) IN ('1','3','4')
				    		) > 0 THEN
				    			(SELECT COUNT(1) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND STATO = CODIFICHE.DECODETIPO('STATO','ADMITTED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND DELETED = 'N')
				    		ELSE NULL
				  		END N_ACCESSI_APERTI,
				  		FLOOR((SYSDATE-CONTATTI.DATA_INS)*24) AS HOURS_FROM_INSERT,
				  		DECODE(CODIFICHE.ENCODETIPO(CONTATTI.MOTIVO),'O','S','S','S','N') AS IS_ODS,
				  		PCK_PRIVACY.CHECKCONSENSOEVENTO(CONTATTI.PRIVACY_EVENTO)    AS PRIVACY_CONSENSO_EVENTO,
				  		PCK_PRIVACY.CHECKCONSENSOUNICO(ANAGRAFICA.PRIVACY_PAZIENTE) AS PRIVACY_CONSENSO_UNICO,
						(select to_char(max(data_fine), 'HH24:MI DD/MM/YYYY') from contatti_permessi where IDEN_CONTATTO_ASSISTENZIALE = CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE and deleted = 'N') DATA_CHIUSURA_ULTIMO_PERMESSO,
                                                IDEN_PARENT
					FROM
				  		CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN= CONTATTI.IDEN_ANAGRAFICA
				  		INNER JOIN CONTATTI_SINTESI SINTESI ON SINTESI.IDEN_CONTATTO = CONTATTI.IDEN
					WHERE
				  		SINTESI.DELETED  ='N'
				  		AND SINTESI.ASSIGNING_AUTHORITY_AREA = 'ADT'
				  		AND SINTESI.REGIME IN (SELECT CODICE_NUMBER FROM REGIME_CONTATTO)
				  		AND (SINTESI.TIPO IN (SELECT CODICE_NUMBER FROM TIPO_CONTATTO) OR SINTESI.TIPO IS NULL)
				  		AND SINTESI.NOME LIKE :nome
				  		AND SINTESI.COGNOME LIKE :cognome
				  		AND (:cartella  IS NULL OR SINTESI.CARTELLA = :cartella)
				  		AND SINTESI.CDC IN (SELECT CODICE_NUMBER FROM CDC_FILTRI WHERE REGEXP_INSTR('[' || DECODE(substr(:scope_cdc,0,1),'E','EGA','E'||substr(:scope_cdc,0,1)) || ']', SCOPE_CDC) > 0)
 					{#ORDER#}
                ]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_DIMESSI_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
	            	WITH
					  	REGIME_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REGIME_DIMESSI'
					 	),
					  	TIPO_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_TIPO_DIMESSI'
					  	),
					  	CDC_FILTRI AS
					  	(
					  		SELECT CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REPARTO_DIMESSI'
					  	)
					SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
					  	ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					  	TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	ANAGRAFICA.DATA_MORTE AS DATA_MORTE,
					  	(SELECT CODICE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
					  	(SELECT CODICE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					  	'DIMESSO' AS STATO, 'DISCHARGED' AS STATO_CODICE,
					  	CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE,
					  	NVL(
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_ASSISTENZIALE),
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = (SELECT DISTINCT IDEN_CDC FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N'))
					  	) AS REPARTO_ASSISTENZIALE,
					  	(SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE,
					  	DECODE(EXISTSNODE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DEA_ANNO"]'), 0, 'N', 'S') AS IS_CONTATTO_FROM_PS,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="CHIUSURA_FORZATA"]') AS CHIUSURA_FORZATA,
					  	CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '1' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			DECODE(CONTATTI.DATA_FINE, NULL, ROUND(SYSDATE - CONTATTI.DATA_INIZIO) + 1, ROUND(CONTATTI.DATA_FINE - CONTATTI.DATA_INIZIO) + 1)
				    		ELSE
				    			NULL
				  		END GIORNI_RICOVERO,
				  		CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '2' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			(SELECT COUNT(1) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND DELETED = 'N')
				    		ELSE NULL
				  		END N_ACCESSI,
					  	(SELECT FLOOR((SYSDATE-MAX(DATA_INS_BCK))*24) FROM ADT_BCK.CONTATTI BCK WHERE BCK.STATO = CODIFICHE.DECODETIPO('STATO', 'DISCHARGED', NULL, CONTATTI.ASSIGNING_AUTHORITY_AREA) AND BCK.IDEN_ORIGINALE = CONTATTI.IDEN) AS HOURS_FROM_INSERT,
					  	(SELECT STATO FROM SDO_VERSIONI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N') AS STATO_SDO
					FROM
					    CONTATTI
					    JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
					    CONTATTI.DELETED = 'N'
					    AND CONTATTI.STATO = CODIFICHE.DECODESTATO('DISCHARGED','ADT')
					    AND CONTATTI.REGIME IN (SELECT CODICE_NUMBER FROM REGIME_CONTATTO)
					  	AND (CONTATTI.TIPO IN (SELECT CODICE_NUMBER FROM TIPO_CONTATTO) OR CONTATTI.TIPO IS NULL)
					    AND CONTATTI.DATA_FINE >= TO_DATE(:da_data,'yyyyMMdd')
					    AND CONTATTI.DATA_FINE < TO_DATE(:a_data,'yyyyMMdd') +1
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
              		{#ORDER#}
                ]]>
        	</SQL>
        </QUERY>
		<QUERY id="WK_DIMESSI_BY_DATI_ANAGRAFICI">
			<SQL>
				<![CDATA[
	            	WITH
					  	REGIME_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REGIME_DIMESSI'
					 	),
					  	TIPO_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_TIPO_DIMESSI'
					  	),
					  	CDC_FILTRI AS
					  	(
					  		SELECT CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REPARTO_DIMESSI'
					  	)
					SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
					  	ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					  	TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	ANAGRAFICA.DATA_MORTE AS DATA_MORTE,
					  	(SELECT CODICE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
					  	(SELECT CODICE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					  	'DIMESSO' AS STATO, 'DISCHARGED' AS STATO_CODICE,
					  	CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE,
					  	NVL(
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_ASSISTENZIALE),
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = (SELECT DISTINCT IDEN_CDC FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N'))
					  	) AS REPARTO_ASSISTENZIALE,
					  	(SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE,
					  	DECODE(EXISTSNODE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DEA_ANNO"]'), 0, 'N', 'S') AS IS_CONTATTO_FROM_PS,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="CHIUSURA_FORZATA"]') AS CHIUSURA_FORZATA,
					  	CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '1' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			DECODE(CONTATTI.DATA_FINE, NULL, ROUND(SYSDATE - CONTATTI.DATA_INIZIO) + 1, ROUND(CONTATTI.DATA_FINE - CONTATTI.DATA_INIZIO) + 1)
				    		ELSE
				    			NULL
				  		END GIORNI_RICOVERO,
				  		CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '2' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			(SELECT COUNT(1) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND DELETED = 'N')
				    		ELSE NULL
				  		END N_ACCESSI,
					  	(SELECT FLOOR((SYSDATE-MAX(DATA_INS_BCK))*24) FROM ADT_BCK.CONTATTI BCK WHERE BCK.STATO = CODIFICHE.DECODETIPO('STATO', 'DISCHARGED', NULL, CONTATTI.ASSIGNING_AUTHORITY_AREA) AND BCK.IDEN_ORIGINALE = CONTATTI.IDEN) AS HOURS_FROM_INSERT,
					  	(SELECT STATO FROM SDO_VERSIONI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N') AS STATO_SDO
					FROM
					    CONTATTI
					    JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
					    CONTATTI.DELETED = 'N'
					    AND CONTATTI.STATO = CODIFICHE.DECODESTATO('DISCHARGED','ADT')
					    AND CONTATTI.REGIME IN (SELECT CODICE_NUMBER FROM REGIME_CONTATTO)
					  	AND (CONTATTI.TIPO IN (SELECT CODICE_NUMBER FROM TIPO_CONTATTO) OR CONTATTI.TIPO IS NULL)
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
					    AND ANAGRAFICA.NOME LIKE :nome AND ANAGRAFICA.COGNOME LIKE :cognome
              		{#ORDER#}
                ]]>
			</SQL>
		</QUERY>
        <QUERY id="WK_DIMESSI_BY_CARTELLA">
            <SQL>
            	<![CDATA[
	            	WITH
					  	REGIME_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REGIME_DIMESSI'
					 	),
					  	TIPO_CONTATTO AS
					  	(
					    	SELECT CODICE_NUMBER, CODIFICHE.ENCODETIPO(CODICE_NUMBER) AS CODICE, CODIFICHE.DESCRIBETIPO(CODICE_NUMBER) AS DESCRIZIONE
					    	FROM FX$FILTRI
					    	WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_TIPO_DIMESSI'
					  	),
					  	CDC_FILTRI AS
					  	(
					  		SELECT CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'ACCESSI_GIURIDICI_REPARTO_DIMESSI'
					  	)
					SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
					  	ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					  	TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	ANAGRAFICA.DATA_MORTE AS DATA_MORTE,
					  	(SELECT CODICE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM REGIME_CONTATTO WHERE CODICE_NUMBER = CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
					  	(SELECT CODICE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_CODICE,
					  	(SELECT DESCRIZIONE FROM TIPO_CONTATTO WHERE CODICE_NUMBER = CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					  	'DIMESSO' AS STATO, 'DISCHARGED' AS STATO_CODICE,
					  	CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE,
					  	NVL(
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_ASSISTENZIALE),
					  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = (SELECT DISTINCT IDEN_CDC FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N'))
					  	) AS REPARTO_ASSISTENZIALE,
					  	(SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE,
					  	DECODE(EXISTSNODE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DEA_ANNO"]'), 0, 'N', 'S') AS IS_CONTATTO_FROM_PS,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="CHIUSURA_FORZATA"]') AS CHIUSURA_FORZATA,
					  	CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '1' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			DECODE(CONTATTI.DATA_FINE, NULL, ROUND(SYSDATE - CONTATTI.DATA_INIZIO) + 1, ROUND(CONTATTI.DATA_FINE - CONTATTI.DATA_INIZIO) + 1)
				    		ELSE
				    			NULL
				  		END GIORNI_RICOVERO,
				  		CASE
				    		WHEN (SELECT COUNT(1) FROM REGIME_CONTATTO WHERE CODICE = '2' AND CODICE_NUMBER = CONTATTI.REGIME) > 0 THEN
				    			(SELECT COUNT(1) FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND DELETED = 'N')
				    		ELSE NULL
				  		END N_ACCESSI,
					  	(SELECT FLOOR((SYSDATE-MAX(DATA_INS_BCK))*24) FROM ADT_BCK.CONTATTI BCK WHERE BCK.STATO = CODIFICHE.DECODETIPO('STATO', 'DISCHARGED', NULL, CONTATTI.ASSIGNING_AUTHORITY_AREA) AND BCK.IDEN_ORIGINALE = CONTATTI.IDEN) AS HOURS_FROM_INSERT,
					  	(SELECT STATO FROM SDO_VERSIONI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND ATTIVO = 'S' AND DELETED = 'N') AS STATO_SDO
					FROM
					    CONTATTI
					    JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
					    CONTATTI.DELETED = 'N'
					    AND CONTATTI.STATO = CODIFICHE.DECODESTATO('DISCHARGED','ADT')
					    AND CONTATTI.REGIME IN (SELECT CODICE_NUMBER FROM REGIME_CONTATTO)
					  	AND (CONTATTI.TIPO IN (SELECT CODICE_NUMBER FROM TIPO_CONTATTO) OR CONTATTI.TIPO IS NULL)
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
              			AND CONTATTI.CARTELLA = :cartella
              {#ORDER#}
                ]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_TRASFERIMENTI">
            <SQL>
            	<![CDATA[
            		SELECT
  						CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.DATA_INIZIO, CONTATTI.CODICE, CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME, CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO,
					  	ANAGRAFICA.COGNOME ||' '|| ANAGRAFICA.NOME ||' ' || to_char(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMmdd'),'dd/MM/yyyy') ASSISTITO,
					 	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = PASSATI.IDEN_CDC) AS CDC_GIURIDICO,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CORRENTI.IDEN_CDC) AS CDC_GIURIDICO_CORRENTE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = (SELECT IDEN_CDC FROM CONTATTI_ASSISTENZIALI WHERE IDEN_CONTATTO = CONTATTI.IDEN AND IDEN_CONTATTO_GIURIDICO = CORRENTI.IDEN AND ATTIVO = 'S')) AS CDC_ASSISTENZIALE_CORRENTE,
					  	TO_CHAR(PASSATI.DATA_INIZIO,'dd/MM') || ' - ' || TO_CHAR(PASSATI.DATA_FINE,'dd/MM') AS PERIODO_COMPETENZA,
					  	TO_CHAR(CORRENTI.DATA_INIZIO,'dd/MM') AS PERIODO_COMPETENZA_CORRENTE,
					  	DECODE(CORRENTI.IDEN_PRECEDENTE, PASSATI.IDEN, 'S', 'N') AS TRASFERIMENTO_SUCCESSIVO,
					  	FLOOR((SYSDATE-CORRENTI.DATA_INS)*24) AS HOURS_FROM_INSERT,
					  	CORRENTI_CODICI_ESTERNI.CODICE1 AS IDEN_ACCESSO_CARTELLA,
					  	CORRENTI.IDEN AS IDEN_SEGMENTO_CORRENTE,
  						PASSATI.IDEN AS IDEN_SEGMENTO_TRASFERITO
					FROM
    					CONTATTI CONTATTI
    					INNER JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
    					INNER JOIN
    					(
      						SELECT IDEN,IDEN_CONTATTO, ATTIVO, IDEN_PROVENIENZA, IDEN_CDC, DATA_INIZIO, DATA_FINE, DATA_INS
     	 					FROM CONTATTI_GIURIDICI A
      						WHERE IDEN_CDC IN (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username and ID_FILTRO = 'TRASFERIMENTI_GIURIDICI_REPARTO') AND ATTIVO = 'N'
    					) PASSATI ON PASSATI.IDEN_CONTATTO = CONTATTI.IDEN
    					INNER JOIN CONTATTI_GIURIDICI CORRENTI ON CORRENTI.IDEN_CONTATTO = PASSATI.IDEN_CONTATTO AND CORRENTI.ATTIVO = 'S'
    					INNER JOIN CONTATTI_GIU_CODICI_ESTERNI CORRENTI_CODICI_ESTERNI ON CORRENTI_CODICI_ESTERNI.IDEN_CONTATTO_GIURIDICO = CORRENTI.IDEN
					WHERE
  						CONTATTI.DELETED='N' AND
  						CONTATTI.STATO = CODIFICHE.DECODESTATO('ADMITTED','ADT') AND
  						CONTATTI.REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO', '1', NULL, CONTATTI.ASSIGNING_AUTHORITY_AREA) AND
  						ANAGRAFICA.NOME LIKE :nome AND ANAGRAFICA.COGNOME LIKE :cognome
                 	{#ORDER#}
                ]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_RICOVERATI_PORTINERIA">
            <SQL>
                SELECT
            		DISTINCT
  					CONTATTI.IDEN IDEN_CONTATTO, ANAG.IDEN IDEN_ANAGRAFICA, ANAG.CODICE_FISCALE, ANAG.NOME, ANAG.COGNOME, ANAG.DATA_NASCITA,
  					(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_ASSISTENZIALE) AS REPARTO_ASSISTENZIALE,
  					(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
  					(SELECT DESCRIZIONE FROM FX$COMUNI WHERE IDEN_COMUNE = ANAG.IDEN_COMUNE_RESIDENZA AND ATTIVO = 'S') AS COMUNE_RESIDENZA
				FROM
  					CONTATTI_SINTESI SINTESI
            		INNER JOIN CONTATTI ON CONTATTI.IDEN = SINTESI.IDEN_CONTATTO
  					INNER JOIN FX$ANAGRAFICA ANAG ON ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
				WHERE
  					SINTESI.STATO = CODIFICHE.DECODESTATO('ADMITTED',CONTATTI.ASSIGNING_AUTHORITY_AREA) AND SINTESI.DELETED = 'N' AND
  					SINTESI.NOME LIKE :nome AND
            		SINTESI.COGNOME LIKE :cognome AND
            		(:data_nascita IS NULL OR ANAG.DATA_NASCITA = :data_nascita) AND
  					(:comune_residenza IS NULL OR ANAG.IDEN_COMUNE_RESIDENZA IN (SELECT IDEN_COMUNE FROM FX$COMUNI WHERE DESCRIZIONE LIKE :comune_residenza || '%' AND ATTIVO = 'S'))
            </SQL>
        </QUERY>
        <QUERY id="WK_DIMESSI_SDO_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
		        	WITH
					  	STATO_SDO AS (SELECT CODICE_VARCHAR FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_STATO'),
              			STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'CARTELLA_STATO')
				  	SELECT
					    CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					    ANAG.IDEN AS IDEN_ANAGRAFICA,
					    ANAG.SESSO, ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					    ANAG.DATA_MORTE AS DATA_MORTE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_DESCRIZIONE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_DESCRIZIONE,
               			CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
               			CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
						CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') AS SDO_COMPLETA,
					    DECODE(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'), 'N','INCOMPLETA','X','ANOMALIA','S','COMPLETA','NON PRESENTE') AS STATO_SDO,
					    NVL(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'),'NON_PRESENTE') AS STATO_SDO_ENCODED,
					    CODICE_DRG, IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA, ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) AS ESITO_GROUPER,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_SOLLECITO"]') AS DATA_SOLLECITO
					FROM CONTATTI
					    INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					    LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S')
				  	WHERE
				  		CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_FILTRO_REPARTO')
					    AND EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') IN (SELECT CODICE_VARCHAR FROM STATO_SDO)
               			AND MV.STATO IN (SELECT CODICE_NUMBER FROM STATO_CARTELLA)
               			AND CONTATTI.DATA_FINE >= TO_DATE(:da_data,'yyyyMMdd') AND CONTATTI.DATA_FINE < TO_DATE(:a_data, 'yyyyMMdd') + 1
					{#ORDER#}
                 ]]>
        	</SQL>
        </QUERY>
		<QUERY id="WK_DIMESSI_SDO_BY_DATI_ANAGRAFICI">
			<SQL>
				<![CDATA[
		        	WITH
					  	STATO_SDO AS (SELECT CODICE_VARCHAR FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_STATO'),
              			STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'CARTELLA_STATO')
				  	SELECT
					    CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					    ANAG.IDEN AS IDEN_ANAGRAFICA,
					    ANAG.SESSO, ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					    ANAG.DATA_MORTE AS DATA_MORTE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_DESCRIZIONE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_DESCRIZIONE,
               			CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
               			CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
						CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') AS SDO_COMPLETA,
					    DECODE(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'), 'N','INCOMPLETA','X','ANOMALIA','S','COMPLETA','NON PRESENTE') AS STATO_SDO,
					    NVL(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'),'NON_PRESENTE') AS STATO_SDO_ENCODED,
					    CODICE_DRG, IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA, ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) AS ESITO_GROUPER,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_SOLLECITO"]') AS DATA_SOLLECITO
					FROM CONTATTI
					    INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					    LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S')
				  	WHERE
				  		CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_FILTRO_REPARTO')
					    AND EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') IN (SELECT CODICE_VARCHAR FROM STATO_SDO)
               			AND MV.STATO IN (SELECT CODICE_NUMBER FROM STATO_CARTELLA)
					    AND ANAG.NOME LIKE :nome AND ANAG.COGNOME LIKE :cognome
					{#ORDER#}
                 ]]>
			</SQL>
		</QUERY>
        <QUERY id="WK_DIMESSI_SDO_BY_CARTELLA">
            <SQL>
            	<![CDATA[
		        	WITH
					  	STATO_SDO AS (SELECT CODICE_VARCHAR FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_STATO'),
              			STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'CARTELLA_STATO')
				  	SELECT
					    CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					    ANAG.IDEN AS IDEN_ANAGRAFICA,
					    ANAG.SESSO, ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					    ANAG.DATA_MORTE AS DATA_MORTE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_DESCRIZIONE,
					    CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_DESCRIZIONE,
               			CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
               			CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
						CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') AS SDO_COMPLETA,
					    DECODE(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'), 'N','INCOMPLETA','X','ANOMALIA','S','COMPLETA','NON PRESENTE') AS STATO_SDO,
					    NVL(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]'),'NON_PRESENTE') AS STATO_SDO_ENCODED,
					    CODICE_DRG, IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA, ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) AS ESITO_GROUPER,
					    EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_SOLLECITO"]') AS DATA_SOLLECITO
					FROM CONTATTI
					    INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					    LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S')
				  	WHERE
				  		CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'SDO_FILTRO_REPARTO')
					    AND EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="SDO_COMPLETA"]') IN (SELECT CODICE_VARCHAR FROM STATO_SDO)
               			AND MV.STATO IN (SELECT CODICE_NUMBER FROM STATO_CARTELLA)
					    AND CONTATTI.CARTELLA = :cartella
					{#ORDER#}
                 ]]>
        	</SQL>
        </QUERY>
		<QUERY id="WK_RICOVERI_SOVRAPPOSTI">
			<SQL>
				<![CDATA[
		        	SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
						ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
						CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
						TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
						TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
						CODIFICHE.ENCODETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO_CODICE,
						CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
						CODIFICHE.ENCODETIPO(CONTATTI.TIPO) AS TIPO_RICOVERO_CODICE,
						CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
						DECODE(CODIFICHE.ENCODETIPO(CONTATTI.STATO),'DISCHARGED','DIMESSO','ADMITTED','RICOVERATO') AS STATO,
						(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
						(SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER = :username AND CDC.ATTIVO = 'S' AND CDC.IDEN = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE
					FROM CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
				  		CONTATTI.REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO','2',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND
				  		CONTATTI.ASSIGNING_AUTHORITY_AREA = 'ADT' AND CONTATTI.DELETED = 'N' AND
				  		CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND
				  		CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT ADT_REPARTI.DECODEIDENPROVENIENZA(CODICE_NUMBER) FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'RICOVERI_SOVRAPPOSTI_FILTRO_REAPARTO_DIMESSI') AND
				  		(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="CHIUSURA_FORZATA"]') = 'S') AND
				  		CONTATTI.DATA_FINE BETWEEN TO_DATE(:da_data,'yyyyMMddhh24:mi') AND (TO_DATE(:a_data,'yyyyMMddhh24:mi') + 1)
					{#ORDER#}
                 ]]>
			</SQL>
		</QUERY>
        <QUERY id="WK_RICHIESTE_GROUPER_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
		        	WITH
					 	CDC_FILTRI AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO  = 'GROUPER_FILTRO_REPARTO') ,
					  	STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA_GROUPER')
					SELECT
					  	ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					 	ANAG.NOME, ANAG.IDEN IDEN_ANAGRAFICA, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA, ANAG.IDEN IDEN_ANAG,
					  	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.STRUTTURA,CONTATTI.ANNO,CONTATTI.CARTELLA,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO, TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	TO_CHAR(MV.DATA,'yyyyMMdd') DATA_STATO_CARTELLA,
					  	(SELECT DESCRIZIONE FROM FX$PERSONALE WHERE IDEN = EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="UTENTE_TARIFFAZIONE"]')) AS UTENTE_TARIFFAZIONE,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_TARIFFAZIONE"]') AS DATA_TARIFFAZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO,
					  	CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					  	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME,
					  	CODIFICHE.ENCODETIPO(CONTATTI.REGIME) AS REGIME_CODICE,
					  	CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
					 	CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					  	CONTATTI.CODICE_DRG, DRG24.DESCRIZIONE DESCRDRG, DRG24.DRG_ANOMALO, DRG24.LEA, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) ESITO_GROUPER,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(TO_CHAR(DATA_INIZIO,'DD/MM/YYYY HH24:MI')),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DATA_RICHIESTA,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(iden_richiesta||'|'||TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi')||'|'||stato_richiesta||'|'||stato_ric_cartella),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DETTAGLIO_RICHIESTA,
					  	ADT_MOVIMENTI_CARTELLA.GET_STATO_DETTAGLIO(MV.IDEN_CONTATTO) AS STATO_RICHIESTA,
					  	adt_movimenti_cartella.get_cod_stato_richiesta(mv.iden_contatto) AS cod_stato_richiesta
					FROM CONTATTI
					  	JOIN FX$ANAGRAFICA ANAG ON ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					  	LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO = 'S')
					  	LEFT JOIN DRG24 ON (CONTATTI.CODICE_DRG = DRG24.DRG)
					WHERE
					  	CONTATTI.CDC_ULTIMO_GIURIDICO in (SELECT * FROM CDC_FILTRI)
					  	AND CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					  	AND (MV.STATO IN (SELECT * FROM STATO_CARTELLA) or (SELECT COUNT(*) FROM STATO_CARTELLA)=0)
					  	AND MV.DATA >= TO_DATE(:da_data,'yyyyMMdd') and MV.DATA <= TO_DATE(:a_data,'yyyyMMdd') + 1
					  	AND ANAG.NOME LIKE :nome AND ANAG.COGNOME LIKE :cognome
					  	AND CONTATTI.ASSIGNING_AUTHORITY_AREA IN ('ADT','AMB')
                	{#ORDER#}
         		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_RICHIESTE_GROUPER_BY_DATI_ANAGRAFICI">
            <SQL>
            	<![CDATA[
		        	WITH
					 	CDC_FILTRI AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO  = 'GROUPER_FILTRO_REPARTO') ,
					  	STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA_GROUPER')
					SELECT
					  	ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					 	ANAG.NOME, ANAG.IDEN IDEN_ANAGRAFICA, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA, ANAG.IDEN IDEN_ANAG,
					  	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.STRUTTURA,CONTATTI.ANNO,CONTATTI.CARTELLA,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO, TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	TO_CHAR(MV.DATA,'yyyyMMdd') DATA_STATO_CARTELLA,
					  	(SELECT DESCRIZIONE FROM FX$PERSONALE WHERE IDEN = EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="UTENTE_TARIFFAZIONE"]')) AS UTENTE_TARIFFAZIONE,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_TARIFFAZIONE"]') AS DATA_TARIFFAZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO,
					  	CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					  	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME,
					  	CODIFICHE.ENCODETIPO(CONTATTI.REGIME) AS REGIME_CODICE,
					  	CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
					 	CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					  	CONTATTI.CODICE_DRG, DRG24.DESCRIZIONE DESCRDRG, DRG24.DRG_ANOMALO, DRG24.LEA, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) ESITO_GROUPER,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(TO_CHAR(DATA_INIZIO,'DD/MM/YYYY HH24:MI')),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DATA_RICHIESTA,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(iden_richiesta||'|'||TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi')||'|'||stato_richiesta||'|'||stato_ric_cartella),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DETTAGLIO_RICHIESTA,
					  	ADT_MOVIMENTI_CARTELLA.GET_STATO_DETTAGLIO(MV.IDEN_CONTATTO) as STATO_RICHIESTA,
					  	adt_movimenti_cartella.get_cod_stato_richiesta(mv.iden_contatto) cod_stato_richiesta
					FROM CONTATTI
					  	JOIN FX$ANAGRAFICA ANAG ON ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					  	LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO = 'S')
					  	LEFT JOIN DRG24 ON (CONTATTI.CODICE_DRG = DRG24.DRG)
					WHERE
					  	CONTATTI.CDC_ULTIMO_GIURIDICO in (SELECT * FROM CDC_FILTRI)
					  	AND (MV.STATO IN (SELECT * FROM STATO_CARTELLA) or (SELECT COUNT(*) FROM STATO_CARTELLA)=0)
					  	AND CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					  	AND COGNOME LIKE :cognome AND NOME LIKE :nome
					  	AND CONTATTI.ASSIGNING_AUTHORITY_AREA IN ('ADT','AMB')
                	{#ORDER#}
         		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_RICHIESTE_GROUPER_BY_CARTELLA">
            <SQL>
            	<![CDATA[
		        	WITH
					 	CDC_FILTRI AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO  = 'GROUPER_FILTRO_REPARTO') ,
					  	STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA_GROUPER')
					SELECT
					  	ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || TO_CHAR(TO_DATE(ANAG.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					 	ANAG.NOME, ANAG.IDEN IDEN_ANAGRAFICA, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA, ANAG.IDEN IDEN_ANAG,
					  	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.STRUTTURA,CONTATTI.ANNO,CONTATTI.CARTELLA,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO, TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	TO_CHAR(MV.DATA,'yyyyMMdd') DATA_STATO_CARTELLA,
					  	(SELECT DESCRIZIONE FROM FX$PERSONALE WHERE IDEN = EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="UTENTE_TARIFFAZIONE"]')) AS UTENTE_TARIFFAZIONE,
					  	EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="DATA_TARIFFAZIONE"]') AS DATA_TARIFFAZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO,
					  	CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					  	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME,
					  	CODIFICHE.ENCODETIPO(CONTATTI.REGIME) AS REGIME_CODICE,
					  	CODIFICHE.ENCODETIPO(MV.STATO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS CODICE_STATO_CARTELLA,
					 	CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					  	CONTATTI.CODICE_DRG, DRG24.DESCRIZIONE DESCRDRG, DRG24.DRG_ANOMALO, DRG24.LEA, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,ADT_GROUPER.GETRESPONSEGROUPER(CONTATTI.IDEN) ESITO_GROUPER,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(TO_CHAR(DATA_INIZIO,'DD/MM/YYYY HH24:MI')),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DATA_RICHIESTA,
						(SELECT DBMS_LOB.SUBSTR(wm_concat(iden_richiesta||'|'||TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi')||'|'||stato_richiesta||'|'||stato_ric_cartella),4000,1) FROM VIEW_CONTATTI_RICHIESTE WHERE IDEN_CONTATTO = CONTATTI.IDEN) AS DETTAGLIO_RICHIESTA,
					  	ADT_MOVIMENTI_CARTELLA.GET_STATO_DETTAGLIO(MV.IDEN_CONTATTO) as STATO_RICHIESTA,
					  	ADT_MOVIMENTI_CARTELLA.GET_COD_STATO_RICHIESTA(mv.iden_contatto) AS cod_stato_richiesta
					FROM CONTATTI
					  	JOIN FX$ANAGRAFICA ANAG ON ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
					  	LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO = 'S')
					  	LEFT JOIN DRG24 ON (CONTATTI.CODICE_DRG = DRG24.DRG)
					WHERE
						CONTATTI.CDC_ULTIMO_GIURIDICO in (SELECT * FROM CDC_FILTRI)
					  	AND (MV.STATO IN (SELECT * FROM STATO_CARTELLA) or (SELECT COUNT(*) FROM STATO_CARTELLA)=0)
					  	AND CONTATTI.STATO = CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA) AND CONTATTI.DELETED = 'N'
					  	AND CONTATTI.CARTELLA = :c_cartella
					  	AND (:c_anno is null OR CONTATTI.ANNO=:c_anno)
					  	AND (:c_struttura is null OR CONTATTI.STRUTTURA=:c_struttura)
					  	AND CONTATTI.ASSIGNING_AUTHORITY_AREA IN ('ADT','AMB')
                	{#ORDER#}
         		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_CARTELLE_BY_CARTELLA">
            <SQL>
            	<![CDATA[
            		WITH

				  		STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA')
				  	SELECT
				    	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.IDEN_ANAGRAFICA,
				    	CONTATTI.CODICE_DRG, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,
					    ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || substr(ANAG.DATA_NASCITA,7) ||'/'|| substr(ANAG.DATA_NASCITA,5,2)||'/'|| substr(ANAG.DATA_NASCITA,0,4) ASSISTITO,
					    ANAG.NOME, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INI,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FIN,
					    MV.STATO, TO_CHAR(MV.DATA,'DD/MM/YYYY') DATA,
					    CODIFICHE.ENCODETIPO(MV.STATO) AS CODICE_STATO_CARTELLA,
					    CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					    CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS CDCDESCR,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					    (SELECT COUNT(IDEN)FROM RICHIESTE_MOV_CARTELLA_DETT WHERE IDEN_CONTATTO=CONTATTI.IDEN) AS N_RICHIESTE,
					    CONTATTI.ASSIGNING_AUTHORITY_AREA,
					    (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = CONTATTI.STATO) STATO_CONTATTO
					FROM
				  		CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
				  		LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S' AND MV.DELETED='N')
				    WHERE
                                                CONTATTI.deleted = 'N'
				  		and MV.STATO IN (SELECT * FROM STATO_CARTELLA)

				  		AND CONTATTI.CARTELLA = :c_cartella
                        AND CONTATTI.ANNO = :c_anno
                        AND CONTATTI.STRUTTURA = :c_struttura
					{#ORDER#}
				]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_CARTELLE_BY_DATI_ANAGRAFICI">
            <SQL>
            	<![CDATA[
            		WITH
				  		CDC_FILTRI AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO  = 'FILTRO_ARCHIVIO_REPARTO'),
				  		STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA')
				  	SELECT
				    	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.IDEN_ANAGRAFICA,
				    	CONTATTI.CODICE_DRG, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,
					    ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || substr(ANAG.DATA_NASCITA,7) ||'/'|| substr(ANAG.DATA_NASCITA,5,2)||'/'|| substr(ANAG.DATA_NASCITA,0,4) ASSISTITO,
					    ANAG.NOME, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INI,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FIN,
					    MV.STATO, TO_CHAR(MV.DATA,'DD/MM/YYYY') DATA,
					    CODIFICHE.ENCODETIPO(MV.STATO) AS CODICE_STATO_CARTELLA,
					    CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					    CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS CDCDESCR,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					    (SELECT COUNT(IDEN)FROM RICHIESTE_MOV_CARTELLA_DETT WHERE IDEN_CONTATTO=CONTATTI.IDEN) AS N_RICHIESTE,
					    CONTATTI.ASSIGNING_AUTHORITY_AREA,
					    (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = CONTATTI.STATO) STATO_CONTATTO
					FROM
				  		CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
				  		LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S' AND MV.DELETED='N')
				    WHERE
				  		CONTATTI.deleted = 'N'
				  		and MV.STATO IN (SELECT * FROM STATO_CARTELLA)
				  		AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT * FROM CDC_FILTRI)
				  		AND COGNOME LIKE :cognome
				  		AND NOME LIKE :nome
					{#ORDER#}
				]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_CARTELLE_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
            		WITH
				  		CDC_FILTRI AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO  = 'FILTRO_ARCHIVIO_REPARTO'),
				  		STATO_CARTELLA AS (SELECT CODICE_NUMBER FROM FX$FILTRI WHERE USERNAME = :username AND ID_FILTRO = 'FILTRO_STATO_CARTELLA')
				  	SELECT
				    	CONTATTI.IDEN IDEN_CONTATTO, CONTATTI.CODICE, CONTATTI.IDEN_ANAGRAFICA,
				    	CONTATTI.CODICE_DRG, CONTATTI.IMPORTO_DRG, CONTATTI.IMPORTO_DRG_FUORISOGLIA,
					    ANAG.COGNOME || ' ' || ANAG.NOME || ' ' || substr(ANAG.DATA_NASCITA,7) ||'/'|| substr(ANAG.DATA_NASCITA,5,2)||'/'|| substr(ANAG.DATA_NASCITA,0,4) ASSISTITO,
					    ANAG.NOME, ANAG.COGNOME, ANAG.CODICE_FISCALE, ANAG.SESSO, ANAG.DATA_NASCITA,
					    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INI,
					    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FIN,
					    MV.STATO, TO_CHAR(MV.DATA,'DD/MM/YYYY') DATA,
					    CODIFICHE.ENCODETIPO(MV.STATO) AS CODICE_STATO_CARTELLA,
					    CODIFICHE.DESCRIBETIPO(MV.STATO) AS STATO_CARTELLA,
					    CONTATTI.CDC_ULTIMO_GIURIDICO AS IDEN_CDC,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS CDCDESCR,
					    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = MV.IDEN_ARCHIVIO) AS ARCHIVIO,
					    (SELECT COUNT(IDEN)FROM RICHIESTE_MOV_CARTELLA_DETT WHERE IDEN_CONTATTO=CONTATTI.IDEN) AS N_RICHIESTE,
					    CONTATTI.ASSIGNING_AUTHORITY_AREA,
					    (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = CONTATTI.STATO) STATO_CONTATTO
					FROM
				  		CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAG ON  ANAG.IDEN = CONTATTI.IDEN_ANAGRAFICA
				  		LEFT JOIN MOVIMENTI_CARTELLA MV ON (CONTATTI.IDEN = MV.IDEN_CONTATTO AND MV.ATTIVO='S' AND MV.DELETED='N')
				    WHERE
				  		CONTATTI.deleted = 'N'
				  		and MV.STATO IN (SELECT * FROM STATO_CARTELLA)
				  		AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT * FROM CDC_FILTRI)
				  		AND CONTATTI.DATA_FINE >= TO_DATE(:da_data,'yyyyMMdd')
				  		AND CONTATTI.DATA_FINE <= TO_DATE(:a_data,'yyyyMMdd') + 1
					{#ORDER#}
				]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_RICHIESTE_CARTELLE_BY_IDEN_RICHIESTA">
            <SQL>
            	<![CDATA[
               		SELECT
					  	VCR.IDEN_CONTATTO, COGNOME, DATA_MORTE, NOME, DATA_NASCITA, VCR.IDEN_ANAGRAFICA, COGNOME || ' ' || NOME || ' ' || TO_CHAR(TO_DATE(DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	STRUTTURA, ANNO, CARTELLA, CODICE_REGIME, TO_CHAR(DATA_RIC,'yyyyMMddhh24mi') AS DATA_RIC,
					  	TO_CHAR(DATA_DIM,'yyyyMMddhh24mi') AS DATA_DIM, REPARTO_DIMISSIONE, IDEN_CDC, VCR.IDEN_RICHIESTA, VCR.STATO_RICHIESTA, VCR.COD_STATO_RICHIESTA,
					  	TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi') AS DATA_INIZIO, TO_CHAR(DATA_STATO,'yyyyMMddhh24mi') AS DATA_STATO,
					  	VCR.COD_RIC_CARTELLA,VCR.STATO_RIC_CARTELLA,VCR.COD_STATO_CARTELLA CODICE_STATO_CARTELLA,VCR.STATO_CARTELLA,TO_CHAR(DATA_STATO_CARTELLA,'yyyyMMddhh24mi') AS DATA_STATO_CARTELLA,
					  	GETGIORNIRICHIESTA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO) GG,
					  	DECODE(URGENZA,'1','Si',null) as URGENTE,
					  	TO_CHAR(GETDATASCADENZA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO),'YYYYMMDD') DATASCADENZA,
						VCR.IDEN_STATO,
					  	VCR.DATA_SOLLECITO,
					  	VCR.ASSIGNING_AUTHORITY_AREA as ASSIGNING_AUTHORITY_AREA,
		  	            (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = (select STATO from contatti where iden = 	VCR.IDEN_CONTATTO)) STATO_CONTATTO
					FROM VIEW_CONTATTI_RICHIESTE VCR
					WHERE
					  	IDEN_RICHIESTA = :iden_richiesta
				 	{#ORDER#}
        		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_RICHIESTE_CARTELLE_BY_DATI_ANAGRAFICI">
            <SQL>
            	<![CDATA[
            		WITH
            			Q_FILTRO_STATO AS (SELECT CODICE_NUMBER AS IDEN FROM FX$FILTRI WHERE ID_FILTRO = 'FILTRO_STATO_CARTELLA_RICHIESTA' AND USERNAME = :username)
               		SELECT
					  	VCR.IDEN_CONTATTO, COGNOME, DATA_MORTE, NOME, DATA_NASCITA, VCR.IDEN_ANAGRAFICA, COGNOME || ' ' || NOME || ' ' || TO_CHAR(TO_DATE(DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	STRUTTURA, ANNO, CARTELLA, CODICE_REGIME, TO_CHAR(DATA_RIC,'yyyyMMddhh24mi') AS DATA_RIC,
					  	TO_CHAR(DATA_DIM,'yyyyMMddhh24mi') AS DATA_DIM, REPARTO_DIMISSIONE, IDEN_CDC, VCR.IDEN_RICHIESTA, VCR.STATO_RICHIESTA, VCR.COD_STATO_RICHIESTA,
					  	TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi')  AS DATA_INIZIO, TO_CHAR(DATA_STATO,'yyyyMMddhh24mi') AS DATA_STATO,
					  	VCR.COD_RIC_CARTELLA,VCR.STATO_RIC_CARTELLA,VCR.COD_STATO_CARTELLA CODICE_STATO_CARTELLA,VCR.STATO_CARTELLA,TO_CHAR(DATA_STATO_CARTELLA,'yyyyMMddhh24mi') AS DATA_STATO_CARTELLA,
					  	GETGIORNIRICHIESTA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO) GG,
					  	DECODE(URGENZA,'1','Si',null) as URGENTE,
					  	TO_CHAR(GETDATASCADENZA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO),'YYYYMMDD') DATASCADENZA,
						VCR.IDEN_STATO,
					  	VCR.DATA_SOLLECITO,
					  	VCR.ASSIGNING_AUTHORITY_AREA as ASSIGNING_AUTHORITY_AREA,
		  	            (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = (select STATO from contatti where iden = 	VCR.IDEN_CONTATTO)) STATO_CONTATTO
					FROM VIEW_CONTATTI_RICHIESTE VCR
					WHERE
						COGNOME LIKE :cognome AND
						NOME LIKE :nome AND
					  	(:data_nascita IS NULL OR DATA_NASCITA = :data_nascita) AND
					  	((SELECT IDEN FROM Q_FILTRO_STATO WHERE ROWNUM <= 1) IS NULL OR IDEN_STATO_RICHIESTA IN (SELECT IDEN FROM Q_FILTRO_STATO))
					{#ORDER#}
        		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_RICHIESTE_CARTELLE_BY_CARTELLA">
            <SQL>
            	<![CDATA[
            		WITH
            			Q_FILTRO_STATO AS (SELECT CODICE_NUMBER AS IDEN FROM FX$FILTRI WHERE ID_FILTRO = 'FILTRO_STATO_CARTELLA_RICHIESTA' AND USERNAME = :username)
               		SELECT
					  	VCR.IDEN_CONTATTO, COGNOME, DATA_MORTE, NOME, DATA_NASCITA, VCR.IDEN_ANAGRAFICA, COGNOME || ' ' || NOME || ' ' || TO_CHAR(TO_DATE(DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	STRUTTURA, ANNO, CARTELLA, CODICE_REGIME, TO_CHAR(DATA_RIC,'yyyyMMddhh24mi') AS DATA_RIC,
					  	TO_CHAR(DATA_DIM,'yyyyMMddhh24mi') AS DATA_DIM, REPARTO_DIMISSIONE, IDEN_CDC, VCR.IDEN_RICHIESTA, VCR.STATO_RICHIESTA, VCR.COD_STATO_RICHIESTA,
					  	TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi')  AS DATA_INIZIO, TO_CHAR(DATA_STATO,'yyyyMMddhh24mi') AS DATA_STATO,
					  	VCR.COD_RIC_CARTELLA,VCR.STATO_RIC_CARTELLA,VCR.COD_STATO_CARTELLA CODICE_STATO_CARTELLA,VCR.STATO_CARTELLA,TO_CHAR(DATA_STATO_CARTELLA,'yyyyMMddhh24mi') AS DATA_STATO_CARTELLA,
					  	GETGIORNIRICHIESTA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO) GG,
					  	DECODE(URGENZA,'1','Si',null) as URGENTE,
					  	TO_CHAR(GETDATASCADENZA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO),'YYYYMMDD') DATASCADENZA,
						VCR.IDEN_STATO,
					  	VCR.DATA_SOLLECITO,
					  	VCR.ASSIGNING_AUTHORITY_AREA  as ASSIGNING_AUTHORITY_AREA,
		  	            (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = (select STATO from contatti where iden = 	VCR.IDEN_CONTATTO)) STATO_CONTATTO
					FROM VIEW_CONTATTI_RICHIESTE VCR
					WHERE
						CARTELLA = TO_CHAR(:cartella) AND
						(:anno IS NULL OR ANNO = :anno) AND
					  	(:struttura IS NULL OR STRUTTURA = TO_CHAR(:struttura)) AND
					  	((SELECT IDEN FROM Q_FILTRO_STATO WHERE ROWNUM <= 1) IS NULL OR IDEN_STATO_RICHIESTA IN (SELECT IDEN FROM Q_FILTRO_STATO))
					{#ORDER#}
        		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_GESTIONE_RICHIESTE_CARTELLE_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
            		WITH
            			Q_FILTRO_STATO AS (SELECT CODICE_NUMBER AS IDEN FROM FX$FILTRI WHERE ID_FILTRO = 'FILTRO_STATO_CARTELLA_RICHIESTA' AND USERNAME = :username)
               		SELECT
					  	VCR.IDEN_CONTATTO, COGNOME, DATA_MORTE, NOME, DATA_NASCITA, VCR.IDEN_ANAGRAFICA, COGNOME || ' ' || NOME || ' ' || TO_CHAR(TO_DATE(DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	STRUTTURA, ANNO, CARTELLA, CODICE_REGIME, TO_CHAR(DATA_RIC,'yyyyMMddhh24mi') AS DATA_RIC,
					  	TO_CHAR(DATA_DIM,'yyyyMMddhh24mi') AS DATA_DIM, REPARTO_DIMISSIONE, IDEN_CDC, VCR.IDEN_RICHIESTA, VCR.STATO_RICHIESTA, VCR.COD_STATO_RICHIESTA,
					  	TO_CHAR(DATA_INIZIO,'yyyyMMddhh24:mi') AS DATA_INIZIO, TO_CHAR(DATA_STATO,'yyyyMMddhh24mi') AS DATA_STATO,
					  	VCR.COD_RIC_CARTELLA,VCR.STATO_RIC_CARTELLA,VCR.COD_STATO_CARTELLA CODICE_STATO_CARTELLA,VCR.STATO_CARTELLA,TO_CHAR(DATA_STATO_CARTELLA,'yyyyMMddhh24mi') AS DATA_STATO_CARTELLA,
					  	GETGIORNIRICHIESTA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO) GG,
					  	DECODE(URGENZA,'1','Si',null) as URGENTE,
					  	TO_CHAR(GETDATASCADENZA(VCR.IDEN_RICHIESTA,VCR.IDEN_CONTATTO),'YYYYMMDD') DATASCADENZA,
						VCR.IDEN_STATO,
					  	VCR.DATA_SOLLECITO,
					  	VCR.ASSIGNING_AUTHORITY_AREA  as ASSIGNING_AUTHORITY_AREA,
		  	            (SELECT CODICE_DECODIFICA FROM TIPI WHERE IDEN = (select STATO from contatti where iden = 	VCR.IDEN_CONTATTO)) STATO_CONTATTO
                    FROM VIEW_CONTATTI_RICHIESTE VCR
					WHERE
						DATA_INIZIO >= TO_DATE(:da_data,'YYYYMMDD') AND
						DATA_INIZIO <= TO_DATE(:a_data,'YYYYMMDD')+1 AND
						((SELECT IDEN FROM Q_FILTRO_STATO WHERE ROWNUM <= 1) IS NULL OR IDEN_STATO_RICHIESTA IN (SELECT IDEN FROM Q_FILTRO_STATO))
					{#ORDER#}
        		]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_PRESTAZIONI_CDCDEST_DSA">
            <SQL>select distinct Dett.iden,to_char(rrt.data_ricetta,'YYYYMMDD') data_ric,rrt.tipo_ricetta,rrt.categoria_ricetta,rrt.classe_priorita,rrt.numero_poligrafo,rrt.stato,rrt.stampato,
                vdsap.prestazione,vdsap.codice_ises,vdsap.lateralita,
                rrt.iden iden_ricetta,rrt.cod_esenzione,rrt.quesito,GETREPARTODESTINATARIO(rrt.classe_priorita, vdsap.codice_ises, vdsap.lateralita, :struttura) cdc_destinatario
                from FX$RICETTA_ROSSA_TESTATA_DSA rrt
                join FX$RICETTA_ROSSA_DETTAGLIO_DSA Dett on (rrt.iden=dett.iden_testata)
                inner join view_dsa_prestazioni_sia vdsap on (dett.cod_prescrizione=vdsap.codice_prestazione and vdsap.progressivo=:progressivo)
                inner join FX$MMG_ACCERTAMENTI_DSA acc on (acc.iden_ricetta=rrt.iden)
                where acc.iden_accesso=:idenContatto and rrt.tipo_ricetta='P' and acc.deleted='N' and acc.data_esecuzione is null
                order by cdc_destinatario, rrt.numero_poligrafo
            </SQL>
            <BINDS>
                <BIND id="idenContatto" value="#IDEN_CONTATTO#" type="N"></BIND>
                <BIND id="progressivo" value="#PROGRESSIVO#" type="V"></BIND>
                <BIND id="struttura" value="#STRUTTURA#" type="V"></BIND>
            </BINDS>
        </QUERY>
        <QUERY id="WK_DATI_RICHIESTA">
            <SQL>select distinct rmv.iden_originale,tStato.descrizione stato_richiesta,
				to_char(rmv.data_inizio,'DD/MM/YYYY hh24:mi') data_ora_inizio,rmv.data,
				to_char(rmv.data,'DD/MM/YYYY hh24:mi') data_ora_stato,
                (select descrizione from fx$personale where iden = rmv.iden_per) UTE_INS
				from adt_bck.richieste_movimenti_cartella rmv
			    inner join tipi tStato on (rmv.iden_stato=tStato.iden)
				where iden_originale=:idenRichiesta and rmv.deleted='N'
				order by rmv.data
            </SQL>
        </QUERY>
        <QUERY id="WK_DATI_RICHIESTA_CARTELLA">
            <SQL>select rmvd.iden_richiesta,tStato.descrizione stato_richiesta,
                to_char(rmvd.data_stato,'DD/MM/YYYY hh24:mi') data_ora_stato,c.codice cartella,
                (select descrizione from fx$personale where iden = rmvd.iden_per) UTE_INS
                from adt_bck.richieste_mov_cartella_dett rmvd
                inner join tipi tStato on (rmvd.iden_stato=tStato.iden)
                inner join contatti c on (rmvd.iden_contatto=c.iden)
                where iden_richiesta=:idenRichiesta
                order by c.codice,rmvd.data_stato
            </SQL>
        </QUERY>
        <QUERY id="WK_STATO_CARTELLA">
            <SQL>select mv.iden,mv.struttura,mv.anno,mv.cartella, tipi.descrizione stato_cartella,to_char(data,'DD/MM/YYYY HH24:MI') data_stato ,tArch.descrizione archivio,iden_richiesta
                from movimenti_cartella mv
                inner join tipi on (mv.stato=tipi.iden)
                left join fx$centri_di_costo tArch on (mv.iden_archivio=tArch.iden)
                where mv.deleted='N' and mv.iden_contatto=:IDEN_CONTATTO order by data,mv.iden
            </SQL>
        </QUERY>
        <QUERY id="WK_LISTE_ATTESA">
            <SQL>
                select
                iden,
                descrizione ,
                (select WM_CONCAT(descrizione) from FX$CENTRI_DI_COSTO where iden In (select iden_cdc from lista_attesa_cdc where iden_lista = LISTA_ATTESA_ELENCO.iden and cdc_prericovero = 'N') )REPARTI
                from LISTA_ATTESA_ELENCO
                where DESCRIZIONE like '%'||:DescrLista and attivo = 'S' and lista_chiamata = 'N'
            </SQL>
        </QUERY>
        <QUERY id="WK_LISTE_CHIAMATA">
            <SQL>
                select
                iden,
                descrizione ,
                (select WM_CONCAT(descrizione) from lista_attesa_elenco where id_lista_chiamata  = LISTA_CHIAMATA.iden) LISTE
                from LISTA_ATTESA_ELENCO LISTA_CHIAMATA
                where DESCRIZIONE like '%'||:DescrLista and attivo = 'S' and lista_chiamata = 'S'
            </SQL>
        </QUERY>
        <QUERY id="WK_RIC_PRERICOVERO">
            <SQL>
				<![CDATA[
				SELECT
					CONTATTI.CODICE, CONTATTI.IDEN, ANAGRAFICA.NOME, ANAGRAFICA.COGNOME, ANAGRAFICA.CODICE_FISCALE, CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS URGENZA, DATA_FINE, STATO,
					TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMddhh24:mi') AS DATA_INIZIO
				FROM
					CONTATTI
					INNER JOIN FX$ANAGRAFICA ANAGRAFICA ON CONTATTI.IDEN_ANAGRAFICA =  ANAGRAFICA.IDEN
				WHERE
					IDEN_ANAGRAFICA = :iden_anagrafica AND CONTATTI.DELETED = 'N'
					AND REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO','3',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
					AND STATO <> CODIFICHE.DECODETIPO('STATO','DISCHARGED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
				{#ORDER#}
				]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_ACCESSI_DH">
		<SQL>
			<![CDATA[
            		SELECT
  						TO_CHAR(CA.DATA_INIZIO,'DD/MM/YYYY HH24:Mi') AS DATA_INIZIO,
  						TO_CHAR(ca.data_inizio,'YYYYMMDDHH24:Mi') AS DATA_INIZIO_ISO,
  						TO_CHAR(CA.DATA_FINE,'DD/MM/YYYY HH24:MI') DATA_FINE,
  						DECODE(ADT.CODIFICHE.ENCODETIPO(CA.STATO),'DISCHARGED','CHIUSO','ADMITTED','APERTO','NON CODIFICATO') AS STATO_ACCESSO_DESCRIZIONE,
  						ADT.CODIFICHE.ENCODETIPO(CA.STATO) AS STATO_ACCESSO_CODICE,
  						ADT.CODIFICHE.ENCODETIPO(CONTATTI.STATO) AS STATO_CONTATTO_CODICE,
  						(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CA.IDEN_CDC) AS REP_ASS ,
  						(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REP_GIU,
  						CA.IDEN_CONTATTO, CA.IDEN IDEN_CONTATTO_ASSISTENZIALE, CONTATTI.SEGMENTO_ULTIMO_GIURIDICO as IDEN_CONTATTO_GIURIDICO,CONTATTI.IDEN_ANAGRAFICA,CONTATTI.CODICE,
  						DECODE(CODIFICHE.ENCODETIPO(CONTATTI.MOTIVO),'O','S','S','S','N') AS IS_ODS,
						CA.ACCESSO, CA.IDEN_PARENT, CA.IDEN_PRECEDENTE
					FROM
  						CONTATTI
  						INNER JOIN CONTATTI_ASSISTENZIALI CA ON (CA.IDEN_CONTATTO = CONTATTI.IDEN)
					WHERE
			  			CA.IDEN_CONTATTO = :idenContatto AND CA.IDEN_PARENT IS NULL AND CA.DELETED = 'N'
          			{#ORDER#}
				]]>
			</SQL>
		</QUERY>
		<QUERY id="WK_ACCESSI_DH_TRASFERIMENTI">
			<SQL>
				<![CDATA[
            		SELECT
  						TO_CHAR(CA.DATA_INIZIO,'DD/MM/YYYY HH24:Mi') AS DATA_INIZIO,
  						TO_CHAR(ca.data_inizio,'YYYYMMDDHH24:Mi') AS DATA_INIZIO_ISO,
  						TO_CHAR(CA.DATA_FINE,'DD/MM/YYYY HH24:MI') DATA_FINE,
  						DECODE(ADT.CODIFICHE.ENCODETIPO(CA.STATO),'DISCHARGED','CHIUSO','ADMITTED','APERTO','NON CODIFICATO') AS STATO_ACCESSO_DESCRIZIONE,
  						ADT.CODIFICHE.ENCODETIPO(CA.STATO) AS STATO_ACCESSO_CODICE,
  						ADT.CODIFICHE.ENCODETIPO(CONTATTI.STATO) AS STATO_CONTATTO_CODICE,
  						(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CA.IDEN_CDC) AS REP_ASS ,
  						(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REP_GIU,
  						CA.IDEN_CONTATTO, CA.IDEN IDEN_CONTATTO_ASSISTENZIALE, CONTATTI.SEGMENTO_ULTIMO_GIURIDICO as IDEN_CONTATTO_GIURIDICO,CONTATTI.IDEN_ANAGRAFICA,CONTATTI.CODICE,
  						DECODE(CODIFICHE.ENCODETIPO(CONTATTI.MOTIVO),'O','S','S','S','N') AS IS_ODS,
						CA.ACCESSO, CA.IDEN_PARENT, CA.IDEN_PRECEDENTE
					FROM
  						CONTATTI
  						INNER JOIN CONTATTI_ASSISTENZIALI CA ON (CA.IDEN_CONTATTO = CONTATTI.IDEN)
					WHERE
			  			CA.IDEN_CONTATTO = :IDEN_CONTATTO AND CA.IDEN_PARENT = :IDEN_PARENT AND CA.DELETED = 'N'
          			{#ORDER#}
				]]>
			</SQL>
		</QUERY>
         <QUERY id="WK_ACCESSI_DSA">
            <SQL>select IDEN,IDEN_CONTATTO,IDEN_CONTATTO_GIURIDICO,IDEN_PROVENIENZA,TO_CHAR(DATA_INIZIO,'yyyyMMdd') DATA_INI, TO_CHAR(DATA_INIZIO,'HH24:MI') ORA_INI,
						TO_CHAR(DATA_FINE,'yyyyMMdd') DATA_FINE,TO_CHAR(DATA_FINE,'HH24:MI') ORA_FINE,STATO,NOTE,IDEN_CDC
						from contatti_assistenziali where deleted='N' and iden_contatto=:idenContatto
                		{#ORDER#}
             </SQL>
        </QUERY>
        <QUERY id="WK_RICHIESTE_DSA_APERTI">
            <SQL>select
                (select descr from centri_di_costo@whale where cod_cdc =tr.cdc ) descr_cdc,
                np.num_nosologico, np.iden_anag iden_anagrafica,
                anag.cogn || ' ' || anag.nome ||  ' ' || substr(ANAG.DATA,7) ||'/'|| substr(ANAG.DATA,5,2)||'/'|| substr(ANAG.DATA,0,4) ASSISTITO,
                cdc.descr reparto,
                substr(tr.data_richiesta,7) || '/' || substr(tr.data_richiesta,5,2) || '/' || substr(tr.data_richiesta,0,4) data_richiesta,tr.ora_richiesta,
                substr(tr.data_proposta,7) || '/' || substr(tr.data_proposta,5,2) || '/' || substr(tr.data_proposta,0,4) data_proposta,tr.ora_proposta,
                tr.iden,tr.stato_richiesta,tr.cdc cdc_destinatario,tr.metodica,tr.tipologia_richiesta,tr.id_richiesta,
                (select wm_concat(tab_esa.descr) from tab_esa@whale tab_esa inner join infoweb.dettaglio_richieste@whale dett on (dett.iden_tab_esa=tab_esa.iden) where iden_testata=tr.iden) prestazioni
                from nosologici_paziente@whale np
                inner join infoweb.testata_richieste@whale tr on (np.iden=tr.iden_visita)
                inner join anag@whale on (np.iden_anag=anag.iden)
                inner join centri_di_costo@whale cdc on (np.cod_cdc=cdc.cod_cdc)
                inner join tab_tipo_ricovero@whale tiporic on (np.iden_tipo_ricovero=tiporic.iden)
                where
                tiporic.codice='AMB'
                and cdc.iden in  (select CODICE_NUMBER from FX$FILTRI where USERNAME = :username and ID_FILTRO = 'DSA_RICH_FILTRO_REPARTO')
                and tr.stato_richiesta in (select codice_varchar from fx$filtri where USERNAME = :username and ID_FILTRO = 'RICHIESTE_DSA_FILTRO')
                {#ORDER#}
            </SQL>
        </QUERY>
        <QUERY id="WK_PREST_ACCESSO_INFO_DIALOG">
        	<SQL>select prestazione FROM view_dsa_prestazioni_sia vdsa
						inner join FX$MMG_ACCERTAMENTI_DSA acc on (vdsa.codice_prestazione= acc.codice_accertamento)
						where progressivo= :progressivo and iden_accesso=:idenContatto AND data_esecuzione = :data_accesso
        	</SQL>
        </QUERY>
        <QUERY id="WK_STORICO_PAZIENTE">
            <SQL>
                SELECT
                	ANAG.IDEN AS IDEN_ANAGRAFICA,
                    (SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ACCETTAZIONE_GIURIDICO ) AS IS_CDC_GIURIDICO_UTENTE,
                    (SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ULTIMO_GIURIDICO ) AS IS_CDC_GIURIDICO_ATTUALE,
                    (SELECT DECODE(COUNT(1),1,'S','N') FROM FX$WEB_CDC WEBCDC JOIN FX$CENTRI_DI_COSTO CDC ON WEBCDC.REPARTO = CDC.COD_CDC WHERE WEBUSER     = :username AND CDC.ATTIVO    = 'S' AND CDC.IDEN      = CONTATTI.CDC_ULTIMO_ASSISTENZIALE ) AS IS_CDC_ASSISTENZIALE_ATTUALE,
                    ADT_REPARTI.COMPLETE_PROVENIENZA(PROVENIENZA(NULL,NULL,CDC_ULTIMO_GIURIDICO)).CODICE AS CDC_DIMISSIONE_CODICE,
                    ADT_REPARTI.COMPLETE_PROVENIENZA(PROVENIENZA(NULL,NULL,CDC_ACCETTAZIONE_GIURIDICO)).CODICE AS CDC_ACCETTAZIONE_CODICE,CONTATTI.CODICE,
                    CONTATTI.IDEN AS IDEN_CONTATTO,
                    CONTATTI.ASSIGNING_AUTHORITY_AREA AS ASSIGNING_AUTHORITY_AREA,
                    CODIFICHE.ENCODETIPO(CONTATTI.REGIME, CONTATTI.ASSIGNING_AUTHORITY_AREA) AS REGIME_RICOVERO_CODICE,
                    CODIFICHE.ENCODETIPO(CONTATTI.TIPO, CONTATTI.ASSIGNING_AUTHORITY_AREA) AS TIPO_RICOVERO_CODICE,
                    ANAG.COGNOME || ' '|| ANAG.NOME as ASSISTITO,
                    TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMddhh24:mi') DATA_INIZIO,
                    TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMddhh24:mi') DATA_FINE,
                    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CDC_ACCETTAZIONE_GIURIDICO) AS CDC_AMMISSIONE,
                    (SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CDC_ULTIMO_GIURIDICO) AS CDC_DIMISSIONE,
                    (select CODIFICHE.DESCRIBETIPO(STATO) from MOVIMENTI_CARTELLA where MOVIMENTI_CARTELLA.iden_contatto =  CONTATTI.IDEN and MOVIMENTI_CARTELLA.attivo = 'S' ) AS STATO_CARTELLA,
                    (select  descrizione from FX$CENTRI_DI_COSTO where iden = (select IDEN_ARCHIVIO from MOVIMENTI_CARTELLA where MOVIMENTI_CARTELLA.iden_contatto =  CONTATTI.IDEN and MOVIMENTI_CARTELLA.attivo = 'S' ) )AS ARCHIVIO,
                    CODIFICHE.DESCRIBETIPO(EXTRACTVALUE(CONTATTI.METADATI,'/METADATI/DATO[@KEY="ADT_DIMISSIONE_TIPO"]/@ID')) AS TIPO_DIMISSIONE
                FROM
                    CONTATTI
                    INNER JOIN FX$ANAGRAFICA ANAG ON ANAG.IDEN =  CONTATTI.IDEN_ANAGRAFICA
                WHERE
                    IDEN_ANAGRAFICA = :iden_anagrafica AND CONTATTI.DELETED = 'N'
                {#ORDER#}
            </SQL>
        </QUERY>
        <QUERY id="WK_PAC_APERTI">
            <SQL>
				<![CDATA[
                    WITH
					  	CDC_FILTRI AS
					  	(
					  		SELECT ADT_REPARTI.DECODEIDENPROVENIENZA(CODICE_NUMBER) AS CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'PAC_APERTI_REPARTO'
					  	)
					SELECT
						DISTINCT
				  		ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
				  		ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
				  		CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE, TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
		              	CODIFICHE.ENCODETIPO(CONTATTI.REGIME,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS REGIME_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
		              	CODIFICHE.ENCODETIPO(CONTATTI.TIPO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS TIPO_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.STATO) AS STATO,
				  		(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
				  		CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE
					FROM
				  		CONTATTI
				  		INNER JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN= CONTATTI.IDEN_ANAGRAFICA
				  		INNER JOIN CONTATTI_GIURIDICI GIURIDICO ON ( GIURIDICO.IDEN = CONTATTI.SEGMENTO_ULTIMO_GIURIDICO)
				  		INNER JOIN CONTATTI_SINTESI SINTESI ON SINTESI.IDEN_CONTATTO = CONTATTI.IDEN
					WHERE
				  		SINTESI.DELETED  ='N'
				  		AND SINTESI.ASSIGNING_AUTHORITY_AREA = 'AMB'
				  		AND SINTESI.STATO = CODIFICHE.DECODETIPO('STATO','ADMITTED',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
				  		AND SINTESI.REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO','AMB',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
				  		AND SINTESI.TIPO = CODIFICHE.DECODETIPO('ADT_ACC_RICOVERO_TIPO','PAC',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
                                                AND CONTATTI.ASSIGNING_AUTHORITY_AREA = 'AMB'
				  		AND SINTESI.NOME LIKE :nome
				  		AND SINTESI.COGNOME LIKE :cognome
				  		AND (:cartella  IS NULL OR SINTESI.CARTELLA = :cartella)
				  		AND SINTESI.CDC IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
				  	{#ORDER#}
                ]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_PAC_CHIUSI_BY_DATA_RANGE">
            <SQL>
            	<![CDATA[
	            	WITH
					  	CDC_FILTRI AS
					  	(
					  		SELECT ADT_REPARTI.DECODEIDENPROVENIENZA(CODICE_NUMBER) AS CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'PAC_CHIUSI_REPARTO'
					  	)
					SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
					  	ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					  	TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	CODIFICHE.ENCODETIPO(CONTATTI.REGIME,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS REGIME_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
		              	CODIFICHE.ENCODETIPO(CONTATTI.TIPO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS TIPO_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					  	'DIMESSO' AS STATO, 'DISCHARGED' AS STATO_CODICE,
					  	CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE
					FROM
					    CONTATTI
					    JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
					    CONTATTI.DELETED = 'N'
					    AND CONTATTI.STATO = CODIFICHE.DECODESTATO('DISCHARGED',CONTATTI.ASSIGNING_AUTHORITY_AREA)
					    AND CONTATTI.REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO','AMB',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
				  		AND CONTATTI.TIPO = CODIFICHE.DECODETIPO('ADT_ACC_RICOVERO_TIPO','PAC',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
                                                AND CONTATTI.ASSIGNING_AUTHORITY_AREA = 'AMB'
					    AND CONTATTI.DATA_FINE >= TO_DATE(:da_data,'yyyyMMdd')
					    AND CONTATTI.DATA_FINE < TO_DATE(:a_data,'yyyyMMdd') +1
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
					    AND ANAGRAFICA.NOME LIKE :nome
                                            AND ANAGRAFICA.COGNOME LIKE :cognome
              			AND (:cartella IS NULL OR CONTATTI.CARTELLA = :cartella )
              		{#ORDER#}
                ]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_PAC_CHIUSI_BY_CARTELLA">
            <SQL>
            	<![CDATA[
	            	WITH
					  	CDC_FILTRI AS
					  	(
					  		SELECT ADT_REPARTI.DECODEIDENPROVENIENZA(CODICE_NUMBER) AS CODICE_NUMBER
					  		FROM FX$FILTRI
					  		WHERE USERNAME = :username AND ID_FILTRO  = 'PAC_CHIUSI_REPARTO'
					  	)
					SELECT
						ANAGRAFICA.IDEN AS IDEN_ANAGRAFICA, ANAGRAFICA.COGNOME, ANAGRAFICA.SESSO,
					  	ANAGRAFICA.COGNOME || ' ' || ANAGRAFICA.NOME || ' ' || TO_CHAR(TO_DATE(ANAGRAFICA.DATA_NASCITA,'yyyyMMdd'),'dd/MM/yyyy') AS ASSISTITO,
					  	CONTATTI.IDEN AS IDEN_CONTATTO, CONTATTI.CODICE,
					  	TO_CHAR(CONTATTI.DATA_INIZIO,'yyyyMMdd') AS DATA_INIZIO,
					  	TO_CHAR(CONTATTI.DATA_FINE,'yyyyMMdd') AS DATA_FINE,
					  	CODIFICHE.ENCODETIPO(CONTATTI.REGIME,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS REGIME_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.REGIME) AS REGIME_RICOVERO_DESCRIZIONE,
		              	CODIFICHE.ENCODETIPO(CONTATTI.TIPO,CONTATTI.ASSIGNING_AUTHORITY_AREA) AS TIPO_RICOVERO_CODICE,
		              	CODIFICHE.DESCRIBETIPO(CONTATTI.TIPO) AS TIPO_RICOVERO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = CONTATTI.CDC_ULTIMO_GIURIDICO) AS REPARTO_GIURIDICO,
					  	'DIMESSO' AS STATO, 'DISCHARGED' AS STATO_CODICE,
					  	CONTATTI.SEGMENTO_ULTIMO_ASSISTENZIALE AS IDEN_CONTATTO_ASSISTENZIALE
					FROM
					    CONTATTI
					    JOIN FX$ANAGRAFICA ANAGRAFICA ON ANAGRAFICA.IDEN = CONTATTI.IDEN_ANAGRAFICA
					WHERE
					    CONTATTI.DELETED = 'N'
					    AND CONTATTI.STATO = CODIFICHE.DECODESTATO('DISCHARGED',CONTATTI.ASSIGNING_AUTHORITY_AREA)
					    AND CONTATTI.REGIME = CODIFICHE.DECODETIPO('ADT_REGIME_CONTATTO','AMB',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
				  		AND CONTATTI.TIPO = CODIFICHE.DECODETIPO('ADT_ACC_RICOVERO_TIPO','PAC',NULL,CONTATTI.ASSIGNING_AUTHORITY_AREA)
                                                AND CONTATTI.ASSIGNING_AUTHORITY_AREA = 'AMB'
					    AND CONTATTI.DATA_FINE >= TO_DATE(:da_data,'yyyyMMdd')
					    AND CONTATTI.DATA_FINE < TO_DATE(:a_data,'yyyyMMdd') +1
					    AND CONTATTI.CDC_ULTIMO_GIURIDICO IN (SELECT CODICE_NUMBER FROM CDC_FILTRI)
					    AND ANAGRAFICA.NOME LIKE :nome
                                            AND ANAGRAFICA.COGNOME LIKE :cognome
              			AND CONTATTI.CARTELLA = :cartella
              {#ORDER#}
                ]]>
        	</SQL>
        </QUERY>
        <QUERY id="WK_PAC_ACCESSI_PAZIENTE">
        	<SQL>
				<![CDATA[
                    SELECT
                    	ASSISTENZIALI.IDEN AS IDEN_ACCESSO,
  						CONTATTI.CODICE,
  						CONTATTI.IDEN AS IDEN_CONTATTO,
					  	TO_CHAR(ASSISTENZIALI.DATA_INIZIO,'yyyyMmdd') AS DATA_INIZIO,
					  	TO_CHAR(ASSISTENZIALI.DATA_INIZIO,'HH24:MI') AS ORA_INIZIO,
					 	TO_CHAR(ASSISTENZIALI.DATA_FINE,'HH24:MI') AS ORA_FINE,
					  	CODIFICHE.ENCODETIPO(ASSISTENZIALI.STATO) AS STATO_CODICE,
					  	CODIFICHE.ENCODETIPO(CONTATTI.STATO) AS STATO_CONTATTO_CODICE,
					  	DECODE(CODIFICHE.ENCODETIPO(ASSISTENZIALI.STATO), 'ADMITTED', 'APERTO', 'CHIUSO') AS STATO_DESCRIZIONE,
					  	(SELECT DESCRIZIONE FROM FX$CENTRI_DI_COSTO WHERE IDEN = ASSISTENZIALI.IDEN_CDC) AS REPARTO_GIURIDICO
					FROM
					  	CONTATTI
					  	INNER JOIN CONTATTI_ASSISTENZIALI ASSISTENZIALI ON ASSISTENZIALI.IDEN_CONTATTO = CONTATTI.IDEN
					WHERE
						CONTATTI.IDEN = :iden_contatto AND ASSISTENZIALI.DELETED = 'N'
				  	ORDER BY
				  		DATA_INIZIO
                ]]>
			</SQL>
        </QUERY>
        <QUERY id="WK_CONTRODEDUZIONI">
        	<SQL>
        	SELECT IDEN,REGIONE_ADDEBITANTE,OSP_INVIANTE,CODICE_ISTITUTO, presidio,ospedale,NUMERO_SCHEDA,
        	COGNOME_UTENTE,NOME_UTENTE,NUMERO_SCHEDA_MADRE,CODICE_FISCALE_UTENTE,SESSO_UTENTE,DATA_NASCITA_UTENTE, DATA_NASCITA,STATO_CIVILE,
			COMUNE_RESIDENZA,COMUNE_RES,USL_RESIDENZA,CITTADINANZA,MEDICO_PRESCRITTORE,ID,POSIZIONE_CONTABILE,
			REGIONE_INIZIALE_ADDEBITO,NUOVA_REGIONE_ADDEBITO,CODICE_FISCALE_UTENTE_SOGEI,REGIONE_RESIDENZA_SOGEI,USL_RESIDENZA_SOGEI,COMUNE_RESIDENZA_SOGEI,
			REGIONE_RESIDENZA_ASL,USL_RESIDENZA_ASL,REGIME_RICOVERO,DATA_RICOVERO,DATA_RICO,PROVENIENZA_PAZIENTE,REPARTO_AMMISSIONE,ONERE,TIPO_RICOVERO,TRAUMATISMI,
			REPARTO_DIMISSIONE,DATA_DIMISSIONE,DATA_DIMI,MODALITA_DIMISSIONE,RISCONTRO_AUTOPTICO,SISTEMA_CODIFICA_DIAGNOSI,
			DIAGNOSI_PRINCIPALE,DIAGNOSI_CONCOMITANTE_1,DIAGNOSI_CONCOMITANTE_2,DIAGNOSI_CONCOMITANTE_3,DIAGNOSI_CONCOMITANTE_4,DIAGNOSI_CONCOMITANTE_5,
			DATA_INTERVENTO_PRINCIPALE,DATA_INT_PRINC,INTERVENTO_PRINCIPALE,ALTRO_INTERVENTO_1,ALTRO_INTERVENTO_2,ALTRO_INTERVENTO_3,ALTRO_INTERVENTO_4,ALTRO_INTERVENTO_5,
			MOTIVO_RICOVERO_DH,NUMERO_GIORNI_DH,DRG,IMPORTO,ERRORI_ANAGRAFICI,ERRORI_RESIDENZA,ERRORI_PRESTAZIONE,ERRORI_RICOVERO,ERRORI_CHIAVE_RECORD,ERRORI_IMPORTO,
			ERRORI_DATA_PRESTAZIONE,ERRORI_ONERE,DRG_REG_RICEVENTE,DATA_PREN_RICOVERO,DATA_PREN_RICO,PESO_NASCITA,PRIORITA,IMPORTO_REG_RIC,REGIONE_CONTESTANTE,STATO
			FROM VIEW_CONTRODEDUZIONI
			WHERE STATO='OUTPUT' AND  anno= :ANNO
			AND ((SELECT CODICE_VARCHAR 	FROM FX$FILTRI WHERE USERNAME = :username and ID_FILTRO = 'CONTRODEDUZIONI_FILTRO_REGIONE') IS NULL OR REGIONE_CONTESTANTE = (SELECT CODICE_VARCHAR FROM FX$FILTRI WHERE USERNAME = :username and ID_FILTRO = 'CONTRODEDUZIONI_FILTRO_REGIONE'))
			AND ((SELECT CODICE_VARCHAR 	FROM FX$FILTRI WHERE USERNAME = :username and ID_FILTRO = 'CONTRODEDUZIONI_FILTRO_ISTITUTO') IS NULL OR CODICE_ISTITUTO = (SELECT CODICE_VARCHAR FROM FX$FILTRI WHERE USERNAME = :username and ID_FILTRO = 'CONTRODEDUZIONI_FILTRO_ISTITUTO'))
        	{#ORDER#}
        	</SQL>
        </QUERY>
    </QUERY_GROUP>
</QUERIES>