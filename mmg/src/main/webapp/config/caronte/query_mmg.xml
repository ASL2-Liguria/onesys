<?xml version = "1.0"?>
<QUERIES>
	<QUERY_GROUP id="PARAMETRI">
		<QUERY id="ALCOL">
			<SQL>SELECT 'ALCOL' PARAMETRO, ALCOL ||' - Data: '||TO_CHAR(DATA_INS,
				'dd/MM/yyyy') VALORE, NOTE_ALCOL FROM MMG_ACCERT_RILEVAZIONI WHERE
				IDEN_ANAG = :iden_anag AND ROWNUM &lt;2 AND TIPO_RILEVAZIONE =
				'ALCOL' ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="ALTEZZA">
			<SQL>SELECT 'ALTEZZA' PARAMETRO, ALTEZZA ||' - Data:
				'||TO_CHAR(DATA_INS, 'dd/MM/yyyy') VALORE FROM
				MMG_ACCERT_RILEVAZIONI WHERE IDEN_ANAG = :iden_anag AND ROWNUM &lt;2
				AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA' ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="BMI">
			<SQL>SELECT 'BMI' PARAMETRO, BMI ||' - Data: '||TO_CHAR(DATA_INS,
				'dd/MM/yyyy') VALORE FROM MMG_ACCERT_RILEVAZIONI WHERE IDEN_ANAG =
				:iden_anag AND ROWNUM &lt;2 AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA'
				ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="CARDIO">
			<SQL>SELECT 'FREQUENZA CARDIACA' PARAMETRO, FREQUENZA||' - Data:
				'||TO_CHAR(DATA_INS, 'dd/MM/yyyy') VALORE , RITMO, AMPIEZZA,
				SIMMETRIA FROM MMG_ACCERT_CARDIO WHERE IDEN_ANAG = :iden_anag AND
				ROWNUM &lt;2 ORDER BY DATA_INS DESC</SQL>
		</QUERY>
		<QUERY id="FUMO">
			<SQL>SELECT 'FUMO' PARAMETRO, FUMO ||' - Data: '||TO_CHAR(DATA_INS,
				'dd/MM/yyyy') VALORE, NOTE_FUMO FROM MMG_ACCERT_RILEVAZIONI WHERE
				IDEN_ANAG = :iden_anag AND ROWNUM &lt;2 AND TIPO_RILEVAZIONE =
				'FUMO' ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="PESO">
			<SQL>SELECT 'PESO' PARAMETRO, PESO ||' - Data: '||TO_CHAR(DATA_INS,
				'dd/MM/yyyy') VALORE FROM MMG_ACCERT_RILEVAZIONI WHERE IDEN_ANAG =
				:iden_anag AND ROWNUM &lt;2 AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA'
				ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="PESO_ALTEZZA">
			<SQL>SELECT 'BODY MASS INDEX' PARAMETRO, 'Peso: '||PESO||' Kg
				Altezza: '||ALTEZZA||' cm BMI: '|| BMI ||' - Data:
				'||TO_CHAR(DATA_INS, 'dd/MM/yyyy') VALORE FROM
				MMG_ACCERT_RILEVAZIONI WHERE IDEN_ANAG = :iden_anag AND ROWNUM &lt;2
				AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA' ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="LAST_PESO_ALTEZZA">
			<SQL>SELECT * from (select PESO, ALTEZZA FROM MMG_ACCERT_RILEVAZIONI
				WHERE IDEN_ANAG = :iden_anag AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA'
				ORDER BY DATA_INS DESC) where rownum = 1
			</SQL>
		</QUERY>
		<QUERY id="PROVA">
			<SQL>SELECT 'NOME PARAMETRO' PARAMETRO, 'VALORE' VALORE FROM DUAl
			</SQL>
		</QUERY>
		<QUERY id="ULTIMO_ACCESSO">
			<SQL>SELECT 'ULTIMO ACCESSO INSERITO' PARAMETRO, DATA_ACCESSO VALORE
				FROM VIEW_ACCESSI WHERE IDEN_ANAG = :iden_anag AND ROWNUM &lt;2
				ORDER BY DATA_ACCESSO DESC
			</SQL>
		</QUERY>
		<QUERY id="ULTIMO_PROBLEMA">
			<SQL>SELECT 'ULTIMO PROBLEMA INSERITO' PARAMETRO,
				PROBLEMA||'('||CODICE_ICD9||' - '|| DESCR_ICD9||')' ||' - Data:
				'||TO_CHAR(DATA_INS, 'dd/MM/yyyy') VALORE
				from VIEW_PROBLEMI
				where IDEN_ANAG = :iden_anag AND ROWNUM &lt;2 and CHIUSO = 'N'
				and SITO in ('MMG')
				order by iden desc
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="GRAFICI">
		<QUERY id="PESO">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.PESO,',','.') VALORE
				FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='PESO_ALTEZZA' and rz.PESO is not null and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="ALTEZZA">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.ALTEZZA,',','.') VALORE
				FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='PESO_ALTEZZA' and rz.ALTEZZA is not null and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="BMI">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.BMI,',','.') VALORE
				FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='PESO_ALTEZZA' and rz.BMI is not null and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="PRESSIONE_MIN">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.MINIMA,',','.') VALORE FROM MMG_ACCERT_PRESSIONE rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.MINIMA is not null and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="PRESSIONE_MAX">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.MASSIMA,',','.') VALORE FROM MMG_ACCERT_PRESSIONE rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag and
				VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.MASSIMA is not null and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="TAO">
			<SQL>select rz.DATA,
					to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd') GIORNI,
					replace(rz.VALORE_1,',','.') VALORE
				FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='TAO' and rz.deleted='N' and rz.DATA &gt;= :data_ini and rz.DATA &lt;= :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="INR">
			<SQL>select rz.DATA,
					to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd') GIORNI,
					replace(rz.VALORE_1,',','.') VALORE
				FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='INR' and rz.deleted='N' and rz.DATA between :data_ini and :data_fine
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="CIRCONFERENZA_CRANICA">
			<SQL>select rz.DATA,
				(to_date(rz.DATA,'yyyyMMdd')-to_date(an.data,'yyyyMMdd')) GIORNI,
				replace(rz.VALORE_1,',','.') VALORE FROM MMG_ACCERT_RILEVAZIONI rz
				join DATI$ANAG an on an.iden=rz.iden_anag
				where an.iden=:iden_anag
				and VUA(rz.IDEN_ANAG, :iden_med, rz.IDEN_MED, rz.DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and rz.tipo_rilevazione='CIRCONF_CRANICA' and rz.deleted='N' and rz.DATA between :data_ini and :data_fine 
				order by rz.data
			</SQL>
		</QUERY>
		<QUERY id="POSOLOGIA">
				<SQL>SELECT DATETIMECONVERTER(VRF.DATA_ISO, 'yyyyMMdd','yyyy-MM-dd') DATA_GRAPH,
					  	(MP.QTA_GIORNALIERA * MP.QTA) QUANTITA_GIORN
					FROM VIEW_RICETTA_FARMACI VRF
					JOIN MMG_POSOLOGIA MP ON VRF.COD_POSOLOGIA = MP.CODICE
					WHERE VRF.IDEN_ANAG = :iden_anag
					AND VRF.COD_FARMACO = :cod_farmaco
					AND VRF.ATTIVO      = 'S'
					AND VRF.DATA_ISO BETWEEN :da_data and :a_data
					AND VUA(VRF.IDEN_ANAG, :iden_utente, :iden_med, VRF.DATA_ISO, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', VRF.OSCURATO, VRF.IDEN_UTENTE)=1
			</SQL>
		</QUERY>
		<QUERY id="PERCENTILE">
			<SQL>select ETA, P3, P10, P25, P50, P75, P90, P97
				from percentili
				where tipo = :tipo and sesso = :sesso and ATTIVO = 'S'
				order by eta
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="DATI">
		<QUERY id="NOTE">
            <SQL>SELECT IDEN, VALORE, IDEN_PERSONALE FROM NOTE WHERE IDEN_PERSONALE = :iden_personale AND ATTIVO = 'S'</SQL>
        </QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="MMG_DATI">
		<QUERY id="COUNT_RICETTE_DA_CONFERMARE">
			<SQL>SELECT
					count(*) as CONTEGGIO_RICETTE
				FROM VIEW_MMG_ELENCO_RICETTE ME
				WHERE IDEN_MEDICO = to_number(:iden_med)
					and DEMATERIALIZZATA = 'S' 
					AND codice_stato = 'I'
					AND ME.DATA_RICETTA > (sysdate -1)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="INTESTAZIONE">
			<SQL>SELECT GET_MED_PRESCR(:iden_per, 'DESCR', null) MEDICO_PRESCRITTORE,
				GET_MED_PRESCR(:iden_per, 'IDEN', null) IDEN_MED_PRESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="INTERAZIONI_FARMACI">
			<!-- FARMACI sono i codice dei farmaci che sto prescrivendo mentre PA sono i principi attivi di quello che ho giÃ  prescritto -->
			<SQL>with 
					FARMACI as (select regexp_substr(x, '[^,]+', 1, level) ID
					  from(select :farmaci x from dual)
					  connect by level &lt;=
					  length(x) - length(replace(x, ',')) + 1),
					PA as (select regexp_substr(x, '[^,]+', 1, level) ID
					  from(select :pa x from dual)
					  connect by level &lt;=
					  length(x) - length(replace(x, ',')) + 1)
					  SELECT
					    A.CODICE_PRODOTTO, 
					    A.PA_SORGENTE AS COD_PA_PRIMARIO,
					    CODICE_PA_INTERAGENTE,
					    D.DESCRIZIONE,
					    a.DESCRIZIONE_INTERAZIONE
					    from FARMADATI$V_PA_INTERAGENTI A 
					    JOIN FARMADATI$PRINCIPI_ATTIVI D ON D.CODICE = a.CODICE_PA_INTERAGENTE
					    join farmaci on farmaci.id = a.codice_prodotto
					    join PA ON PA.ID = A.CODICE_PA_INTERAGENTE
				</SQL>
		</QUERY>
		<!-- <QUERY id="INTERAZIONI_FARMACI">
			<SQL>with ELENCO as (select regexp_substr(x, '[^,]+', 1, level) ID
				from(select :codici_farmaci x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1)
				select
				ATC_GMP codice,
        		descrizione from VIEW_RR_FARMACI 
				where COD_FARMACO IN (SELECT ID FROM ELENCO) AND 
        		(ATC_GMP LIKE :codice_atc ||'%' OR (SOSTANZA LIKE '%'|| (SELECT DESCRIZIONE FROM FARMADATI$PRINCIPI_ATTIVI WHERE CODICE = :cod_pa)||'%'  and :cod_pa is not null))
		</QUERY> -->
		<QUERY id="PERSONALE">
			<SQL>
				select * from (select USERNAME, TP.DESCR || ' ( ' || CU.USERNAME || ' ) ' as utente,
				TP.IDEN,
				DECODE(tp.TIPO,'I','Infermiere','M', 'Medico', 'A', 'Amministrativo') as tipo_utente, 
				decode(tp.tipo_med,'B','MMG', 'P','PLS','') as tipo_medico from
				CONFIG$UTENTI CU 
        		JOIN DATI$PERSONALE TP on tp.iden = cu.iden_per
        		where cu.attivo = 'S' and CU.SITO in ('MMG','ALL'))
        		where utente like '%'||:personale ||'%' order by utente
			</SQL>
		</QUERY>
		<QUERY id="PERSONALE_GRUPPO">
			<SQL>
				select 
				DISTINCT CU.USERNAME,
				CU.IDEN_PER AS IDEN,
				CU.DESCRIZIONE || '  ( ' || CU.USERNAME || ' ) ' as utente, 
				DECODE(cu.TIPO_UTENTE,'I','Infermiere','M', 'Medico', 'A', 'Amministrativo') as tipo_utente,
				'' AS TIPO_MEDICO
				from VIEW_UTENTI_CDC CU
				WHERE CU.cod_cdc = :codice
				order by cu.username
			</SQL>
		</QUERY>
		<QUERY id="Q_DATI_MODULO">
			<SQL>
				SELECT 
				TO_CHAR(X.DATA_INS,'DD/MM/YYYY') DATA_MODULO,
				X.DATA AS DATA_ISO_MODULO,
				tp.descr as utente,
				to_char(x.data_ins,'hh24:mm:ss') as ora
				FROM MMG_SCHEDE_XML X
				JOIN DATI$PERSONALE TP ON TP.IDEN = X.UTE_INS
				WHERE x.IDEN = :iden
			</SQL>
		</QUERY>
		<QUERY id="ALTRI_CERTIFICATI_UTENTE">
			<SQL>
				SELECT 
			    IDEN, 
			    TITOLO, 
			    STD,
			    replace( TESTO, CHR(10), '&lt;br/&gt;' ) TESTO, 
			    TIPO 
			    FROM ALTRI_CERTIFICATI 
			    WHERE ATTIVO = 'S' 
			    AND DELETED = 'N' 
			    AND ( ( UTE_INS = :ute_ins AND STD = 'N' ) OR ( 'S' = :std AND STD = :std ) )
				ORDER BY TIPO, TITOLO
			</SQL>
		</QUERY>
		<QUERY id="PANNELLO_NOTIFICHE_UTENTI">
			<SQL>SELECT  /*+first_rows(100)*/  UT.USERNAME VALUE, TP.DESCR || ' (' ||UT.USERNAME || ')' DESCR
				FROM CONFIG$UTENTI UT
				JOIN DATI$PERSONALE TP ON TP.IDEN = UT.IDEN_PER
				WHERE UT.ATTIVO='S' AND TP.DESCR LIKE :userName || '%' and ut.SITO in ('MMG','ALL')
				order by TP.DESCR
			</SQL>
		</QUERY>
		<QUERY id="PANNELLO_NOTIFICHE_UTENTI_ALL">
			<SQL>with SITI as (select REGEXP_SUBSTR(X, '[^,]+', 1,
				level) id
				from(select :tipo_utente X from dual)
				connect by level &lt;= length(X) - length(replace(X,
				',')) + 1)
				SELECT * FROM (
					SELECT  /*+first_rows(100)*/  
						UT.USERNAME || '@' || ut.sito VALUE, 
						TP.DESCR || ' (' ||UT.USERNAME || ')' DESCR,
						ut.SITO as tipo_utente
						FROM CONFIG$UTENTI UT
						JOIN DATI$PERSONALE TP ON TP.IDEN = UT.IDEN_PER
						WHERE UT.ATTIVO='S'
						and TP.DESCR LIKE :userName || '%'
						and ut.SITO in ('MMG')

					union all

					SELECT  /*+first_rows(100)*/  
						u.username || '@' || u.sito VALUE, 
						TP.DESCR || ' (' || U.USERNAME || ' - ' || string_agg(WC.REPARTO) || ')' DESCR,
						'AMB' as tipo_utente
						FROM CONFIG$UTENTI U
						JOIN UNISYS$WEB_CDC WC ON WC.WEBUSER = U.USERNAME
						JOIN DATI$PERSONALE TP ON TP.IDEN = U.IDEN_PER
						WHERE U.ATTIVO='S'
						/*and WC.REPARTO in ('DH_PEDI_SV')
						and WC.REPARTO in (select COD_CDC from CC$CENTRI_DI_COSTO where TIPO_CDC=1)*/
						and U.SITO in ('AMB')
						and (TP.DESCR like :userName || '%' or WC.REPARTO like :userName || '%')
						group by u.username, u.sito, TP.DESCR
				)
				WHERE (:value is null and tipo_utente IN (select id from SITI)) or VALUE = :value
				ORDER BY DESCR
			</SQL>
		</QUERY>
		<QUERY id="CLASSI_RISCHIO">
			<SQL> with ELENCO as (select TO_NUMBER(REGEXP_SUBSTR(X, '[^,]+', 1,
				level)) id
				from(select IDEN_CLASSI x from MMG_PIP_SVOLTE where
				IDEN=:iden)
				connect by level &lt;= length(X) - length(replace(X,
				',')) + 1)
				select MC.IDEN, MC.DESCRIZIONE from MMG_CODIFICHE MC inner
				join ELENCO on
				(MC.IDEN = ELENCO.ID and mc.attivo = 'S' )
			</SQL>
		</QUERY>
		<QUERY id="ULTIME_RILEVAZIONI">
			<SQL>
			    select * from (
					SELECT R.*, DATETIMECONVERTER( R.DATA, 'YYYYMMDD', 'DD/MM/YYYY') DATA_RILEVAZIONE
					FROM MMG_ACCERT_RILEVAZIONI R
					WHERE IDEN_ANAG = :iden_anag AND DELETED = 'N' AND TIPO_RILEVAZIONE = :tipo
					and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO','N',UTE_INS)=1
					order by IDEN DESC
				) where ROWNUM &lt;= 3
			</SQL>
		</QUERY>
		<QUERY id="ULTIME_RILEVAZIONI_PRESSIONE">
			<SQL>
				SELECT * FROM (
					SELECT R.*, 'MAX: ' || R.MASSIMA || ' - MIN: ' || R.MINIMA PRESSIONE_MAX_MIN,  DATETIMECONVERTER( R.DATA, 'YYYYMMDD', 'DD/MM/YYYY') DATA_RILEVAZIONE
					FROM MMG_ACCERT_PRESSIONE R
					WHERE IDEN_ANAG = :iden_anag AND DELETED = 'N'
					and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO','N',UTE_INS)=1
					order by IDEN DESC
				) WHERE ROWNUM &lt;= 3
			</SQL>
		</QUERY>
		<QUERY id="ULTIME_RILEVAZIONI_CARDIO">
			<SQL>
			    select * from (
					SELECT R.*, DATETIMECONVERTER( R.DATA, 'YYYYMMDD', 'DD/MM/YYYY') DATA_RILEVAZIONE
					FROM MMG_ACCERT_CARDIO R
					WHERE IDEN_ANAG = :iden_anag AND DELETED = 'N'
					and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO','N',UTE_INS)=1
					order by IDEN DESC
				) where ROWNUM &lt;= 3
			</SQL>
		</QUERY>
		<QUERY id="DATI_PAZIENTE">
			<SQL>
				SELECT * FROM view_MMG_anagrafica WHERE IDEN = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="BACHECA_OGGI">
			<SQL>
				SELECT 
				 B.IDEN, 
				  B.IDEN_PERSONALE,
				  B.IDEN_ANAGRAFICA,
				  B.DATA_INIZIO,
				  B.DATA_FINE,
				  B.NOTE,
				  B.ATTIVO,
				  B.PRIORITA,
				  B.SEZIONE,
				  B.ASL,
				  B.TABELLA_RIFERIMENTO,
				  B.IDEN_RIFERIMENTO,
				  DATETIMECONVERTER( B.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) || ' - ' ||B. DESCRIZIONE DESCRIZIONE,
				  D.IDEN IDEN_DOCUMENTO
					FROM BACHECA B  
					LEFT JOIN MMG_DOCUMENTI_PAZ D ON B.IDEN = D.IDEN_EPISODIO 
					WHERE 
					B.ATTIVO = 'S' 
					AND B.IDEN_ANAGRAFICA IS NULL 
					AND B.IDEN_PERSONALE IS NULL 
					AND (
					( ASL = 'N' AND :oggi BETWEEN B.DATA_INIZIO AND B.DATA_FINE and UTE_INS in (select column_value from table( split( GET_GRUPPO_MED( :iden_per ) ) ) ) ) 
					OR 
					( ASL = 'S' AND :oggi BETWEEN B.DATA_INIZIO AND (B.DATA_INIZIO + 30 ))
					) ORDER BY B.PRIORITA DESC
			</SQL>
		</QUERY>
		<QUERY id="BACHECA_PAZIENTE">
			<SQL>
				SELECT 
					 B.IDEN, 
					  B.IDEN_PERSONALE,
					  B.IDEN_ANAGRAFICA,
					  B.DATA_INIZIO,
					  B.DATA_FINE,
					  B.NOTE,
					  B.ATTIVO,
					  B.PRIORITA,
					  B.SEZIONE,
					  B.ASL,
					  B.TABELLA_RIFERIMENTO,
					  B.IDEN_RIFERIMENTO,
					  DATETIMECONVERTER( B.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) || ' - ' ||B. DESCRIZIONE DESCRIZIONE,
					  D.IDEN IDEN_DOCUMENTO
				FROM BACHECA B 
				LEFT JOIN MMG_DOCUMENTI_PAZ D ON B.IDEN = D.IDEN_EPISODIO 
				WHERE B.ATTIVO = 'S' AND B.IDEN_ANAGRAFICA = :iden_anagrafica AND B.IDEN_PERSONALE IS NULL AND :oggi BETWEEN B.DATA_INIZIO AND B.DATA_FINE
				
				UNION ALL
				
				SELECT 
					 B.IDEN, 
					  B.IDEN_PERSONALE,
					  B.IDEN_ANAGRAFICA,
					  B.DATA_INIZIO,
					  B.DATA_FINE,
					  B.NOTE,
					  B.ATTIVO,
					  B.PRIORITA,
					  B.SEZIONE,
					  B.ASL,
					  B.TABELLA_RIFERIMENTO,
					  B.IDEN_RIFERIMENTO,
					  DATETIMECONVERTER( B.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) || ' - ' ||B. DESCRIZIONE DESCRIZIONE,
					  D.IDEN IDEN_DOCUMENTO
				FROM BACHECA B 
				LEFT JOIN MMG_DOCUMENTI_PAZ D ON B.IDEN = D.IDEN_EPISODIO 
				WHERE B.ATTIVO = 'S' AND B.IDEN_ANAGRAFICA = :iden_anagrafica AND B.IDEN_PERSONALE = :iden_personale AND :oggi BETWEEN B.DATA_INIZIO AND B.DATA_FINE
				
			</SQL>
		</QUERY>
		<QUERY id="BACHECA_UTENTE">
			<SQL>
				SELECT 
				     B.IDEN, 
				      B.IDEN_PERSONALE,
				      B.IDEN_ANAGRAFICA,
				      B.DATA_INIZIO,
				      B.DATA_FINE,
				      B.NOTE,
				      B.ATTIVO,
				      B.PRIORITA,
				      B.SEZIONE,
				      B.ASL,
				      B.TABELLA_RIFERIMENTO,
				      B.IDEN_RIFERIMENTO,
				      DATETIMECONVERTER( B.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) || ' - ' ||B. DESCRIZIONE DESCRIZIONE,
				      D.IDEN IDEN_DOCUMENTO
				  FROM BACHECA B 
				  LEFT JOIN MMG_DOCUMENTI_PAZ D ON B.IDEN = D.IDEN_EPISODIO 
				  WHERE B.ATTIVO = 'S' AND B.IDEN_PERSONALE = :iden_personale AND B.IDEN_ANAGRAFICA IS NULL AND :oggi BETWEEN B.DATA_INIZIO AND B.DATA_FINE 
			</SQL>
		</QUERY>
		<QUERY id="BACHECA_ASL">
			<SQL>
				SELECT 
					B.IDEN, 
					 B.IDEN_PERSONALE,
					 B.IDEN_ANAGRAFICA,
					 B.DATA_INIZIO,
					 B.DATA_FINE,
					 B.NOTE,
					 B.ATTIVO,
					 B.PRIORITA,
					 B.SEZIONE,
					 B.ASL,
					 B.TABELLA_RIFERIMENTO,
					 B.IDEN_RIFERIMENTO,
					 DATETIMECONVERTER( B.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) || ' - ' ||B. DESCRIZIONE DESCRIZIONE,
					  D.IDEN IDEN_DOCUMENTO
				FROM BACHECA B 
				LEFT JOIN MMG_DOCUMENTI_PAZ D ON B.IDEN = D.IDEN_EPISODIO 
				WHERE B.ATTIVO = 'S' AND B.ASL = 'S' ORDER BY B.PRIORITA DESC
			</SQL>
		</QUERY>
		<QUERY id="GRUPPI_FAMILIARI_ESISTENTI">
			<SQL>
				SELECT * FROM VIEW_PARENTELE WHERE IDEN_ANAG = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI_CROSS">
			<SQL>SELECT RR.CODICE, RR.DESCRIZIONE, RR.CICLICHE, RR.NUM_SEDUTE, RR.APPROPRIATEZZA
				FROM MMG_GRUPPI_ACC_CROSS MC
				INNER JOIN VIEW_RR_ACCERTAMENTI RR ON RR.CODICE = mc.codice_prest
				WHERE MC.IDEN_PROFILO = :iden_profilo AND MC.ABILITATO =:s_n
				AND RR.ATTIVO=:s_n order by descrizione asc
			</SQL>
		</QUERY>
		<QUERY id="ESENZIONI">
			<SQL>select CODICE_ESENZIONE, CODICE_ESENZIONE_FARMA, fonte_esenzione,
				DESCR_ESENZIONE, TIPOLOGIA, LIVELLO from VIEW_RR_PAZIENTI_ESENZIONI
				WHERE IDEN_ANAG = :iden_anag AND (DATA_FINE_ESENZIONE IS NULL OR
				DATA_FINE_ESENZIONE &gt; TO_CHAR(SYSDATE,'yyyyMMdd')) and
				(:codice_esenzione is null or codice_esenzione = :codice_esenzione)
			</SQL>
		</QUERY>
		<QUERY id="ESENZIONI_FARMACI">
			<SQL>with ESENZIONI
					as (select regexp_substr(x, '[^,]+', 1, level) ID
						from (select :codici_esenzioni x from dual)
					connect by level &lt;= length(x) - length(replace(x, ',')) + 1)
					select VEF.CODICE_PRODOTTO, VEF.CODICE_ESENZIONE
				from FARMADATI$V_ESENZIONI_FARMACO VEF
				join view_rr_esenzioni vre on vre.COD_FARMA=VEF.CODICE_ESENZIONE
				join ESENZIONI on ESENZIONI.ID=VRE.CODICE
				where VEF.CODICE_PRODOTTO = :cod_farmaco
				order by decode(vre.CODICE,
					'002', 2, '0A02', 2, '0B02', 2, '0C02', 2,
				1)
			</SQL>
		</QUERY>
		<QUERY id="ESENZIONI_PRESTAZIONI">
			<SQL>with PRESTAZIONI as (select regexp_substr(x, '[^,]+', 1, level)
				ID
				from(select :cod_prestazione x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1),
				ESENZIONI
				as (select
				regexp_substr(x, '[^,]+', 1, level) ID
				from(select :codici_esenzioni
				x from dual)
				connect by level &lt;= length(x) - length(replace(x,
				',')) + 1)
				select
				COD_PRESTAZIONE, CODICE_ESENZIONE from
				VIEW_RR_ACCERTAMENTI_ESENZIONI
				where COD_PRESTAZIONE in (select ID
				from PRESTAZIONI) and CODICE_ESENZIONE in (select ID from ESENZIONI)
				order by decode(CODICE_ESENZIONE,
					'002', 2, '0A02', 2, '0B02', 2, '0C02', 2,
				1)
			</SQL>
		</QUERY>
		<QUERY id="INFO_CARTELLA">
			<SQL> 
			select IDEN_ANAG as "ASSISTITO.IDEN_ANAG",
				SESSO as "ASSISTITO.SESSO",
				data_morte as "ASSISTITO.DATA_MORTE",
				ageinyears(DATAORDER) as "ASSISTITO.ETA",
				null as "ASSISTITO.IDEN_ACCESSO",
				dataorder as "ASSISTITO.DATA_NASCITA_ISO",
				age_ymd(DATAORDER) as "ASSISTITO.ETA_DESCR",
				get_last_rilevazioni(:iden_anag) as "ASSISTITO.RILEVAZIONI",
				COD_FISC as "ASSISTITO.COD_FISC",
				id_Remoto as "ASSISTITO.ID_REMOTO",
				PIN_AAC as "ASSISTITO.PIN_AAC",
				PAZIENTE as "ASSISTITO.NOME_COMPLETO" /*MENU_INFO.PAZIENTE*/,
				COGN as "ASSISTITO.COGNOME",
				NOME as "ASSISTITO.NOME",
				COD_CDC as "ASSISTITO.COD_CDC",
				IDEN_MED_BASE AS "ASSISTITO.IDEN_MED_BASE",
				get_med_base(:iden_anag) "ASSISTITO.DESCR_MED_BASE",
				RR_REGIME_PAZIENTE(:iden_anag) as "ASSISTITO.REGIME",
				'' as "CARTELLA.REGIME",
				'' as "CARTELLA.NOTE",
				'' as "ASSISTITO.ESENZIONI",
				cursor(select COL01 as CODICE,
					COL02 as DESCRIZIONE,
					COL03 as DATA_INIZIO,
					COL04 as DATA_FINE,
					COL05 as IDEN_PER_COINVOLTI
					from table(get_med_iniziativa_arr(iden_anag, :iden_per))
				) as "ASSISTITO.MEDICINA_INIZIATIVA",
				CONSENSO_PRIVACY_MMG AS "ASSISTITO.CONSENSO_PRIVACY_MMG",
				PERMESSI_LETTURA as "ASSISTITO.PERMESSI_LETTURA",
				GET_MED_PRESCR(:iden_per, 'IDEN', IDEN_ANAG) as "CARTELLA.IDEN_MED_PRESCR",
				GET_MED_PRESCR(:iden_per, 'DESCR', IDEN_ANAG) as "CARTELLA.DESCR_MED_PRESCR",
				'N' as "CARTELLA.READONLY",
				readonly as "ASSISTITO.READONLY",
				GET_ALLERGIE_INT(IDEN_ANAG) "ASSISTITO.INFO_ALLERGIE_INT",
				(select count(*) from BACHECA where ATTIVO='S' and
				iden_anagrafica=:iden_anag and (iden_personale is null or
				iden_personale = :iden_per) and to_char(sysdate,'YYYYMMDD') between
				data_inizio and data_fine) "ASSISTITO.NUMERO_PROMEMORIA",
				nvl(data_scadenza_assistenza,'29000101') "ASSISTITO.SCADENZA_ASSISTENZA",
				(SELECT COUNT(*) FROM BACHECA WHERE IDEN_ANAGRAFICA = :iden_anag AND SEZIONE = 'BACHECA_SCADENZA_ASSISTENZA' AND ATTIVO = 'S') "ASSISTITO.PROMEMORIA_SCADENZA"
				from
				VIEW_WK_ASSISTITI where iden_anag = :iden_anag {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="INFO_UTENTE">
			<SQL>select IDEN_MED_GRUPPO,
				cursor(
					select U.IDEN_PER, U.USERNAME, cursor(
						select P.NOME, P.VALORE
						from CONFIG$PARAMETRI P WHERE P.ID_GRUPPO=U.USERNAME
						and P.NOME in('INVIO_RR_SAL', 'SHOW_FARMACO_ORIGINALE')
						and P.SITO in ('MMG','ALL')
						and P.ATTIVO='S'
					) PARAMETRI
					FROM CONFIG$UTENTI U
					where U.IDEN_PER in (
						select column_VALUE from table(split(IDEN_MED_GRUPPO))
					)
					and U.SITO in ('MMG','ALL') and U.ATTIVO='S'
				) UTENTI
				from (
					select string_agg(distinct COLUMN_VALUE) as IDEN_MED_GRUPPO
					from table(split(get_gruppo_med(:iden_utente)))
				)
			</SQL>
		</QUERY>
		<QUERY id="MEDICI_GRUPPO">
			<SQL>select get_gruppo_med(:iden_per) GRUPPO from dual</SQL>
		</QUERY>
		<QUERY id="SELECT_MMG_CODIFICHE">
			<SQL>SELECT CODICE, DESCRIZIONE FROM MMG_CODIFICHE WHERE
				TIPO_DATO = :tipo_dato AND TIPO_SCHEDA = :tipo_scheda AND ATTIVO =
				'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="VISUALIZZA_ALLEGATI">
			<SQL>SELECT * FROM MMG_DOCUMENTI_PAZ WHERE IDEN = :iden</SQL>
		</QUERY>
		<QUERY id="PROFILI_CROSS">
			<SQL>SELECT rp.codice value,rp.descrizione descr, RP.CICLICHE, RP.NUM_SEDUTE, rp.APPROPRIATEZZA
				FROM mmg_gruppi_acc_cross mc inner join VIEW_RR_ACCERTAMENTI rp on
				mc.codice_prest = rp.codice WHERE IDEN_PROFILO = :iden_profilo and
				abilitato='S' order by rp.descrizione
			</SQL>
		</QUERY>
		<QUERY id="SCADENZARIO_MEDICO_ATTIVAZIONE">
            <SQL>
                begin
                    update SCADENZARIO set ATTIVO=:v_attivo where IDEN = :n_iden;
                    commit;
                end;
            </SQL>
        </QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="WORKLIST" pager="true">
		<QUERY id="ANAGRAFICA_CERTIFICATI">
			<SQL>
				SELECT IDEN, TITOLO, COD_CERTIFICATO CODICE, TESTO, TIPO FROM ALTRI_CERTIFICATI WHERE ATTIVO = 'S' AND DELETED = 'N' AND UTE_INS = :ute_ins ORDER BY TIPO
			</SQL>
		</QUERY>
		<QUERY id="APPUNTI">
			<SQL>
				SELECT A.*, DATETIMECONVERTER( A.DATA, 'YYYYMMDD','DD/MM/YYYY') DATA_APPUNTO FROM APPUNTI A 
				WHERE A.ATTIVO = 'S' 
				AND A.IDEN_MEDICO = :iden_medico
				AND TO_CHAR( A.DATA, 'YYYYMMDD') BETWEEN :da_data and :a_data
				AND TITOLO LIKE :titolo || '%' 
				AND TIPOLOGIA = :tipologia
				ORDER BY IDEN DESC
			</SQL>
		</QUERY>
		<QUERY id="SEGNALAZIONI">
			<SQL>
				SELECT 
				  S.*,
				  TP.DESCR MEDICO,
				  DATETIMECONVERTER( S.DATA_INS, 'YYYYMMDD','DD/MM/YYYY') DATA_INSERIMENTO
				FROM 
				  SEGNALAZIONI S
				INNER JOIN DATI$PERSONALE TP ON S.UTE_INS = TP.IDEN
				LEFT JOIN DATI$ANAG A ON S.IDEN_ANAG = A.IDEN
				WHERE S.DELETED = 'N' ORDER BY DATA_INS DESC
			</SQL>
		</QUERY>
		<QUERY id="GRUPPI">
			<SQL>
				SELECT distinct IDEN_CDC as IDEN, COD_CDC AS CODICE, DESCRIZIONE_CDC AS GRUPPO FROM VIEW_UTENTI_CDC WHERE 
				(USERNAME like :utente and :tipo_ricerca = 'UTENTE')
				OR ( descrizione_cdc like :gruppo||'%' and :tipo_ricerca = 'GRUPPO'){#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="LISTA_GRUPPI">
			<SQL>select IDEN, CODICE as codice, DESCRIZIONE as descrizione
				from MMG_GRUPPI
      			where CODICE LIKE :codice||'%'
      			and DESCRIZIONE like '%'||:gruppo||'%'
      			AND ATTIVO = 'S'
      			{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="LISTA_MESSAGGI">
			<SQL>select * from 
				(select
					1 as iden,
					TO_CHAR(SYSDATE,'yyyyMMddhh24mi') AS DATA, 
					'DOTTOR DR DOTTOR' AS MITTENTE, 
					'OGGETTO DELLA MAIL'  AS OGGETTO,
					'S' as STATO_LETTURA,
					'&lt;div&gt;Un bel testo del messaggio&lt;div id="prova"&gt;Primo indizio&lt;/div&gt;&lt;div id="prova"&gt;Secondo indizio&lt;/div&gt;&lt;div id="prova"&gt;due indizi fanno una prova&lt;/div&gt;&lt;/div&gt;' AS TESTO_HTML
				FROM DUAL
				union all
				select 
				2 as iden,
					TO_CHAR(SYSDATE,'yyyyMMddhh24mi') AS DATA, 
					'DOTTOR DR DOTTOR del secondo msg' AS MITTENTE,
					'OGGETTO DELLA MAIL piÃ¹ lungo del messaggio precedente che era corto e non come questo che Ã¨ lungo'  AS OGGETTO,
					'N' as STATO_LETTURA,
					'&lt;div&gt;Un bel testo del secondo messaggio&lt;div id="prova"&gt;Prova secondo messaggio&lt;/div&gt;&lt;div id="prova"&gt;Secondo Messaggio&lt;/div&gt;&lt;div id="prova"&gt;due indizi fanno una prova&lt;/div&gt;&lt;/div&gt;' AS TESTO_HTML
				FROM DUAL)
				WHERE upper(MITTENTE) like '%'||:value||'%'
				and upper(oggetto) like '%'||:value||'%'
			</SQL>
		</QUERY>
		<QUERY id="LISTA_UTENTI">
			<SQL>select USERNAME,
				CASE WHEN INSTR(CPG.ID_GRUPPO,'SUPER_ADMIN') > 0 THEN
					'S'
				ELSE
					'N'
				END AMMINISTRATORE,
				tp.descr as personale
				from config$utenti U 
				join DATI$PERSONALE tp on tp.iden = u.iden_per
				JOIN config$PARAMETRI_GRUPPO CPG ON CPg.id = u.username and cpg.gruppo = 'PERMESSI_GRUPPO' and CPG.SITO='MMG'
      			where username LIKE :username||'%' 
      			and u.sito = 'MMG'
      			and u.attivo = 'S'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WORKLIST_AGGIORNAMENTI">
			<SQL>
				SELECT IDEN, TO_CHAR( TO_DATE( DATA, 'YYYYMMDD'), 'DD/MM/YYYY' ) DATA_AGGIORNAMENTO, TITOLO, DELETED FROM UNISYS$INFORMAZIONI WHERE FUNZIONE = 'MMG' ORDER BY DATA DESC
			</SQL>
		</QUERY>
		<QUERY id="ALTRE_STAMPE">
			<SQL>
				SELECT 
				  LC.*, 
				  datetimeconverter( LC.DATA_DOC, 'YYYYMMDD', 'DD/MM/YYYY') DATA_INSERIMENTO_CERTIFICATO, 
				  datetimeconverter( LC.DATA_SCADENZA, 'YYYYMMDD', 'DD/MM/YYYY') DATA_SCADENZA_CERTIFICATO, 
				  AC.TITOLO CERTIFICATO_RELATIVO 
				FROM LISTA_CERTIFICATI LC 
				LEFT JOIN ALTRI_CERTIFICATI AC ON LC.COD_CERTIFICATO = AC.IDEN 
				WHERE LC.ATTIVO = 'S' AND LC.DELETED = 'N' AND LC.IDEN_ANAG = :iden_anag
				and VUA(LC.IDEN_ANAG, :iden_per, LC.IDEN_MED, LC.DATA_DOC, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', 'N', LC.UTE_INS) = 1
			</SQL>
		</QUERY>
		<QUERY id="MEDICINA_DI_INIZIATIVA">
			<SQL>
				SELECT 
				    MI.IDEN, 
				    MI.IDEN_ANAG, 
				    MI.DATA_INS, 
				    MI.COD_MEDICINA_INIZIATIVA,
				    DATETIMECONVERTER( MI.DATA_INIZIO, 'YYYYMMDD', 'DD/MM/YYYY' ) DATA_INIZIO, 
				    DATETIMECONVERTER( MI.DATA_FINE, 'YYYYMMDD', 'DD/MM/YYYY' ) DATA_FINE,
				    C.DESCRIZIONE
				FROM MEDICINA_INIZIATIVA MI
				INNER JOIN MMG_CODIFICHE C ON MI.COD_MEDICINA_INIZIATIVA = C.CODICE AND TIPO_DATO = 'TIPO_MEDICINA_INIZIATIVA' AND TIPO_SCHEDA = 'MEDICINA_DI_INIZIATIVA' and c.attivo = 'S'  {#ORDER#}
			</SQL>
		</QUERY>
		
		<QUERY id="PRESTAZIONI_GRAVIDANZA">
			<SQL>
				SELECT r.*, T.DESCRIZIONE FROM VIEW_RR_ACCERTAMENTI_ESENZIONI r join 
				VIEW_RR_ACCERTAMENTI t on t.iden = r.iden_prestazione WHERE 
				CODICE_ESENZIONE = :esenzione ORDER BY 
				CODICE_ESENZIONE ASC
			</SQL>
		</QUERY>
		<QUERY id="ANAGRAFICA_GRUPPI_FAMILIARI">
			<SQL>
				SELECT IDEN IDEN_ANAG, NOME, COGN, DATA, COD_FISC, NOME || ' ' || COGN || ' ' || DATETIMECONVERTER( DATA, 'YYYYMMDD','DD/MM/YYYY') PAZIENTE, 
				NOME || ' ' || COGN || ' ' || DATETIMECONVERTER( DATA, 'YYYYMMDD','DD/MM/YYYY') PARENTE,  IDEN IDEN_PARENTE, 
				DATETIMECONVERTER( DATA, 'YYYYMMDD','DD/MM/YYYY') DATA_NASCITA  
				FROM DATI$ANAG  
				WHERE COGN LIKE :cognome AND NOME LIKE :nome AND DATA LIKE :data_nascita and deleted = 'N'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="GRAVIDANZA">
			<SQL>
				SELECT G.IDEN, G.IDEN_ANAG, G.UTE_INS, G.IDEN_MED, (select count(iden)+1 from MMG_GRAVIDANZE where iden_anag = G.iden_anag and deleted='N' and coalesce(data_parto, data_ult_mestruo) &lt; coalesce( G.data_parto, G.data_ult_mestruo)) NGRAVIDANZA,
				  G.NUMERO_FETI, G.NOTE, G.RISCHIO, decode(G.RISCHIO,'S','Si','No') RISCHIO_COMPLETO, G.IDEN_PROBLEMA, CASE WHEN G.CONCLUSA = 'S' THEN 'SÃ¬' ELSE 'No' END  CONCLUSA,
				  datetimeconverter( G.DATA_ULT_MESTRUO, 'YYYYMMDD', 'DD/MM/YYYY') DATA_ULTIMO_MESTRUO,  
				  datetimeconverter( G.DATA_PARTO_PRESUNTA, 'YYYYMMDD', 'DD/MM/YYYY') DATA_PRESUNTA_PARTO,    
				  datetimeconverter( G.DATA_PARTO, 'YYYYMMDD', 'DD/MM/YYYY') DATA_PARTO
				FROM MMG_GRAVIDANZE G
				WHERE G.IDEN_ANAG = :iden_anag and G.deleted='N' order by NGRAVIDANZA desc
			</SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI">
			<SQL>select * from (select VRA.CODICE COD_ACC, VRA.DM_CODICE CODICE, VRA.DESCRIZIONE ACCERTAMENTO,
				EXTRACT_BRANCA(VRA.BRANCA) BRANCA, 'N' SINONIMO, VRA.MOLTEPLICITA, VRA.CICLICHE, VRA.NUM_SEDUTE,
				VRA.APPROPRIATEZZA
				from VIEW_RR_ACCERTAMENTI VRA
				where VRA.ATTIVO= 'S' and
				not(VRA.DESCRIZIONE like '%NON USARE%') AND
				VRA.DESCRIZIONE like
				:descrizione
				and VRA.DM_CODICE LIKE :codice {#ORDER#})
				UNION ALL
				select * from (select distinct VRA.CODICE COD_ACC, VRA.DM_CODICE ||
				'
				(SINONIMO) ' CODICE, SIN.DESCRIZIONE ACCERTAMENTO,
				EXTRACT_BRANCA(VRA.BRANCA) BRANCA, 'S' SINONIMO, VRA.MOLTEPLICITA, VRA.CICLICHE, VRA.NUM_SEDUTE,
				VRA.APPROPRIATEZZA
				from VIEW_RR_ACCERTAMENTI VRA
				JOIN RR$PRESTAZIONI_SINONIMI
				SIN on VRA.CODICE_REGIONALE=SIN.COD_PRESTAZIONE
				where VRA.ATTIVO='S' and SIN.ATTIVO='S' and SIN.DESCRIZIONE like :descrizione and VRA.DM_CODICE like :codice
				)
				WHERE SINONIMO = :sinonimo
			</SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI_COUNT">
			<SQL>WITH 
					ACCERTAMENTI AS (
						select * from (
							select VRA.CODICE COD_ACC, VRA.DM_CODICE CODICE, VRA.DESCRIZIONE ACCERTAMENTO,
							EXTRACT_BRANCA(VRA.BRANCA) BRANCA, 'N' SINONIMO, VRA.MOLTEPLICITA, VRA.CICLICHE, VRA.NUM_SEDUTE,
							VRA.APPROPRIATEZZA
							From VIEW_RR_ACCERTAMENTI VRA
							where VRA.ATTIVO= 'S' and
							not(VRA.DESCRIZIONE like '%NON USARE%')
						)
						UNION ALL
					    select * from (
							select distinct VRA.CODICE COD_ACC, VRA.DM_CODICE ||
							' (SINONIMO) ' CODICE, SIN.DESCRIZIONE ACCERTAMENTO,
							EXTRACT_BRANCA(VRA.BRANCA) BRANCA, 'S' SINONIMO, VRA.MOLTEPLICITA, VRA.CICLICHE, VRA.NUM_SEDUTE,
							VRA.APPROPRIATEZZA
							from
							VIEW_RR_ACCERTAMENTI VRA
							JOIN RR$PRESTAZIONI_SINONIMI
							SIN on
							VRA.CODICE_REGIONALE=SIN.COD_PRESTAZIONE
							where VRA.ATTIVO='S' and SIN.ATTIVO='S'
						)
					),
					ACCERTAMENTI_COUNT as (
						select A.codice_accertamento,
						count(*) as CONTEGGIO 
						from MMG_ACCERTAMENTI a 
						where a.attivo = 'S' 
						and a.deleted = 'N'
						and a.UTE_INS = :iden_per
						and sito = 'MMG'
						and a.DATA_INS &gt;= sysdate - 365
						group by a.codice_accertamento
					)
					SELECT
						a.codice,
						a.accertamento,
						a.cod_acc,
						A.branca, 
						A.sinonimo,
						nvl(c.CONTEGGIO, 0) as CONTEGGIO,
						a.MOLTEPLICITA,
						a.CICLICHE,
						a.NUM_SEDUTE,
						a.APPROPRIATEZZA
						from
						accertamenti a
						left outer join accertamenti_Count c on C.CODICE_ACCERTAMENTO = a.cod_acc
						where a.accertamento like :descrizione
						AND a.COD_ACC LIKE :codice
						AND a.SINONIMO LIKE :sinonimo
						ORDER BY a.SINONIMO,
						nvl(C.CONTEGGIO,0) DESC
			</SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI_EFFETTUATI">
			<SQL>SELECT * FROM (
        		SELECT MF.IDEN, MF.DATA_ISO DATA_ACC, COALESCE(MF.ACCERTAMENTO,VP.DESCRIZIONE) ACCERTAMENTO
        		FROM MMG_ACCERTAMENTI MF
				JOIN MMG_ACCERTAMENTI_DETTAGLIO MD on MF.IDEN=MD.IDEN
        		LEFT OUTER JOIN VIEW_rr_ACCERTAMENTI VP ON ( VP.codice = MF.CODICE_ACCERTAMENTO ) 
        		where MF.IDEN_ANAG =:iden_anag AND MF.DELETED = 'N' 
        		and VUA(MF.IDEN_ANAG, :iden_utente, MF.IDEN_MED, MF.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', MD.OSCURATO, MF.UTE_INS) = 1)
         		WHERE ACCERTAMENTO LIKE :testo||'%' ORDER BY DATA_ACC DESC </SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI_PATIENT_SUMMARY">
			<SQL>SELECT A.IDEN, A.DATA_ISO DATA_ACC, AD.IDEN IDEN_DETTAGLIO, COALESCE(A.ACCERTAMENTO,VP.DESCRIZIONE) ACCERTAMENTO, AD.OSCURATO
        		FROM MMG_ACCERTAMENTI A 
        		LEFT OUTER JOIN VIEW_rr_ACCERTAMENTI VP ON ( VP.codice = A.CODICE_ACCERTAMENTO )
            	JOIN MMG_ACCERTAMENTI_DETTAGLIO AD ON A.IDEN = AD.IDEN
        		where A.IDEN_ANAG =:iden_anag AND A.DELETED = 'N'
            	and AD.PAT_SUMMARY = 'S' and (AD.oscurato != 'S' or A.iden_med = :iden_per)
         		ORDER BY DATA_ACC DESC</SQL>
		</QUERY>
		<QUERY id="ACCERTAMENTI_MED_INIZ">
			<SQL>select * from (
					select 
					accertamento,
					IDEN_MEDICO,
					attivo,
					med_iniz,
					iden_anag,
					A.Data_Iso as data_prescr,
					(SELECT DESCR FROM DATI$PERSONALE WHERE IDEN = A.IDEN_MEDICO) as MEDICO ,
					(SELECT DESCR FROM DATI$PERSONALE WHERE IDEN = A.IDEN_utente) as UTENTE ,
					cod_accertamento
					DATA 
					from 
					View_Ricetta_Accertamenti A )
				where IDEN_ANAG = :iden_anag 
				and MED_INIZ = 'S' 
				and UTENTE LIKE :utente || '%'
				and medico like :medico || '%'
				and data_prescr between :data_da and :data_a
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ALLERGIE_INTOLLERANZE">
			<SQL>Select 
				  DATA_INS, IDEN, UTE_INS, 
				  IDEN_MED, atc_gmp || ' - ' || DESCRIZIONE as
				  descrizione, 
				  CASE WHEN TIPOLOGIA = 'ALL' 
				  THEN 'ALLERGIA'
				  ELSE 'INTOLLERANZA' END TIPOLOGIA_DESCR,
				  ATC_GMP, TIPO_REAZIONE, 
				  OSCURATO FROM MMG_ALLERGIE_INTOLLERANZE where
				  iden_anag = :iden_anag and attivo = 'S' and deleted = 'N'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ULTIMI_ACCESSI_CARTELLA">
			<SQL>
			    WITH ULTIMI_ACCESSI as (
					select to_number(IDEN_ANAG) IDEN_ANAG, TO_CHAR(MAX(ACTION_DATE),'YYYYMMDDHH24MI') DATA_ACCESSO 
					from UNISYS$TRACE_USER_ACTION
					where ACTION_DATE > sysdate - 4
					and webuser = :webuser 
					and module ='MMG' 
					AND ACTION = 'APERTURA_CARTELLA'
					GROUP BY IDEN_ANAG ORDER BY MAX(ACTION_DATE) DESC 
				)
				SELECT 
				  A.IDEN as IDEN_ANAG, ULTIMI_ACCESSI.DATA_ACCESSO, A.COGN || ' ' || A.NOME || ' ' || DATETIMECONVERTER( A.DATA, 'YYYYMMDD', 'DD/MM/YYYY') PAZIENTE, A.IDEN_MED_BASE,
				  (SELECT DESCR FROM DATI$PERSONALE WHERE IDEN = A.IDEN_MED_BASE) as MED_BASE_DESCR, mia.consenso_privacy_mmg, mia.PERMESSI_LETTURA
				FROM 
				ULTIMI_ACCESSI
				INNER JOIN DATI$ANAG A ON ULTIMI_ACCESSI.IDEN_ANAG = A.IDEN and A.DELETED='N'
				left outer join mmg_info_anag mia on mia.iden_anag = a.iden
				WHERE ROWNUM &lt; 21 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="CRONOLOGIA_ACCESSI_ESTERNA">
			<SQL>
				select 
					A.IDEN IDEN_ANAG,
					A.COGN || ' ' || A.NOME || ' ' || DATETIMECONVERTER( A.DATA , 'YYYYMMDD','DD/MM/YYYY' ) PAZIENTE,
					VA.IDEN IDEN_ACCESSO, 
					DATETIMECONVERTER( VA.DATA , 'YYYYMMDD','DD/MM/YYYY' ) DATA_ACCESSO, 
					VA.DESCR_TIPO_ACCESSO TIPOLOGIA_ACCESSO,
					VA.UTE_INS, VA.IDEN_MED, VA.DESCR_MED
					from VIEW_ACCESSI VA
					INNER JOIN DATI$ANAG A ON VA.IDEN_ANAG = A.IDEN
				WHERE :pIdenPer in (VA.IDEN_MED, A.IDEN_MED_BASE)
				and VUA(VA.IDEN_ANAG, :pIdenPer, VA.IDEN_MED, VA.DATA, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', 'N', VA.UTE_INS) = 1
				and VA.DATA BETWEEN :da_data_accesso AND :a_data_accesso
				AND A.COGN LIKE :cognome ||'%' and A.NOME LIKE '%'|| :nome ||'%'
				and ( :codice_fiscale is null or A.COD_FISC = :codice_fiscale )
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI">
			<SQL>select * from (SELECT
					VWA.IDEN_ANAG, VWA.COGN, VWA.NOME, VWA.PAZIENTE, VWA.COD_FISC, VWA.ID_REMOTO, VWA.PIN_AAC, VWA.DATAORDER, VWA.IDEN_MED_BASE, VWA.MED_BASE_DESCR, VWA.DATA_MORTE, VWA.DATA_SCADENZA_assistenza, VWA.READONLY,
					vwa.consenso_privacy_mmg,
					vwa.PERMESSI_LETTURA
					FROM VIEW_WK_ASSISTITI VWA
					WHERE ((:decesso='N' and DATA_MORTE is null) or (:decesso='S' and DATA_MORTE is not null))
					and VWA.IDEN_MED_BASE in (select IDEN_MEDICO from VIEW_UTENTI_GRUPPO where iden_utente=:iden_utente and RELAZIONE in ('TITOLARE','SOSTITUTO'))
					and (
						VWA.COD_FISC = :cod_fisc or (
							:cod_fisc is null and VWA.COGN LIKE :cogn||'%'
						and VWA.NOME LIKE '%'||:nome||'%'
						and (:data is null or VWA.DATAORDER = :data)
					)
					)
				) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_ACCESSO">
			<SQL>SELECT
				IDEN_ANAG,COGN,NOME,PAZIENTE,COD_FISC,DATAORDER,IDEN_MED_BASE,MED_BASE_DESCR,ID_REMOTO,VWA.READONLY,PIN_AAC,
				vwa.consenso_privacy_mmg,
				vwa.PERMESSI_LETTURA
				FROM VIEW_WK_ASSISTITI vwa
				WHERE COGN LIKE :cogn||'%'
				and NOME LIKE '%'||:nome||'%'
				and (:data is null or DATAORDER = :data)
				and (:cod_fisc is null or COD_FISC = :cod_fisc)
				and IDEN_ANAG IN (SELECT IDEN_ANAG FROM MMG_ACCESSI WHERE COD_REGIME_ACCESSO like :regime_accesso and IDEN_MED = :iden_utente)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_ULT">
			<!-- Attualmente non usata. Ci serve? -->
			<SQL>SELECT
				    vwa.IDEN_ANAG,
				    vwa.COGN,NOME,
				    vwa.PAZIENTE,
				    vwa.COD_FISC,
				    vwa.DATAORDER,
				    vwa.IDEN_MED_BASE,
				    vwa.MED_BASE_DESCR,
				    VWA.READONLY,
				    VWA.PIN_AAC,
				    vwa.consenso_privacy_mmg,
				    vwa.PERMESSI_LETTURA
				    FROM VIEW_WK_ASSISTITI vwa
					WHERE
					    vwa.COGN LIKE :cogn||'%' 
					    and vwa.NOME LIKE '%'||:nome||'%' 
					    and (:data is null or vwa.DATAORDER = :data) 
					    and (:cod_fisc is null or vwa.COD_FISC = :cod_fisc)
						and vwa.IDEN_ANAG IN (SELECT
							ma.IDEN_ANAG FROM MMG_ACCESSI ma
					    	WHERE ma.IDEN_MED = :iden_utente
							and ma.DATA between TO_CHAR(SYSDATE -:giorni,'YYYYMMDD') AND TO_CHAR(SYSDATE,'YYYYMMDD'))
					{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_GRUPPO">
			<SQL>select * from (SELECT
					VWA.IDEN_ANAG, VWA.COGN, VWA.NOME, VWA.PAZIENTE, VWA.COD_FISC, VWA.ID_REMOTO, VWA.PIN_AAC, VWA.DATAORDER, VWA.IDEN_MED_BASE, VWA.MED_BASE_DESCR, VWA.DATA_SCADENZA_assistenza,
					vwa.consenso_privacy_mmg, vwa.PERMESSI_LETTURA, VWA.READONLY
					FROM VIEW_WK_ASSISTITI VWA
					WHERE DATA_MORTE is null
					and (
						VWA.COD_FISC = :cod_fisc or (
							:cod_fisc is null and VWA.COGN LIKE :cogn||'%'
						and VWA.NOME LIKE '%'||:nome||'%'
						and (:data is null or VWA.DATAORDER = :data)
					)
					)
					and VWA.IDEN_MED_BASE in (select IDEN_MEDICO from VIEW_UTENTI_GRUPPO where iden_utente=:iden_utente and RELAZIONE in ('TITOLARE','SOSTITUTO','GRUPPO','SOSTITUTO_GRUPPO'))
				) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_ALL">
			<SQL>SELECT vwa.IDEN_ANAG, vwa.COGN, vwa.NOME, VWA.ID_REMOTO, VWA.PIN_AAC,
					vwa.PAZIENTE, vwa.COD_FISC, vwa.DATAORDER, vwa.IDEN_MED_BASE, 
					vwa.MED_BASE_DESCR, VWA.READONLY, vwa.consenso_privacy_mmg, vwa.PERMESSI_LETTURA
				FROM VIEW_WK_ASSISTITI vwa
				WHERE (
						VWA.COD_FISC = :cod_fisc or (
							:cod_fisc is null and VWA.COGN LIKE :cogn||'%'
				and VWA.NOME LIKE '%'||:nome||'%'
				and (:data is null or VWA.DATAORDER = :data)
						)
					)
				and (
					vwa.IDEN_MED_BASE in (select IDEN_MEDICO from VIEW_UTENTI_GRUPPO where iden_utente=:iden_utente and RELAZIONE in ('TITOLARE','SOSTITUTO','GRUPPO','SOSTITUTO_GRUPPO'))
					or vwa.IDEN_ANAG in (
						select IDEN_ANAG from MMG_ACCESSI where IDEN_MED=:iden_utente and DATA between TO_CHAR(SYSDATE -365,'YYYYMMDD') AND TO_CHAR(SYSDATE,'YYYYMMDD')
					)
				)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_NUMERO">
			<SQL>select count(VWA.IDEN) NUMERO_ASSISTITI
				FROM ANAG VWA
				join MMG_MEDICO_ASSISTITO MA on VWA.IDEN = MA.IDEN_ANAG and MA.CHIUSO = 'N' and MA.Attivo='S'
				WHERE 
					MA.IDEN_MED =:iden_med
					and VWA.DATA_MORTE is null
					and to_char(sysdate,'YYYYMMDD') &gt;= MA.DATA_INIZIO
					and nvl(MA.DATA_FINE,'99999999') &lt;= :scadenza_assistenza
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_STORICO">
			<SQL>SELECT distinct IDEN_ANAG,
				    COGN,
				    NOME,
				    PAZIENTE,
				    COD_FISC,
				    DATAORDER,
				    IDEN_MED_BASE,
				    MED_BASE_DESCR,
				    ID_REMOTO,
				    VWA.READONLY,
					vwa.consenso_privacy_mmg,
					vwa.PERMESSI_LETTURA
				FROM VIEW_WK_ASSISTITI VWA
				WHERE (
					VWA.COD_FISC = :cod_fisc or (
						:cod_fisc is null and VWA.COGN LIKE :cogn||'%'
					and VWA.NOME LIKE '%'||:nome||'%'
					and (:data is null or VWA.DATAORDER = :data)
				)
				)
				AND VWA.IDEN_ANAG in 
				(
					select iden_anag from mmg_medico_assistito where IDEN_MED = :iden_med_base and chiuso = 'S'
					minus
					select iden_anag from mmg_medico_assistito where IDEN_MED = :iden_med_base and chiuso = 'N'
				)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_WORKLIST">
			<SQL>select * from (
				select MA.IDEN_MED as IDEN_MED_BASE, VWA.IDEN_ANAG, VWA.PAZIENTE, VWA.COD_FISC, VWA.TELEFONO, VWA.RES_INDIRIZZO || ' - ' ||
				VWA.COMUNE_PROV INDIRIZZO, VWA.NOME, VWA.COGN, VWA.DATAORDER, VWA.DATA_SCADENZA_ASSISTENZA, VWA.READONLY,
				vwa.consenso_privacy_mmg,
				vwa.PERMESSI_LETTURA
				FROM VIEW_WK_ASSISTITI VWA
				join mmg_medico_assistito ma on  ma.iden_anag = vwa.iden_anag and ma.chiuso = 'N'
				WHERE 
					MA.IDEN_MED =:iden_med_base 
					and VWA.DATA_MORTE is null 
					and VWA.NOME LIKE :nome ||'%' 
					and VWA.COGN LIKE :cognome||'%' 
					and VWA.DATAORDER LIKE :data_nascita ||'%' 
					and to_char(sysdate,'YYYYMMDD') &gt;= MA.DATA_INIZIO
					and nvl(MA.DATA_FINE,'99999999') &lt;= :scadenza_assistenza
					AND (VWA.RES_INDIRIZZO LIKE '%'||:residenza ||'%' or VWA.COMUNE_PROV LIKE '%'||:residenza ||'%')
				) {#ORDER#} 
			</SQL>
		</QUERY>
		<QUERY id="ASSISTITI_REVOCATI">
			<SQL>
				with MEDICO_ASSISTITO as (
					select /*+first_rows(1000)*/ IDEN, IDEN_MED, IDEN_ANAG, DATA_FINE, rank() 
					over (partition by iden_anag order by DATA_FINE desc, IDEN DESC) RANGO 
					from MMG_MEDICO_ASSISTITO 
					where IDEN_MED = :iden_med_base
					and chiuso = 'S' 
					and ( DATA_FINE &gt;= :data_revoca )
					and ATTIVO='S'
				)
				SELECT  /*+first_rows(1000)*/ a.IDEN as IDEN_ANAG,
					a.cogn  || ' '  || a.nome  || ' '  || DATETIMECONVERTER( A.data , 'YYYYMMDD','DD/MM/YYYY') AS PAZIENTE,
					a.COD_FISC,
					A.TEL TELEFONO,
					RR_RPT_INDIRIZZO(a.IDEN) INDIRIZZO,
					a.NOME,
					a.COGN,
					A.DATA_MORTE,
				MMA.DATA_FINE AS DATA_SCADENZA_ORDER
				FROM DATI$ANAG a
				join MEDICO_ASSISTITO MMA on a.IDEN=MMA.IDEN_ANAG and MMA.RANGO=1
				left join MMG_MEDICO_ASSISTITO MMA2 on a.IDEN=MMA2.IDEN_ANAG and MMA2.IDEN_MED=MMA.IDEN_MED and MMA2.CHIUSO = 'N' and MMA2.ATTIVO='S'
				WHERE MMA2.IDEN is null
				and a.NOME LIKE :nome ||'%'
				AND a.COGN LIKE :cognome ||'%'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AGGIORNAMENTI">
			<SQL>SELECT IDEN, TO_CHAR( TO_DATE( DATA, 'YYYYMMDD'), 'DD/MM/YYYY' ) 
				DATA_AGGIORNAMENTO, TITOLO, MESSAGGIO FROM UNISYS$INFORMAZIONI 
				WHERE FUNZIONE = 'MMG' ORDER BY DATA DESC
			</SQL>
		</QUERY>
		<QUERY id="ANAGRAFE_SANITARIA">
			<SQL>SELECT
				IDEN_ANAG,COGN,NOME,PAZIENTE,COD_FISC,DATAORDER,IDEN_MED_BASE,CHIUSO,MED_BASE_DESCR, DATA_MORTE
				FROM VIEW_WK_ANAG_SANITARIA WHERE COGN LIKE :cogn||'%' and NOME LIKE
				'%'||:nome||'%' and (:data is null or DATAORDER = :data) and
				(:cod_fisc is null or COD_FISC = :cod_fisc) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="CONSENSI_NUMERO">
			<SQL>select count(iden) numero_consensi
				FROM MMG_SCHEDE_XML
				WHERE scheda in ('CONSENSO_PRIVACY_MMG','CONSENSO_PRIVACY_MMG_V2') and
        		(iden_anag in (select iden_anag from mmg_medico_assistito where IDEN_MED =:iden_med  and chiuso = 'N')
        		or iden_med = :iden_med 
        		or ute_ins = :iden_med) and deleted = 'N'
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_CONSENSI_PRIVACY">
			<SQL>select 
					/*+first_rows(100)*/
					X.IDEN,
					A.COGN || ' ' || A.NOME || ' ' || DATETIMECONVERTER(A.DATA,'YYYYMMDD','DD/MM/YYYY') AS PAZIENTE,
					A.IDEN_MED_BASE,
					X.IDEN_ANAG,
					X.DATA AS DATA_RECEPIMENTO,
					X.IDEN_MED,
					TPI.DESCR AS UTENTE_INSERIMENTO,
					TP.DESCR AS MEDICO_RECEPIMENTO,
					TPI.IDEN AS UTE_INS,
					case when x.scheda = 'CONSENSO_PRIVACY_MMG' THEN 'V1'
					WHEN X.SCHEDA = 'CONSENSO_PRIVACY_MMG_V2' THEN 'V2'
					END versione,
					x.scheda
				from mmg_schede_xml x 
					JOIN DATI$PERSONALE TP ON TP.IDEN = X.IDEN_MED
					JOIN DATI$PERSONALE TPI ON TPI.IDEN = X.UTE_INS
					JOIN DATI$ANAG A ON A.IDEN = X.IDEN_ANAG
				where X.scheda IN ('CONSENSO_PRIVACY_MMG','CONSENSO_PRIVACY_MMG_V2') 
				AND a.NOME LIKE :nome ||'%'
				AND a.COGN LIKE :cognome ||'%'
				AND x.data between :da_data and :a_data
				and (:iden_utente in (x.IDEN_MED, X.UTE_INS, A.IDEN_MED_BASE) or MMG_PERMESSI.IS_ADMINISTRATOR_SQL=1)
				AND X.DELETED='N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_ADP_OUT">
			<SQL>select 
				/*+first_rows(100)*/
				* from (
					select
					X.IDEN,
					a.cogn,
					a.nome,
					A.COGN || ' ' || A.NOME || ' ' || DATETIMECONVERTER(A.DATA,'YYYYMMDD','DD/MM/YYYY') AS PAZIENTE,
					A.IDEN_MED_BASE,
					X.IDEN_ANAG,
					X.DATA,
					x.deleted,
					EXTRACTVALUE(X.CONTENUTO_XML,'//CAMPO[@COL=''DATA_SCADENZA'']/text()') AS DATA_SCADENZA,
					X.IDEN_MED,
					X.DATA_INS,
					TPI.DESCR AS UTENTE_INSERIMENTO,
					TP.DESCR AS MEDICO_RECEPIMENTO,
					TPI.IDEN AS UTE_INS,
					x.scheda
					from mmg_schede_xml x 
					JOIN DATI$PERSONALE TP ON TP.IDEN = X.IDEN_MED
					JOIN DATI$PERSONALE TPI ON TPI.IDEN = X.UTE_INS
					JOIN DATI$ANAG A ON A.IDEN = X.IDEN_ANAG
					WHERE A.DELETED='N'
					)
				where scheda IN ('MMG_ASSISTENZA_PROGR_V2', 'MMG_ASSISTENZA_PROGR')
				and (UTE_INS = :iden_utente or :iden_med in (IDEN_MED_BASE, IDEN_MED))
				AND NOME LIKE :nome ||'%'
				AND COGN LIKE :cognome ||'%'
       			and nvl(data_Scadenza,'21000101') between :da_data and :a_data
        		/*AND EXISTSNODE(X.CONTENUTO_xml, '//CAMPO[@COL=''DATA_SCADENZA''][text() = '''' or text() &gt;= "'||:da_data||'" and text() &lt;= "'|| :a_data ||'"]') &gt; 0;*/
				and vua(IDEN_ANAG,:iden_utente,IDEN_MED,to_char(DATA_INS,'YYYYMMDD'),:vua,'N',UTE_INS) = 1
				AND DELETED='N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_ADP">
			<SQL>select 
				/*+first_rows(100)*/
				* from (
					select
					X.IDEN,
					a.cogn,
					a.nome,
					A.COGN || ' ' || A.NOME || ' ' || DATETIMECONVERTER(A.DATA,'YYYYMMDD','DD/MM/YYYY') AS PAZIENTE,
					A.IDEN_MED_BASE,
					X.IDEN_ANAG,
					X.DATA,
					x.deleted,
					EXTRACTVALUE(X.CONTENUTO_XML,'//CAMPO[@COL=''DATA_SCADENZA'']/text()') AS DATA_SCADENZA,
					X.IDEN_MED,
					X.DATA_INS,
					TPI.DESCR AS UTENTE_INSERIMENTO,
					TP.DESCR AS MEDICO_RECEPIMENTO,
					TPI.IDEN AS UTE_INS,
					x.scheda
					from mmg_schede_xml x 
					JOIN DATI$PERSONALE TP ON TP.IDEN = X.IDEN_MED
					JOIN DATI$PERSONALE TPI ON TPI.IDEN = X.UTE_INS
					JOIN DATI$ANAG A ON A.IDEN = X.IDEN_ANAG
					WHERE A.DELETED='N'
					)
				where scheda IN ('MMG_ASSISTENZA_PROGR_V2', 'MMG_ASSISTENZA_PROGR') 
				AND IDEN_ANAG = :iden_anag
       			and nvl(data_Scadenza,'21000101') between :da_data and :a_data
        		/*AND EXISTSNODE(X.CONTENUTO_xml, '//CAMPO[@COL=''DATA_SCADENZA''][text() = '''' or text() &gt;= "'||:da_data||'" and text() &lt;= "'|| :a_data ||'"]') &gt; 0;*/
				and vua(IDEN_ANAG,:iden_utente,IDEN_MED,to_char(DATA_INS,'YYYYMMDD'),:vua,'N',UTE_INS) = 1
				AND DELETED='N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="CONSULTA_AGENDA_GIORNALIERA">
			<SQL>SELECT
				/*+first_rows(100)*/
				IDEN_AGENDA,
				IDEN_AGENDA_CONFIGURATA,
				IDEN_EROGANTE,
				IDEN_FASCIA_ORARIA,
				ANAG.IDEN as IDEN_ANAGRAFICA,
				ANAG.COD_FISC,
				DATI$PERSONALE.IDEN AS IDEN_MEDICO,
				ORA,
				ANAG.NOME || ' ' ||
				ANAG.COGN || ' ' || ' ' || TO_CHAR( TO_DATE( ANAG.DATA,
				'YYYYMMDD' ),
				'dd/mm/yyyy' ) AS PAZIENTE,
				DATI$PERSONALE.DESCR AS DESCRIZIONE_MEDICO,
				ORARIO.DATA,
				IDEN_REGISTRO,
				IDEN_REGISTRO_DETTAGLIO,
				ORARIO.STATO,
				DESCRIZIONE_AGENDA,
				ORARIO.NOTE,
				ORA_INIZIO,
				ORA_FINE
				from table(
				GESTIONE_CONSULTA_PRENOTA.GET_GIORNO_ORARIO( :iden_medico,
				'MMG_MEDICO', :giorno ) ) ORARIO
				left outer join DATI$ANAG on (ANAG.IDEN =
				ORARIO.IDEN_PRENOTAZIONE and
				ANAG.DELETED = 'N')
				join DATI$PERSONALE on
				(DATI$PERSONALE.IDEN = ORARIO.IDEN_EROGANTE and DATI$PERSONALE.ATTIVO
				= 'S')
				where
				(ORARIO.STATO &lt;&gt; 'D' or ORARIO.STATO is null) and ( :tutti =
				'S' or ( :tutti = 'N' and ( (ORARIO.IDEN_PRENOTAZIONE is null or
				ORARIO.IDEN_PRENOTAZIONE = 0) and (ORARIO.STATO is null or
				ORARIO.STATO &lt;&gt; 'O' ) ) ) ) {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="CONTEGGIO_VACCINI">
			<SQL>select IDEN, COD_TIPOLOGIA_VACCINO, NR_LOTTO, NR_VACCINI_INS,
				NR_VACCINI_RES, DATA_SCADENZA
				FROM MMG_LOTTO_VACCINI WHERE UTE_INS =
				:iden_med and DELETED = 'N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="CRONOLOGIA_ACCESSI">
			<SQL>select IDEN, DATA, NOTE, PROBLEMI, NOTE_DIARIO, DESCR_TIPO_ACCESSO, UTE_INS, IDEN_MED
				from VIEW_ACCESSI
				WHERE DATA IS NOT NULL AND iden_anag = :iden_anag 
				and DATA BETWEEN :da_data_accesso AND :a_data_accesso
				and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, data, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO')=1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="CRONOLOGIA_ACCESSI_RIEPILOGO">
			<SQL>select DATA as DATA_ACCESSO, NOTE, PROBLEMI, NOTE_DIARIO, UTE_INS, IDEN_MED
				from VIEW_ACCESSI WHERE DATA between :da_data and :a_data
				and iden_anag = :iden_anag
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="DIARI">
			<SQL>select * from (
				select coalesce(c.IDEN_SCHEDA_XML,c.IDEN_GRAVIDANZA,c.IDEN) iden,
				c.IDEN as iden_nota,
				COALESCE(C.MED_INIZ, X.MED_INIZ) AS MEDICINA_INIZIATIVA,
				COALESCE(C.TIPO_MED_INIZ, X.TIPO_MED_INIZ) AS TIPO_MEDICINA_INIZIATIVA,
				c.TIPO,
				c.IDEN_PROBLEMA, 
				c.data as data, 
				c.DATA AS DATA_ISO, 
				c.data_ins AS data_inserimento,
				c.note AS nota,
				coalesce(x.oscurato,c.oscurato) as oscurato,
				(select descr from DATI$PERSONALE where iden = c.ute_ins) AS medico, 
				coalesce(x.scheda,c.tipo) SCHEDA,
		        CASE WHEN coalesce(x.scheda,c.tipo) like 'BILANCIO_SALUTE%' THEN
		          'BILANCI_DI_SALUTE'
		        WHEN coalesce(x.scheda,c.tipo) IN ('ANAMNESI','MMG_ANAMNESI_PRE_NEONATALE','MMG_VISITE','PLS_VISITE','VISITA'   ) THEN
		          'VISITE'
		        WHEN coalesce(x.scheda,c.tipo) IN ('RILEVAZIONI') THEN
		          'RILEVAZIONI'
		        ELSE
		          c.TIPO
		        end TIPO_NOTE,
				c.UTE_INS,
				c.IDEN_MED
				from mmg_diario c
				left join MMG_SCHEDE_XML x on c.iden_scheda_xml=x.iden
				where c.data between :data_da and :data_a
				and c.iden_anag = :iden_anag
				and (
					c.iden_problema = :iden_problema or
					:iden_problema is null 
					/* or c.iden_problema in (select iden_parent from mmg_problemi where iden = :iden_problema) */
					or c.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		)
				and c.deleted = 'N'
				and VUA(c.IDEN_ANAG, :iden_utente, c.IDEN_MED, c.data, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',coalesce(x.oscurato,c.oscurato),c.ute_ins)=1
				) where (:scheda='ALL' or SCHEDA=:scheda) 
       			AND ('ALL' = :tipo_nota  or TIPO_NOTE IN(select column_value from table(split(:tipo_nota))))
        		AND (TIPO != :escludiMI OR TIPO IS NULL) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="DIARI_PLS">
			<SQL>SELECT * FROM (
			    
			    /*Note diario senza schede associate, comprese gravidanze*/
			    
			    	SELECT coalesce(c.IDEN_GRAVIDANZA,c.IDEN) as IDEN,
			    		c.IDEN as iden_nota,
						c.IDEN_PROBLEMA,
						c.ute_ins,
						c.IDEN_MED,
						c.DATA AS DATA_ISO,
						c.data_ins AS data_inserimento,
						c.oscurato,
						(SELECT descr FROM DATI$PERSONALE WHERE iden = c.IDEN_MED) AS medico,
						c.tipo AS SCHEDA,
						c.TIPO TIPO_NOTE,
						c.note AS nota
					FROM mmg_diario c
					WHERE c.data BETWEEN :data_da AND :data_a
					AND c.iden_anag			 = :iden_anag
					AND ( c.iden_problema = :iden_problema
					OR :iden_problema		IS NULL
					OR c.iden_problema	 IN
						(SELECT iden FROM mmg_problemi WHERE iden_parent = :iden_problema)
					)
					AND c.IDEN_SCHEDA_XML is null
					AND c.deleted = 'N'
					AND VUA(c.IDEN_ANAG, :iden_utente, c.IDEN_MED, c.data, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',c.oscurato,c.UTE_INS)=1
						
						UNION ALL
					
			    /*Schede XML considerate da TAB_CONFIGURA_XSLT*/
			    
					SELECT *
					FROM
						(SELECT x.IDEN,
							null as iden_nota,
							x.IDEN_PROBLEMA,
							x.ute_ins,
							x.IDEN_MED,
							x.DATA DATA_ISO,
							TO_CHAR(x.DATA_INS,'YYYYMMDD') DATA_INSERIMENTO,
							x.oscurato,
							(SELECT descr FROM DATI$PERSONALE WHERE iden = x.IDEN_MED) AS medico,
							SCHEDA,
							CASE
								WHEN x.scheda like 'BILANCIO_SALUTE%'
								THEN 'BILANCI_DI_SALUTE'
								WHEN x.scheda IN ('ANAMNESI','MMG_ANAMNESI_PRE_NEONATALE','MMG_VISITE','PLS_VISITE','VISITA' )
								THEN 'VISITE'
								WHEN x.scheda IN ('RILEVAZIONI')
								THEN 'RILEVAZIONI'
								ELSE 'NOTE'
							END TIPO_NOTE,
							f_GetXML_XSLTed(scheda,:iden_utente,:iden_gruppo,:tipo_med,contenuto_xml) AS NOTA
						FROM mmg_schede_xml X
						WHERE iden_anag =:iden_anag
						AND VUA(IDEN_ANAG, :iden_utente, x.iden_med, DATA, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', x.oscurato, x.UTE_INS)=1
						AND DELETED = 'N')
					WHERE NOTA IS NOT NULL
					AND DATA_ISO BETWEEN :data_da AND :data_a
					AND ( iden_problema = :iden_problema
					OR :iden_problema	IS NULL
					OR iden_problema IN (SELECT iden FROM mmg_problemi WHERE iden_parent = :iden_problema)
					)
						
						UNION ALL
					
			    /*Rilevazioni*/
			    
					SELECT NULL AS IDEN,
						null as iden_nota,
						IDEN_PROBLEMA,
						ute_ins,
						IDEN_MED,
						DATA AS DATA_ISO,
						DATA AS DATA_INSERIMENTO,
						'N' oscurato,
						(SELECT descr FROM DATI$PERSONALE WHERE iden = iden_med) AS medico,
						'RILEVAZIONI' AS SCHEDA,
						'RILEVAZIONI' AS tipo_note,
						f_GetXML_XSLTed( 'RILEVAZIONI', :iden_utente, :iden_gruppo, :tipo_med, xmlelement("RILEVAZIONE", xmlelement("DATA",DATA), xmlelement("IDEN_ANAG",IDEN_ANAG), xmlelement("PESO",MAX(peso)), xmlelement("ALTEZZA",MAX(altezza)), xmlelement("BMI",MAX(bmi)), xmlelement("DIAMETRO_FONTANELLA",MAX(DIAMETRO_FONTANELLA)), xmlelement("CIRCONF_CRANICA",MAX(CIRCONF_CRANICA)) ) ) AS NOTA
						FROM
							(SELECT iden_anag,
								iden_med,
								data,
								iden_problema,
								altezza,
								peso,
								bmi,
								NULL AS DIAMETRO_FONTANELLA,
								NULL AS CIRCONF_CRANICA,
								ute_ins
							FROM mmg_accert_rilevazioni
							WHERE tipo_rilevazione = 'PESO_ALTEZZA'
							AND deleted						='N'
							UNION ALL
							SELECT iden_anag,
								iden_med,
								data,
								iden_problema,
								NULL		 AS altezza,
								NULL		 AS peso,
								NULL		 AS bmi,
								valore_1 AS DIAMETRO_FONTANELLA,
								NULL		 AS CIRCONF_CRANICA,
								ute_ins
							FROM mmg_accert_rilevazioni
							WHERE tipo_rilevazione = 'DIAMETRO_FONTANELLA'
							AND deleted						='N'
							UNION ALL
							SELECT iden_anag,
								iden_med,
								data,
								iden_problema,
								NULL		 AS altezza,
								NULL		 AS peso,
								NULL		 AS bmi,
								NULL		 AS DIAMETRO_FONTANELLA,
								valore_1 AS CIRCONF_CRANICA,
								ute_ins
							FROM mmg_accert_rilevazioni
							WHERE tipo_rilevazione = 'CIRCONF_CRANICA'
							AND deleted						='N'
							)
					WHERE iden_anag = :iden_anag
					AND data BETWEEN :data_da AND :data_a
					AND ( iden_problema = :iden_problema
					OR :iden_problema	IS NULL
					OR iden_problema	 IN
						(SELECT iden FROM mmg_problemi WHERE iden_parent = :iden_problema)
					)
					AND VUA(IDEN_ANAG, :iden_utente, IDEN_MED, data, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO','N',UTE_INS)=1
					GROUP BY data,
						iden_anag,
						iden_med,
						iden_problema,
						UTE_INS ) WHERE 'ALL' = :tipo_nota OR TIPO_NOTE IN (SELECT column_value FROM TABLE(split(:tipo_nota))
						  
				)  {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="DIARI_WK_MED_INIZ">
			<SQL>select * from (
				select coalesce(c.IDEN_SCHEDA_XML,c.IDEN_GRAVIDANZA,c.IDEN) iden,
				c.IDEN as iden_nota,
				COALESCE(C.MED_INIZ, X.MED_INIZ) AS MEDICINA_INIZIATIVA,
				COALESCE(C.TIPO_MED_INIZ, X.TIPO_MED_INIZ) AS TIPO_MEDICINA_INIZIATIVA,
				c.TIPO,
				c.IDEN_PROBLEMA, 
				c.data as data, 
				c.DATA AS DATA_ISO, 
				c.data_ins AS data_inserimento,
				c.note AS nota,
				coalesce(x.oscurato,c.oscurato) as oscurato,
				(select descr from DATI$PERSONALE where iden = c.ute_ins) AS UTENTE_INSERIMENTO,
				(select descr from DATI$PERSONALE where iden = c.IDEN_MED) AS MEDICO, 
				coalesce(x.scheda,c.tipo) SCHEDA,
		        CASE WHEN coalesce(x.scheda,c.tipo) IN ('BILANCIO_SALUTE','BILANCIO_SALUTE_1','BILANCIO_SALUTE_2','BILANCIO_SALUTE_3','BILANCIO_SALUTE_4','BILANCIO_SALUTE_5','BILANCIO_SALUTE_6','BILANCIO_SALUTE_7','BILANCIO_SALUTE_8') THEN
		          'BILANCI_DI_SALUTE'
		        WHEN coalesce(x.scheda,c.tipo) IN ('ANAMNESI','MMG_ANAMNESI_PRE_NEONATALE','MMG_VISITE','PLS_VISITE','VISITA'   ) THEN
		          'VISITE'
		        WHEN coalesce(x.scheda,c.tipo) IN ('RILEVAZIONI') THEN
		          'RILEVAZIONI'
		        ELSE
		          c
		        end TIPO_NOTE,
				c.UTE_INS,
				c.IDEN_MED
				from mmg_diario c
				left join MMG_SCHEDE_XML x on c.iden_scheda_xml=x.iden
				where c.data between :data_da and :data_a
				and c.iden_anag = :iden_anag
				and (
					c.iden_problema = :iden_problema or
					:iden_problema is null 
					or c.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		)
				and c.deleted = 'N'
				and VUA(c.IDEN_ANAG, :iden_utente, c.IDEN_MED, c.data, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',coalesce(x.oscurato,c.oscurato),c.ute_ins)=1
				) where MEDICINA_INIZIATIVA = 'S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="SOSTITUZIONI_MEDICO">
			<SQL>select
				iden,s.data_inizio,s.data_fine,s.tipo_sostituzione,s.note,(select
				descr from DATI$PERSONALE where iden=s.iden_med_sostituto)
				med_sostituto from mmg_medico_sostituzioni s where s.iden_med =
				:iden_med_curante and tipo_sostituzione in ('LUNGA','BREVE') and
				attivo='S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ESENZIONI">
			<SQL>SELECT IDEN, CODICE, DESCRIZIONE ESENZIONE, ESENZIONE
				COD_TIPOLOGIA, ESENZIONE_DESCR TIPOLOGIA FROM VIEW_RR_ESENZIONI
				WHERE ATTIVO = 'S' and DESCRIZIONE like '%'||:descr ||'%' and CODICE
				like :codice ||'%' {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="ESENZIONI_PAZIENTE">
			<SQL>select iden_esenzione iden, codice_esenzione codice , data_ini_es_paz, data_fine_es_paz, FONTE_ESENZIONE,
				descr_esenzione esenzione, tipo_esenzione tipologia from
				view_rr_pazienti_esenzioni WHERE IDEN_ANAG = :iden_anag
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ESENZIONI_PAZIENTE_SCADUTE">
			<SQL>
				SELECT
			    /*+first_rows(10)*/
			    EP.IDEN_ANAG,
			    TEP.IDEN IDEN_ESENZIONE,
			    COD_ESENZIONE CODICE_ESENZIONE,
			    descr descr_esenzione,
			    tep.tipologia,
			    DATETIMECONVERTER( EP.DATA_FINE , 'YYYYMMDD','DD/MM/YYYY' ) DATA_FINE_ESENZIONE
			  FROM
			    DATI$ESENZIONI_PAZIENTE EP
			  LEFT OUTER JOIN DATI$ESENZIONI TEP
			  ON
			    TEP.IDEN = EP.IDEN_ESENZIONE
			  WHERE
			   EP.DATA_FINE &lt; TO_CHAR(SYSDATE, 'YYYYMMDD') AND 
          		IDEN_ANAG = :iden_anag{#ORDER#}
			</SQL>
		</QUERY>
		
		<QUERY id="FARMACI">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				decode(LISTA_TRASPARENZA,'S','SI','') SOSTITUIBILE,
				CODICE_EQUIVALENZA, TIPO_PRESCR
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				WHERE COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C') AND CONTAINS(DESCRIZIONE, :bind||'%', 1) &gt; 0
				{#ORDER#}
			</SQL>
		</QUERY>
		
		<QUERY id="FARMACI_CODICE">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				decode(LISTA_TRASPARENZA,'S','SI','') SOSTITUIBILE,
				CODICE_EQUIVALENZA, TIPO_PRESCR
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				WHERE COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C') AND CODICE_PRODOTTO = :bind
				{#ORDER#}
			</SQL>
		</QUERY>
		
		<QUERY id="FARMACI_DESCR_PA">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				CASE when CODICE_EQUIVALENZA IS NULL THEN ''
				ELSE 'SI' end SOSTITUIBILE,
				CODICE_EQUIVALENZA
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				WHERE COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C') AND CONTAINS(PRINCIPIO_ATTIVO, :bind||'%', 1)
				&gt; 0 {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="FARMACI_PA">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				CASE when CODICE_EQUIVALENZA IS NULL THEN ''
				ELSE 'SI' end SOSTITUIBILE,
				CODICE_EQUIVALENZA
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				WHERE COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C')  AND CODICE_PRINCIPIO_ATTIVO=:bind {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="FARMACI_PA_CONF">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				CASE when CODICE_EQUIVALENZA IS NULL THEN ''
				ELSE 'SI' end SOSTITUIBILE,
				CODICE_EQUIVALENZA
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				where COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C')  AND codice_prodotto in((SELECT
				CODICE_PRODOTTO_EQUIVALENTE from FARMADATI$V_COD_FARMACI_EQUIV
				where codice_prodotto = :bind )) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="FARMACI_ATC">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA, CASE WHEN NOTE_SULLA_PRESCRIZ_2 IS NOT NULL THEN NOTE_SULLA_PRESCRIZ_1||', '||NOTE_SULLA_PRESCRIZ_2 ELSE NOTE_SULLA_PRESCRIZ_1 END NOTE_CUF,
				(select count(iden) from PT$TERAPIE where codice_farmaco=CODICE_PRODOTTO and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)) PT,
				CASE when CODICE_EQUIVALENZA IS NULL THEN ''
				ELSE 'SI' end SOSTITUIBILE,
				CODICE_EQUIVALENZA
				FROM FARMADATI$VM_PRODOTTI_RICERCA
				WHERE COMMERCIO = 'S' and codice_principio_attivo is not null and
				CLASSE in ('A', 'C')  AND ATC_GMP = :bind {#ORDER#}</SQL>
		</QUERY>		
		<QUERY id="FARMACI_MED_INIZ">
			<SQL>select * from (
					select 
					FARMACO,
					IDEN_MEDICO,
					attivo,
					med_iniz,
					iden_anag,
					A.Data_Iso as data_prescr,
					(SELECT DESCR FROM DATI$PERSONALE WHERE IDEN = A.IDEN_MEDICO) as MEDICO ,
					(SELECT DESCR FROM DATI$PERSONALE WHERE IDEN = A.IDEN_utente) as UTENTE ,
					COD_FARMACO, 
					posologia,
					DATA 
					from 
					VIEW_RICETTA_FARMACI A )
				where IDEN_ANAG = :iden_anag 
				and MED_INIZ = 'S' 
				and UTENTE LIKE :utente || '%'
				and medico like :medico || '%'
				and data_prescr between :data_da and :data_a
				and ATTIVO = 'S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="GRUPPI_ACC">
			<SQL>SELECT DESCRIZIONE , IDEN FROM MMG_GRUPPI_ACC WHERE
				DESCRIZIONE IS NOT NULL AND ATTIVO = 'S' AND DESCRIZIONE like
				:descrizione and (IDEN_UTENTE=:iden_utente or CODICE_CDC in (select
				COD_CDC from VIEW_UTENTI_CDC where IDEN_PER=:iden_utente) or
				(IDEN_UTENTE is null and CODICE_CDC is null)) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="INTERVENTI">
			<SQL>select IDEN, UTE_INS, IDEN_MED, DATA_INTERVENTO, DESCRIZIONE, DESCRIZIONE_ICD9,
				CODICE_ICD9,OSCURATO from MMG_INTERVENTI where IDEN_ANAG = :iden_anag and
				deleted = 'N' and (oscurato != 'S' or UTE_INS = :iden_per ) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="LISTA_VACCINI">
			<SQL>select DESCRIZIONE, DESCR_PERS, CODICE FROM MMG_VACCINI
				where IDEN_ANAG = :iden_anag and deleted = 'N' AND ATTIVO = 'S'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="MEDICI">
			<SQL>select iden_cdc, cod_dec, descrizione, iden_per, cod_cdc, descrizione_cdc
				from view_utenti_cdc v
				where tipo_utente='M'
				and ((v.IDEN_PER=:iden_per and COD_CDC is null) or
				COD_CDC in (select COD_CDC from view_utenti_cdc where iden_per=:iden_per))
				and (descrizione like :descr and cod_dec like :codice)
			</SQL>
		</QUERY>
		<QUERY id="POSOLOGIE">
			<SQL>select IDEN,codice, descrizione posologia, qta, qta_giornaliera,
				personale, iden_med from MMG_POSOLOGIA WHERE DESCRIZIONE LIKE :bind
				and (PERSONALE = 'N' OR (PERSONALE = 'S' AND (ute_ins is not null
				and UTE_INS = :ute))) and attivo = 'S' and deleted = 'N' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="PRESIDI">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA FROM FARMADATI$V_PRODOTTI_RICERCA WHERE COMMERCIO ='S' 
		        /*and (classe is null or classe in ('1','2A','B2','H','3','1A','0','NC','B','B1','2B','CN','2'))
		        and principio_attivo is null*/
		        and (classe not in ('A','C') OR CLASSE IS NULL)
		        AND CONTAINS(descrizione,:bind||'%', 1) &gt; 0 {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="PRESIDI_CODICE">
			<SQL>select CODICE_PRODOTTO CODICE, DESCRIZIONE FARMACO, CLASSE,
				ATC_GMP ATC, PRINCIPIO_ATTIVO, CODICE_PRINCIPIO_ATTIVO, PREZZO_EURO,
				FORMA, CONTENITORE, REGIME_SSN, substr(REGIME_SSN_SN,1,1)
				CONCEDIBILITA FROM FARMADATI$V_PRODOTTI_RICERCA WHERE COMMERCIO ='S' 
		        /*and (classe is null or classe in ('1','2A','B2','H','3','1A','0','NC','B','B1','2B','CN','2'))
		        and principio_attivo is null*/
		        and (classe not in ('A','C') OR CLASSE IS NULL)
		        AND CODICE_PRODOTTO = :bind {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="PROBLEMI">
			<SQL>with FLAG_CHIUSO as (select regexp_substr(x, '[^,]+', 1, level)
				CHIUSO
				from(select :chiuso x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1)
				select
				VP.ordinamento_problema,
				VP.iden, 
				VP.DATA_INSERIMENTO, VP.data,
				VP.data as data_iso, VP.CHIUSO, VP.CHIUSO_DESCR ||
				decode(vp.nascosto,'S',' (Nascosto)','') || case when PAT_SUMMARY = 'S' THEN ' - [PS]' else '' end CHIUSO_DESCR, VP.PROBLEMA,
				VP.PROBLEMA_COMPLETO,
				VP.PROBLEMA_COMPLETO_INVERTITO,  
				VP.DATA_CHIUSURA, 
				VP.NOTE_CHIUSURA,
				VP.CODICE_ICD9,
				vp.iden_parent,
				VP.IDEN_PARENT_PROBLEMA,
				VP.DESCR_ICD9, vp.oscurato, 
       			vp.rischio,
				VP.IDEN_ANAG,
				VP.UTE_INS,
				vp.iden_med,
				VP.IDEN_ACCESSO,
				VP.PAT_SUMMARY,
				VP.NASCOSTO,
				VP.TIPO_PROBLEMA,
				VP.PARENT,
				VP.DESCR_MED
				from VIEW_PROBLEMI VP
				where vp.data between :data_da
				and :data_a
				and vp.IDEN_ANAG =:iden_anag
				and vp.CHIUSO in (select CHIUSO from FLAG_CHIUSO)
				and vp.nascosto like :nascosto
				AND VP.IDEN_PARENT IS NULL
				and VUA(vp.IDEN_ANAG,:iden_utente,vp.iden_med,to_char(vp.data_ins,'YYYYMMDD'),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',vp.oscurato, VP.UTE_INS)=1
				and VP.SITO in ('MMG')
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="PROBLEMI_PS">
			<SQL>with FLAG_CHIUSO as (select regexp_substr(x, '[^,]+', 1, level)
				CHIUSO
				from(select :chiuso x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1)
				select
				ordinamento_problema,iden, DATA_INSERIMENTO, data, data as data_iso,
				CHIUSO, CHIUSO_DESCR, PROBLEMA, PROBLEMA_COMPLETO, DATA_CHIUSURA,OSCURATO,NASCOSTO,
				CODICE_ICD9, DESCR_ICD9, IDEN_ANAG, UTE_INS, IDEN_ACCESSO, DESCR_MED, RISCHIO,
				case when RISCHIO = 'S' THEN 2 else 1 end ORDINE_RISCHIO, VP.PARENT
				from VIEW_PROBLEMI VP
				where IDEN_ANAG =:iden_anag 
				and CHIUSO in (select CHIUSO from FLAG_CHIUSO) 
				and nascosto like :nascosto
				and PAT_SUMMARY = 'S' and (oscurato != 'S' or ute_ins = :iden_per)
				and VP.SITO in ('MMG')
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="PROBLEMI_CHILD">
			<SQL>with FLAG_CHIUSO as (select regexp_substr(x, '[^,]+', 1, level)
				CHIUSO
				from(select :chiuso x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1)
				select
				VP.ordinamento_problema,VP.iden, VP.DATA_INSERIMENTO, VP.data,
				VP.data as data_iso, VP.CHIUSO, VP.CHIUSO_DESCR ||
				decode(vp.nascosto,'S',' (Nascosto)','') || case when PAT_SUMMARY = 'S' THEN ' - [PS]' else '' end CHIUSO_DESCR, VP.PROBLEMA,
				VP.PROBLEMA_COMPLETO,
				VP.PROBLEMA_COMPLETO_INVERTITO,  
				VP.DATA_CHIUSURA, 
				VP.NOTE_CHIUSURA,
				VP.CODICE_ICD9,
				vp.iden_parent,
				VP.IDEN_PARENT_PROBLEMA,
				VP.DESCR_ICD9, 
				vp.oscurato, 
       			vp.rischio,
				VP.IDEN_ANAG, VP.UTE_INS, VP.IDEN_ACCESSO, VP.PAT_SUMMARY,
				VP.NASCOSTO,
				VP.PARENT,
				VP.TIPO_PROBLEMA,
				VP.DESCR_MED
				from VIEW_PROBLEMI VP
				where vp.IDEN_ANAG = :iden_anag
				and vp.CHIUSO in (select CHIUSO from FLAG_CHIUSO)
				and vp.nascosto like :nascosto
				AND VP.IDEN_PARENT = :iden_parent
				and VUA(vp.IDEN_ANAG,:iden_utente,vp.iden_med,to_char(vp.data_ins,'YYYYMMDD'),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',vp.oscurato)=1
				and VP.SITO in ('MMG')
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_BMI">
			<SQL>SELECT IDEN, DATA_INS, DATA, IDEN_ANAG, IDEN_MED, UTE_INS, PESO, ALTEZZA,
				BMI, CIRCONF_ADDOMINALE, ATT_FISICA, TIPO_RILEVAZIONE, IDEN_VISITA
				FROM VIEW_RILEVAZIONI_BMI
				where iden_anag = :iden_anag and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_BMI_PLS">
			<SQL>select iden,to_char(data_ins,'dd/MM/yyyy') data_ins, UTE_INS, IDEN_MED, 
				DATA,altezza,get_Riferimento_Centile(iden_anag, 'ALTEZZA',altezza, data) cent_altezza,peso,
				get_Riferimento_Centile(iden_anag,'PESO',peso,data) cent_peso,
				bmi,tipo_rilevazione,iden_visita
				from MMG_ACCERT_RILEVAZIONI
				where iden_anag = :iden_anag
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and tipo_rilevazione ='PESO_ALTEZZA' and deleted='N' and DATA between :da_data and :a_data {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_CIRC_CRANICA">
			<SQL>select iden,to_char(data_ins,'dd/MM/yyyy') data_ins, UTE_INS, IDEN_MED, 
				DATA,valore_1 circ_cranica,get_Riferimento_Centile(iden_anag,'CIRC_CRANICA',VALORE_1, data) CENTILE,
				tipo_rilevazione,iden_visita from MMG_ACCERT_RILEVAZIONI where iden_anag = :iden_anag 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and tipo_rilevazione ='CIRCONF_CRANICA' and deleted='N' and DATA &gt;= :da_data and DATA &lt;= :a_data {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_DIA_FONTANELLA">
			<SQL>select iden,to_char(data_ins,'dd/MM/yyyy') data_ins,
				DATA,valore_1 DIA_FONTANELLA,tipo_rilevazione,iden_visita, iden_med, ute_ins from
				MMG_ACCERT_RILEVAZIONI where iden_anag = :iden_anag
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1 and
				tipo_rilevazione ='DIAMETRO_FONTANELLA' and deleted='N' and DATA &gt;= :da_data and DATA &lt;= :a_data {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_TEMPERATURA">
			<SQL>select iden,to_char(data_ins,'dd/MM/yyyy') data_ins, DATA, UTE_INS, IDEN_MED,
				valore TEMPERATURA, tipo_rilevazione, IDEN_VISITA
				from MMG_ACCERT_RILEVAZIONI
				where iden_anag = :iden_anag and tipo_rilevazione ='TEMPERATURA' and
				deleted='N' and DATA &gt;= :da_data and DATA &lt;= :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_CARDIO">
			<SQL>select IDEN, DATA_INS, DATA, IDEN_ANAG, IDEN_MED, UTE_INS, FREQUENZA,
				RITMO, AMPIEZZA, SIMMETRIA, IDEN_VISITA FROM VIEW_RILEVAZIONI_CARDIO where
				iden_anag = :iden_anag and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_PRESSIONE">
			<SQL>select IDEN, DATA_INS, DATA, IDEN_ANAG, IDEN_MED, UTE_INS, MINIMA,
				MASSIMA, (select 'RILEVAZIONE_PRESSIONE' from DUAL) TIPO_RILEVAZIONE, IDEN_VISITA
				FROM VIEW_RILEVAZIONI_PRESSIONE where iden_anag = :iden_anag and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ALCOOL_FUMO">
			<SQL>select COGN || ' ' || NOME || ' ' ||
				TO_CHAR(TO_DATE(a.data,'YYYYMMDD'),'DD/MM/YYYY') PAZIENTE , DATA,
				TO_CHAR(M.DATA_INS,'yyyyMMdd')DATA_INS, M.iden_MED, M.FUMO, M.ALCOL,
				M.NOTE_FUMO, M.NOTE_ALCOL from MMG_ACCERT_RILEVAZIONI M inner
				join DATI$ANAG a on a.IDEN = M.IDEN_ANAG where a.IDEN = :IDEN_ANAG
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_ALCOL">
			<SQL>select M.IDEN, M.DATA, TO_CHAR(M.DATA_INS,'yyyyMMdd')DATA_INS, UTE_INS, IDEN_MED, 
				M.ALCOL, M.NOTE_ALCOL, (select DESCR from DATI$PERSONALE where
				IDEN=M.IDEN_MED) MEDICO from MMG_ACCERT_RILEVAZIONI M where
				M.TIPO_RILEVAZIONE = 'ALCOL' AND IDEN_ANAG = :iden_anag and DELETED
				= 'N' and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_FUMO">
			<SQL>select M.IDEN, M.DATA, TO_CHAR(M.DATA_INS,'yyyyMMdd')DATA_INS, UTE_INS, IDEN_MED, 
				M.FUMO, M.NOTE_FUMO, (select DESCR from DATI$PERSONALE where
				IDEN=M.IDEN_MED) MEDICO from MMG_ACCERT_RILEVAZIONI M where
				M.TIPO_RILEVAZIONE = 'FUMO' AND M.IDEN_ANAG = :iden_anag and DELETED
				= 'N' and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RILEVAZIONI_ALTRO">
			<SQL>select M.IDEN, M.DATA, TO_CHAR(M.DATA_INS,'yyyyMMdd')DATA_INS, UTE_INS, IDEN_MED, 
				M.VALORE_1 VALORE, M.TIPO_RILEVAZIONE, (select DESCR from DATI$PERSONALE
				where IDEN=M.IDEN_MED) MEDICO, IDEN_VISITA from MMG_ACCERT_RILEVAZIONI M
				where M.TIPO_RILEVAZIONE IN ('INR','TAO','GLICEMIA','SATURAZIONE OSSIGENO') AND M.IDEN_ANAG
				= :iden_anag and DELETED = 'N' and DATA between :da_data and :a_data 
				and VUA(IDEN_ANAG, :iden_med, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="SCADENZARIO_BACHECA">
			<!-- SQL>select iden, descrizione, data_inizio, note, trunc(sysdate - to_date(data_inizio,'yyyyMMdd')) || ' gg' ritardo 
				from bacheca where iden_anagrafica = :iden_anag and iden_personale = :iden_med and sezione = :sezione and attivo = :attivo {#ORDER#}
			</SQL-->
			<!-- SQL>select eseguito, codice, descrizione, data_inizio, decode(eseguito, 0, trunc(sysdate - to_date(data_inizio,'yyyyMMdd')) || ' gg', '') ritardo, note from (
				 select sc.codice, sc.descr descrizione, (select to_char((to_date(data,'yyyyMMdd') + sc.scadenza_giorni),'yyyyMMdd') from anag where iden = :iden_anag) data_inizio, sc.note, 
				(select count(iden) from mmg_schede_xml where iden_anag = :iden_anag and scheda = sc.codice ) eseguito, 'SCADENZARIO' sezione
				    from scadenzario sc where (sc.iden_med is null or sc.iden_med = :iden_med) and sc.attivo = :attivo) where sezione = :sezione {#ORDER#}
			</SQL-->
			<SQL>select COL01 AS IDEN, COL02 AS CODICE, COL03 AS DESCRIZIONE, COL04 AS ESEGUITO, COL05 AS RITARDO, COL06 AS NOTE, COL07 AS DATA_PREVISTA from table(GET_SCADENZARIO_MEDICO_PAZ(:iden_med,:iden_anag,:mostra_completati)) {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="SCADENZARIO_MEDICO">
			<SQL>select IDEN,DESCR,SCADENZA_GIORNI,NOTE,ATTIVO,RICORRENTE, CASE WHEN IDEN_MED IS NULL THEN 'comune' ELSE 'personale' end TIPO, IDEN_MED from SCADENZARIO WHERE (IDEN_MED is null or IDEN_MED = :iden_med) and ATTIVO like :attivo {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="SCREENING">
			<SQL>select IDEN, DATA DATA_SCREENING, UTE_INS, IDEN_MED, TIPO_SCREENING,
				ESITO_SCREENING, OSCURATO from MMG_SCREENING WHERE IDEN_ANAG =:iden_anag
				and DELETED = 'N' and VUA(IDEN_ANAG, :ute_ins, UTE_INS, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',OSCURATO) = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="STORICO_CONSENSO">
			<SQL>select 
				X.IDEN,
				x.data as data_iso,
				to_char(x.data_ins, 'hh24:mm:ss') as ora,
				x.ute_ins,
				x.iden_anag,
				scheda,
				tp.descr as utente_inserimento,
				tpm.descr as medico_riferimento
				from mmg_schede_xml_bck x
				join DATI$PERSONALE tp on tp.iden = x.UTE_INS
				join DATI$PERSONALE tpm on tpm.iden = x.iden_med
				where scheda IN ('CONSENSO_PRIVACY_MMG','CONSENSO_PRIVACY_MMG_V2') 
				AND x.DELETED = 'N' 
				AND x.IDEN_ANAG = :iden_anag 
				and x.DATA between :da_data and :a_data 
				and evento = 'U' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="TERAPIE">
			<SQL>select distinct FARMACO,IDEN_MEDICO, (SELECT DESCR FROM DATI$PERSONALE
				WHERE IDEN = A.IDEN_MEDICO)MEDICO ,COD_FARMACO, posologia, DATA_ISO,
				DATA from VIEW_RICETTA_FARMACI A where IDEN_ANAG = :iden_anag and
				CRONICITA = :cronicita and ATTIVO = 'S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="TERAPIE_PA">
			<SQL>select distinct IDEN,DESCR_PA FARMACO,IDEN_MEDICO,(SELECT DESCR FROM DATI$PERSONALE
				where IDEN = a.IDEN_MEDICO)MEDICO ,COD_FARMACO, POSOLOGIA, DATA_ISO,
				data, OSCURATO from VIEW_RICETTA_FARMACI a where IDEN_ANAG = :iden_anag and
				CRONICITA = :cronicita and ATTIVO = 'S' and (oscurato != 'S' or IDEN_MEDICO = :iden_per) {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ACCERTAMENTI_PROBLEMA">
			<SQL>SELECT A.IDEN, A.DATA_ISO DATA_ACC, COALESCE(A.ACCERTAMENTO,VP.DESCRIZIONE) ACCERTAMENTO
        		FROM MMG_ACCERTAMENTI A
				JOIN MMG_ACCERTAMENTI_DETTAGLIO D on A.IDEN=D.IDEN
        		LEFT OUTER JOIN VIEW_rr_ACCERTAMENTI VP ON ( VP.codice = A.CODICE_ACCERTAMENTO )
        		where A.IDEN_ANAG =:iden_anag AND A.DELETED = 'N' AND A.IDEN_PROBLEMA = :iden_problema
        		and VUA(A.IDEN_ANAG, :iden_med, A.IDEN_MED, A.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', D.OSCURATO, A.UTE_INS) = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ALLEGATI">
			<SQL>SELECT IDEN, IDEN_ANAG, PAZIENTE, DATA_DOC, DESCRIZIONE, NOME_FILE, TIPO_EPISODIO, TIPO_DOC
				FROM VIEW_WK_ALLEGATI
				WHERE IDEN_ANAG = :iden_anag
				and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA_DOC, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',OSCURATO,IDEN_PER) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_BILANCI">
			<SQL>select COGN || ' ' || NOME || ' ' ||
				TO_CHAR(TO_DATE(a.data,'YYYYMMDD'),'DD/MM/YYYY') PAZIENTE ,
				TO_CHAR(M.DATA_INS,'DD/MM/YYYY - hh24:mi:ss') DATA_INS,
				(select DESCRIZIONE from MMG_CODIFICHE
				where TIPO_SCHEDA = M.SCHEDA AND
				TIPO_DATO = 'worklist' AND ATTIVO = 'S') SCHEDA,
				M.IDEN,
				(select DESCR from DATI$PERSONALE where IDEN = :iden_med) DESCR_UTE_INS,
				M.UTE_INS, 
				M.IDEN_MED from
				MMG_SCHEDE_XML M
				inner join DATI$ANAG a on a.IDEN = M.IDEN_ANAG
				where a.IDEN = :iden_anag
				and M.SCHEDA like 'BILANCIO_SALUTE%' 
				AND VUA(M.IDEN_ANAG, :iden_med, IDEN_MED, M.DATA, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', M.OSCURATO, M.UTE_INS)=1
				and M.DELETED = 'N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_CERTIFICATI">
			<SQL>select IDEN, ID_CERTIFICATO, ID_ANNULLAMENTO, DATA_RILASCIO, DATA_FINE, DATA_INIZIO, PAZIENTE, IDEN_ANAG, UTE_INS, DIAGNOSI
				from VIEW_CERTIFICATI
				where VUA(IDEN_ANAG, :ute_ins, UTE_INS, TO_DATE(DATA_CERTIFICATO),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO') = 1
				and (IDEN_ANAG = :iden_anag or :iden_anag is null)
				and NOME like :nome||'%' and COGNOME like :cognome||'%'
				and (:data_nascita is null or DATA_NASC_ISO = to_char(TO_DATE(:data_nascita,'dd/MM/yyyy'),'YYYYMMDD'))
				and DATA_RILASCIO between to_char(TO_DATE(:da_data,'dd/MM/yyyy'),'YYYYMMDD') AND to_char(TO_DATE(:a_data,'dd/MM/yyyy'),'YYYYMMDD')
				AND (ID_CERTIFICATO is not null OR ID_ANNULLAMENTO is not null)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_CERTIFICATI_PROBLEMA">
			<SQL>SELECT 
				  LC.IDEN, 
				  LC.DATA_DOC DATA_INSERIMENTO_CERTIFICATO, 
				  LC.DATA_SCADENZA DATA_SCADENZA_CERTIFICATO, 
				  AC.TITOLO CERTIFICATO_RELATIVO 
				FROM LISTA_CERTIFICATI LC 
				LEFT JOIN ALTRI_CERTIFICATI AC ON LC.COD_CERTIFICATO = AC.IDEN 
				WHERE LC.ATTIVO = 'S' AND LC.DELETED = 'N' AND LC.IDEN_ANAG = :iden_anag AND LC.IDEN_PROBLEMA = :iden_problema
				and VUA(LC.IDEN_ANAG, :iden_per, LC.IDEN_MED, LC.DATA_DOC, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', 'N', LC.UTE_INS) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_RICETTE">
			<SQL>
				select /*+first_rows(100)*/ TO_CHAR(DATA_RICETTA,'yyyyMMddhh24mi')DATA_RICETTA, IDEN, IDEN_ANAG, PAZIENTE,
					NOME, COGN, STATO, TIPO_RICETTA, ELENCO_IDEN, ELENCO, PROBLEMA, DEMATERIALIZZATA,
					decode(dematerializzata,'S', 'Si', 'N', 'No', 'D', 'Da confermare','') as DEMA_DESCR,
					IDEN_MEDICO, NRE, ute_ins, case when TIPO_RICETTA in ('F','P') then 'Si' else 'No' end SSN
				from VIEW_MMG_ELENCO_RICETTE
				where NOME like :nome ||'%' and COGN LIKE :cognome ||'%'
					and (UTE_INS = to_number(:iden_utente) or to_number(:iden_med) in (IDEN_MED_BASE, IDEN_MEDICO))
					and to_char(DATA_RICETTA,'YYYYMMDD') between :da_data AND :a_data
					and vua(IDEN_ANAG, to_number(:iden_utente), IDEN_MEDICO, to_char(DATA_RICETTA,'YYYYMMDD'), :vua, 'N', UTE_INS) = 1
					and DEMATERIALIZZATA IN ( select column_value from table( split( :dema ) ) )
					and stampato in ( select column_value from table( split( :stampato ) ) )
					AND codice_stato in ( select column_value from table( split( :stato ) ) )
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_RICETTE_PAZIENTE">
			<SQL>
				select /*+first_rows(100)*/ TO_CHAR(DATA_RICETTA,'yyyyMMddhh24mi')DATA_RICETTA, IDEN, IDEN_ANAG, PAZIENTE,
					NOME, COGN, STATO, TIPO_RICETTA, ELENCO_IDEN, ELENCO, PROBLEMA, DEMATERIALIZZATA, 
					decode(dematerializzata,'S', 'Si', 'N', 'No', 'D', 'Da confermare','') as DEMA_DESCR,
					IDEN_MEDICO, NRE, ute_ins, case when TIPO_RICETTA in ('F','P') then 'Si' else 'No' end SSN
				from VIEW_MMG_ELENCO_RICETTE
				where IDEN_ANAG = to_number(:iden_anag)
					and to_char(DATA_RICETTA,'YYYYMMDD') between :da_data AND :a_data
					and vua(IDEN_ANAG, to_number(:iden_utente), IDEN_MEDICO, to_char(DATA_RICETTA,'YYYYMMDD'), :vua, 'N', UTE_INS) = 1
					and DEMATERIALIZZATA IN ( select column_value from table( split( :dema ) ) )
					and stampato in ( select column_value from table( split( :stampato ) ) )
					AND codice_stato in ( select column_value from table( split( :stato ) ) )
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ELENCO_RICETTE_CONFERMATE">
			<SQL>
				SELECT /*+first_rows(100)*/
					TO_CHAR( DATA_RICETTA, 'YYYYMMDDHH24MI') DATA_RICETTA,
					IDEN,
					IDEN_ANAG,
					PAZIENTE,
					NOME,
					COGN,
					STATO,
					TIPO_RICETTA,
					ELENCO,
					PROBLEMA,
					STAMPATO,
					CODICE_STATO,
					IDEN_MEDICO,
					UTE_INS,
					NRE,
					DEMATERIALIZZATA,
					decode(dematerializzata,'S', 'Si', 'N', 'No', 'D', 'Da confermare','') as DEMA_DESCR,
					case when TIPO_RICETTA in ('F','P') then 'Si' else 'No' end SSN
				FROM VIEW_MMG_ELENCO_RICETTE
				WHERE IDEN_MEDICO = to_number(:iden_med)
					and DEMATERIALIZZATA IN ( select column_value from table( split( :demasn ) ) )
					and stampato in ( select column_value from table( split( :stampato ) ) )
					AND codice_stato in ( select column_value from table( split( :stato ) ) )
					AND TO_CHAR( DATA_RICETTA, 'YYYYMMDD') BETWEEN :data_inizio AND :data_fine
			{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ELENCO_RICETTE_CONFERMATE_DIV">
			<SQL>
				SELECT /*+first_rows(100)*/
					TO_CHAR( ME.DATA_RICETTA, 'DD/MM/YYYY HH24:MI') DATA_RICETTA,
					ME.IDEN,
					ME.IDEN_ANAG,
					ME.PAZIENTE,
					ME.NOME,
					ME.COGN,
					ME.STATO,
					ME.TIPO_RICETTA,
					ME.ELENCO,
					ME.PROBLEMA,
					ME.STAMPATO,
					ME.CODICE_STATO,
					ME.IDEN_MEDICO,
					ME.UTE_INS,
					TP.DESCR as UTENTE_INSERIMENTO,
					ME.NRE,
					DEMATERIALIZZATA,
					decode(dematerializzata,'S', 'Si', 'N', 'No', 'D', 'Da confermare','') as DEMA_DESCR,
					case when TIPO_RICETTA in ('F','P') then 'Si' else 'No' end SSN
				FROM VIEW_MMG_ELENCO_RICETTE ME
				JOIN RADSQL.TAB_PER TP ON TP.IDEN = ME.UTE_INS
				WHERE IDEN_MEDICO = to_number(:iden_med)
					and DEMATERIALIZZATA IN ( select column_value from table( split( :demasn ) ) )
					and stampato in ( select column_value from table( split( :stampato ) ) )
					AND codice_stato in ( select column_value from table( split( :stato ) ) )
					AND TO_CHAR( DATA_RICETTA, 'YYYYMMDD') BETWEEN :data_inizio AND :data_fine
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="ELENCO_RICETTE_DEMA_MESSAGE">
			<SQL>with ELENCO as (select to_number(regexp_substr(x, '[^,]+', 1,
				level)) ID
				from(select :iden_ricette x from dual)
				connect by level
				&lt;= length(x) - length(replace(x, ',')) + 1)
				SELECT
					TO_CHAR( ME.DATA_RICETTA, 'DD/MM/YYYY HH24:MI') DATA_RICETTA,
					ME.IDEN,
					ME.IDEN_ANAG,
					ME.PAZIENTE,
					ME.STATO,
					ME.TIPO_RICETTA,
					ME.ELENCO,
					ME.IDEN_MEDICO,
					ME.UTE_INS,
					TP.DESCR as UTENTE_INSERIMENTO,
					ME.NRE
				FROM VIEW_MMG_ELENCO_RICETTE ME
				JOIN RADSQL.TAB_PER TP ON TP.IDEN = ME.UTE_INS
				WHERE ME.IDEN IN (SELECT ID FROM ELENCO)
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_VISITE">
			<SQL>SELECT IDEN, UTE_INS, IDEN_MED, DATA, PAZIENTE, NOME, COGN, IDEN_ANAG, PROBLEMA, MEDICO,
				PROBLEMA_COMPLETO, ANAMNESI, ESAME, ISPEZIONE, CONSIDERAZIONI,SCHEDA, OSCURATO
				FROM VIEW_VISITE
				WHERE NOME like :nome ||'%' and COGN LIKE :cognome ||'%'
				and (UTE_INS = :iden_utente or :iden_med in (IDEN_MED,IDEN_MED_BASE))
				and DATA between coalesce(:da_data,'19700101') AND :a_data and DELETED = 'N'
				and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', OSCURATO, UTE_INS) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ELENCO_VISITE_PAZIENTE">
			<SQL>SELECT IDEN, UTE_INS, IDEN_MED, DATA, PAZIENTE, NOME, COGN, IDEN_ANAG, PROBLEMA,MEDICO,
				PROBLEMA_COMPLETO, ANAMNESI, ESAME, ISPEZIONE, CONSIDERAZIONI,SCHEDA, OSCURATO
				FROM VIEW_VISITE
				WHERE IDEN_ANAG = :iden_anag 
				and DATA between coalesce(:da_data,'19700101') AND :a_data and DELETED = 'N'
				and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', OSCURATO, UTE_INS) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_ESENZIONI_PRESTAZIONI">
			<SQL>select descr_prestazione DESCRIZIONE, dm_cod_prestazione CODICE from VIEW_RR_ACCERTAMENTI_ESENZIONI where iden_esenzione = :iden_esenzione and descr_prestazione like '%'||:text||'%' {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="WK_PRESTAZIONI_ESENZIONI_ASSOCIATE">
			<SQL>SELECT IDEN_ESENZIONE, CODICE_ESENZIONE CODICE, DESCR_ESENZIONE ESENZIONE FROM VIEW_RR_ACCERTAMENTI_ESENZIONI WHERE COD_PRESTAZIONE like :cod_prestazione {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="WK_FARMACI_PROBLEMA">
			<SQL>SELECT A.IDEN, A.DATA_ISO, VF.DESCRIZIONE FARMACO
        		FROM MMG_FARMACI A
				join MMG_FARMACI_DETTAGLIO D on A.IDEN = D.IDEN
        		JOIN VIEW_RR_FARMACI VF ON ( VF.COD_FARMACO = A.COD_FARMACO )
        		where A.IDEN_ANAG =:iden_anag AND A.DELETED = 'N' AND IDEN_PROBLEMA = :iden_problema
        		and VUA(A.IDEN_ANAG, :iden_med, A.IDEN_MEDICO, A.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', D.OSCURATO, A.IDEN_UTENTE) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_NOTE_CUF">
			<SQL>SELECT IDEN, 'Nota ' || NOTA as nota, PERCORSO, DATA_FINE_VALIDITA, ORDINE FROM NOTE_CUF WHERE ATTIVO = 'S' AND NOTA LIKE :nota {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="WK_PIP">
			<SQL>SELECT MS.IDEN, MP.CODICE, MS.IDEN_ANAG, MS.UTE_INS, MS.IDEN_MED,
				MS.DATA_PIP, MS.IDEN_PIP, MP.PREZZO_EURO PREZZO,
				MP.DESCRIZIONE||' - '||MS.DESCRIZIONE DESCR FROM mmg_pip_svolte MS INNER JOIN MMG_PIP MP ON
				MP.IDEN = MS.IDEN_PIP where iden_med = :iden_medico and iden_anag =
				:iden_anag AND MS.DELETED = 'N'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_PRESTAZIONI">
			<SQL>SELECT VALUE, DESCR FROM (
					select CODICE AS VALUE, DESCRIZIONE AS DESCR
					from (
						select VRA.CODICE , VRA.DESCRIZIONE from
						VIEW_RR_ACCERTAMENTI VRA
						where VRA.ATTIVO= 'S' and
						not(VRA.DESCRIZIONE like '%NON USARE%')
					)
					union all
					select distinct
					VRA.CODICE VALUE, SIN.DESCRIZIONE AS DESCR
					from VIEW_RR_ACCERTAMENTI VRA
					JOIN RR$PRESTAZIONI_SINONIMI SIN on VRA.CODICE_REGIONALE=SIN.COD_PRESTAZIONE
					where VRA.ATTIVO='S' and SIN.ATTIVO='S'
				)
				WHERE DESCR like :descr ||'%' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_PRESTAZIONI_ESENZIONI">
			<SQL>select 
					VRA.CODICE COD_ACC, 
					VRA.DM_CODICE CODICE,
					VRA.DESCRIZIONE ACCERTAMENTO, 
					EXTRACT_BRANCA(VRA.BRANCA) BRANCA, 
					'N' SINONIMO 
					from VIEW_RR_ACCERTAMENTI VRA
					where VRA.ATTIVO= 'S' 
					and not(VRA.DESCRIZIONE like '%NON USARE%') 
					AND VRA.DESCRIZIONE like :descr
					and VRA.CODICE LIKE :codice {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="WK_MODULI">
			<SQL>select COGN || ' ' || NOME || ' ' || TO_CHAR(TO_DATE(a.data,'YYYYMMDD'),'DD/MM/YYYY') PAZIENTE,
				TO_CHAR(M.DATA_INS,'DD/MM/YYYY - hh24:mi:ss') DATA_INS,
				M.DATA_INS DATA_SEARCH,
				M.IDEN,
				M.UTE_INS,
				M.IDEN_MED,
				M.SCHEDA,
				COD.DESCRIZIONE
				from MMG_SCHEDE_XML M
				inner join DATI$ANAG a on a.IDEN = M.IDEN_ANAG
				JOIN MMG_CODIFICHE COD ON TIPO_SCHEDA = 'SCHEDA_MODULI_PAZIENTE'
				AND TIPO_DATO = 'NOME_SCHEDA_XML' AND CODICE = M.SCHEDA AND ATTIVO = 'S'
				where a.IDEN = :IDEN_ANAG and M.UTE_INS =:IDEN_PER
				and M.DELETED = 'N'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_OSCURAMENTI_PAZIENTE">
			<SQL>
				select 
					DECODE(OA.IDEN_UTENTE, -1, 'GRUPPO', (SELECT TP.DESCR FROM DATI$PERSONALE TP WHERE TP.IDEN = OA.IDEN_UTENTE)) UTENTE_OSCURATO,
					OA.IDEN_UTENTE IDEN_UTENTE_OSCURATO,
					OA.TIPO,
					OA.NOTE,
					TO_CHAR(OA.DATA_INS,'yyyyMMdd') DATA_INSERIMENTO
				from OSCURAMENTI_ASSISTITI OA where OA.IDEN_ANAG = :iden_anag and OA.ATTIVO = 'S'
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_RIL_BMI_PROBLEMA">
			<SQL>select IDEN, PESO, ALTEZZA, BMI, DATA from MMG_ACCERT_RILEVAZIONI 
				where IDEN_ANAG = :iden_anag and IDEN_MED = :iden_med and IDEN_PROBLEMA =:iden_problema 
				AND TIPO_RILEVAZIONE = 'PESO_ALTEZZA' AND DELETED = 'N' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_RIL_GENERALI_PROBLEMA">
			<SQL>select IDEN, VALORE_1 VALORE_REGISTRATO, DATA, TIPO_RILEVAZIONE from MMG_ACCERT_RILEVAZIONI 
				where IDEN_ANAG = :iden_anag and IDEN_MED = :iden_med and IDEN_PROBLEMA =:iden_problema 
				AND TIPO_RILEVAZIONE IN('ATTIVITA_FISICA', 'CIRCONF_ADDOMINALE', 'INR', 'TAO', 'GLICEMIA', 'SATURAZIONE OSSIGENO' ) AND DELETED = 'N' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_RIL_TEMPERATURA_PROBLEMA">
			<SQL>select IDEN, VALORE TEMPERATURA, DATA from MMG_ACCERT_RILEVAZIONI 
				where IDEN_ANAG = :iden_anag and IDEN_MED = :iden_med and IDEN_PROBLEMA =:iden_problema 
				AND TIPO_RILEVAZIONE = 'TEMPERATURA' AND DELETED = 'N' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_NOTE_DIARIO_PROBLEMA">
			<SQL>SELECT IDEN, DATA, DATA DATA_ISO, NOTE, TIPO, IDEN_SCHEDA_XML FROM MMG_DIARIO
				 WHERE DELETED = 'N' AND IDEN_ANAG = :iden_anag AND IDEN_MED = :iden_med AND IDEN_PROBLEMA = :iden_problema {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_VACCINI">
			<SQL>select IDEN, DESCRIZIONE, CODICE, TO_CHAR(TO_DATE(data,
				'DD/MM/YYYY'), 'YYYYMMDD') DATA, MEDICO, IDEN_ANAG, NR_LOTTO,
				fornito_da, luogo_esecuzione, attivo, paziente, OSCURATO, 
				UTE_INS, IDEN_MED FROM
				VIEW_VACCINI_PAZIENTE where ( IDEN_ANAG = :iden_anag or
				:all_iden_anag = 'S' ) AND ATTIVO = 'S' AND
				VUA(iden_anag,:iden_utente, IDEN_MED,
				DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',oscurato) = 1 {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="WK_VISITE_PROBLEMA">
			<SQL>SELECT IDEN, DATA, PAZIENTE, NOME, COGN, IDEN_ANAG, PROBLEMA,
				PROBLEMA_COMPLETO, ANAMNESI, ESAME, ISPEZIONE, CONSIDERAZIONI, SCHEDA, OSCURATO, MEDICO
				FROM VIEW_VISITE WHERE UTE_INS = :iden_med and IDEN_ANAG =:iden_anag and PROBLEMA = :iden_problema
				{#ORDER#}
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="AUTOCOMPLETE" pager="true">
		<QUERY id="AC_ASSISTITI">
			<SQL>SELECT /*+first_rows(10)*/ VWA.IDEN AS VALUE, VWA.COGN ||' '|| VWA.NOME  as DESCR
				FROM DATI$ANAG VWA
				WHERE VWA.DATA_MORTE is null AND (VWA.COGN||' '||VWA.NOME) LIKE :descr||'%'
				and VWA.IDEN_MED_BASE in (
					select /*+first_rows(100)*/ IDEN_MEDICO from VIEW_UTENTI_GRUPPO where IDEN_UTENTE = :iden_utente
				) and rownum &lt;=10
			</SQL>
		</QUERY>
		<QUERY id="AC_CODICE_PROBLEMA">
			<SQL>select IDEN, CODICE as VALUE, DESCRIZIONE as DESCR from
				VIEW_MMG_ICD9 where CODICE like :descr ||'%' AND tipo =
				'DIAGNOSI' AND ATTIVO = 'S'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_FARMACI">
			<SQL>select CODICE_PRODOTTO value,descrizione descr from
				FARMADATI$VM_PRODOTTI_RICERCA where COMMERCIO ='S' AND 
				CONTAINS(DESCRIZIONE, decode(:descr,'','NOTDEFINED','%','NOTDEFINED', :descr)||'%', 1) &gt; 0 {#ORDER#} 
			</SQL>
		</QUERY>
		<QUERY id="AC_CODICE_INTERVENTI">
			<SQL>select iden, cod_dec as VALUE, descrizione as DESCR from
				CC$ICD where COD_DEC like :descr ||'%' AND tipo = 'PROCEDURE'
				and ATTIVO = 'S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_DESCR_INTERVENTI">
			<SQL>select iden, cod_dec as VALUE, descrizione as DESCR from
				CC$ICD where descrizione like '%'|| :descr ||'%' AND tipo =
				'PROCEDURE' and ATTIVO = 'S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_PERSONALE">
			<SQL>select IDEN as value, DESCR, DECODE(TIPO,'I','Infermiere','M', 'Medico', 'A', 'Amministrativo') as tipo_utente, 
				decode(tipo_med,'B','MMG', 'P','PLS','') as tipo_medico from
				DATI$PERSONALE where descr like :descr ||'%'  AND ATTIVO = 'S' order by descr
			</SQL>
		</QUERY>
		<QUERY id="AC_PROBLEMA">
			<SQL>select IDEN, CODICE as value, DESCRIZIONE as DESCR from
				VIEW_MMG_ICD9 where descrizione like :descr ||'%'  AND ATTIVO = 'S' order by descrizione
			</SQL>
		</QUERY>
		<QUERY id="AC_POSOLOGIA">
			<SQL>select codice AS VALUE, descrizione AS DESCR
				from MMG_POSOLOGIA WHERE 
				PERSONALE = 'N' 
				and attivo = 'S' 
				and deleted = 'N' 
				AND DESCRIZIONE LIKE UPPER(:descr) ||'%' order by descrizione
			</SQL>
		</QUERY>
		<QUERY id="AC_PRINCIPI_ATTIVI">
			<SQL>SELECT CODICE as value, DESCRIZIONE as DESCR, ATC_CORRELATI FROM FARMADATI$PRINCIPI_ATTIVI 
				 WHERE descrizione like :descr ||'%' and descrizione not like '%/%' and ATC_CORRELATI IS NOT NULL and deleted = 'N' ORDER BY DESCRIZIONE
			</SQL>
		</QUERY>
		<QUERY id="AC_MEDICO">
			<SQL>SELECT IDEN AS VALUE, DESCR as descr FROM DATI$PERSONALE WHERE TIPO =
				'M' AND TIPO_MED IN ('B','P') AND DESCR LIKE '%'||:descr||'%' and attivo = 'S'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_MEDICO_SOSTITUTO">
			<SQL>SELECT IDEN AS VALUE, DESCR as descr FROM DATI$PERSONALE WHERE TIPO =
				'M' AND TIPO_MED IN ('B','P') AND DESCR LIKE '%'||:descr||'%' and attivo = 'S'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_MEDICO_SUGGERITO">
			<SQL>SELECT IDEN AS VALUE, DESCR as descr FROM DATI$PERSONALE WHERE TIPO =
				'M' AND DESCR LIKE '%'||:descr||'%' and attivo = 'S'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_COMUNI">
			<SQL>SELECT CAP, IDEN , COMUNE AS DESCR, PROVINCIA, COD_COM, ATTIVO,
				CODICE_ISTAT AS VALUE, COD_DEC FROM VIEW_COMUNI WHERE ATTIVO =
				'S' AND COMUNE LIKE :descr ||'%'{#ORDER#}</SQL>
		</QUERY>
		<QUERY id="AC_NAZIONI">
			<SQL>
				SELECT IDEN, COD AS VALUE, DESCR as descr FROM DATI$NAZIONI WHERE  DESCR LIKE :descr ||'%'{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_PROFESSIONI">
			<SQL>SELECT IDEN AS VALUE,DESCR FROM DATI$PROFESSIONI WHERE ATTIVO =
				'S' AND DESCR LIKE '%' || :descr ||'%' {#ORDER#}</SQL>
		</QUERY>
		<QUERY id="AC_PIP">
			<SQL>select codice value,descrizione descr from mmg_pip WHERE
				ATTIVO='S' AND DESCRIZIONE like '%'||:descr||'%' AND TIPO_MED =
				'MMG' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_PIP_PLS">
			<SQL>select codice value,descrizione descr from mmg_pip WHERE
				ATTIVO='S' AND DESCRIZIONE like '%'||:descr||'%' AND TIPO_MED =
				'PLS' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AC_VACCINO_TIPO">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_VACCINI WHERE
				ATTIVO = 'S' AND UPPER( DESCRIZIONE ) LIKE UPPER( :descr||'%' )
				{#ORDER#}
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="RICETTE">
		<QUERY id="GET_NOTE_PRESTAZIONI">
			<SQL>
				select r.dm_codice, RR.CODICE, R.TIPO_NOTA, R.ID_NOTA, R.DESCRIZIONE, rr.codice || '@' || R.DM_CODICE as codice_prestazione,
				r.NOTE_DM_1996
				from rr$prestazioni_note r
				join rr$prestazioni rr on RR.DM_CODICE = R.DM_CODICE
				where rr.attivo = 'S' and (rr.codice || '@' || R.DM_CODICE) = :v_cod_accertamento order by r.tipo_nota asc, r.id_nota asc
			</SQL>
		</QUERY>
		<QUERY id="GET_NOTE_PRESTAZIONI_OPT">
			<SQL>
				select r.dm_codice, RR.CODICE, R.TIPO_NOTA, R.ID_NOTA, R.DESCRIZIONE, rr.codice || '@' || R.DM_CODICE as codice_prestazione,
				r.NOTE_DM_1996, ro.ID_DETT
				from rr$prestazioni_note r
				join rr$prestazioni_note_opt ro on r.ID_NOTA = ro.ID_NOTA and r.TIPO_NOTA = ro.TIPO_NOTA
				join rr$prestazioni rr on RR.DM_CODICE = R.DM_CODICE
				where rr.attivo = 'S' and (rr.codice || '@' || R.DM_CODICE) = :v_cod_accertamento order by r.tipo_nota asc, r.id_nota asc, ro.id_dett asc
			</SQL>
		</QUERY>
		<QUERY id="CHECK_PIANO_TERAPEUTICO">
			<SQL>
				select count(iden) pt from PT$TERAPIE
				where codice_farmaco = :cod_farmaco and (fine_validita is null or to_date(fine_validita,'DD/MM/YYYY') &gt; sysdate)
				and (piano_terapeutico != 'PIANO TERAP.PER BB E ADOLESCENTI' or to_number(:eta) &lt; 18)
			</SQL>
		</QUERY>
		<QUERY id="FARMACI_NOTE_CUF">
			<SQL>select note_sulla_prescriz_1 NOTA1, note_sulla_prescriz_2 NOTA2,
				DESCRIZIONE FARMACO, PRINCIPIO_ATTIVO PA, CODICE_PRODOTTO
				COD_FARMACO FROM FARMADATI$V_PRODOTTI_MID WHERE CODICE_PRODOTTO =
				:cod_farmaco
			</SQL>
		</QUERY>
		<QUERY id="INTESTAZIONE_RR_FARMACI">
			<SQL>SELECT 'DATA' DATA, 'FARMACO' FARMACO, 'Q.TA''' QUANTITA,
				'POSOLOGIA' POSOLOGIA, 'ESENZIONE' ESENZIONE, 'CM' CONCEDIBILITA, ''
				IDEN_MEDICO, '' IDEN_UTENTE, 'CRONICITA' CRONICITA, 'PR.ATT.' PA,
				'NON SOSTIT.' SOST FROM dual
			</SQL>
		</QUERY>
		<QUERY id="INTESTAZIONE_RR_ACCERTAMENTI">
			<SQL>SELECT 'DATA' DATA, 'ACCERTAMENTO / ALTRA PRESCRIZIONE'
				ACCERTAMENTO, 'Q.TA''' QUANTITA, 'RISULTATO' RISULTATO, 'ESENZIONE'
				ESENZIONE, 'CM'CONCEDIBILITA, '' IDEN_MEDICO, '' IDEN_UTENTE,
				'CRONICITA' CRONICITA FROM dual
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_0">
			<SQL>
				SELECT /*+first_rows(10)*/ 1 AD, S.CRONICITA H, S.DATA_ISO D,
				S.* FROM VIEW_RICETTA_FARMACI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DATA_ISO = TO_CHAR(SYSDATE, 'yyyyMMdd') AND S.DELETED = 'N'
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				and (
				:iden_problema is null or 
				s.iden_problema = :iden_problema
        		or s.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		) order by s.iden desc
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_1">
			<SQL>
				SELECT /*+first_rows(10)*/ 2 AD,S.CRONICITA H,S.DATA_ISO D,
				S.* FROM VIEW_RICETTA_FARMACI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DATA_ISO &lt; TO_CHAR(SYSDATE,'yyyyMMdd') AND S.CRONICITA = 'S' AND S.DELETED = 'N'
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				ORDER BY D DESC
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_2">
			<SQL>
				SELECT * FROM (
				SELECT /*+first_rows(100)*/ RANK() OVER (PARTITION BY S.COD_FARMACO ORDER BY S.DATA_ISO DESC) AD,
				S.CRONICITA H, S.DATA_ISO D, S.* FROM VIEW_RICETTA_FARMACI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DELETED = 'N' AND S.CRONICITA = 'N'
				AND S.DATA_ISO &lt; TO_CHAR(SYSDATE, 'yyyyMMdd')
				and (
				:iden_problema is null or 
				s.iden_problema = :iden_problema
        		or s.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		)
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				ORDER BY D DESC
				) WHERE AD &lt; 2 and rownum &lt;= :num_row
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_MI_0">
			<SQL>
				SELECT /*+first_rows(10)*/ 1 AD, S.CRONICITA H, S.DATA_ISO D,
				S.* FROM VIEW_RICETTA_FARMACI_MI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DATA_ISO = TO_CHAR(SYSDATE, 'yyyyMMdd') AND S.DELETED = 'N'
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				and (
				:iden_problema is null or 
				s.iden_problema = :iden_problema
        		or s.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		)
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_MI_1">
			<SQL>
				SELECT /*+first_rows(10)*/ 2 AD,S.CRONICITA H,S.DATA_ISO D,
				S.* FROM VIEW_RICETTA_FARMACI_MI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DATA_ISO &lt; TO_CHAR(SYSDATE,'yyyyMMdd') AND S.CRONICITA = 'S' AND S.DELETED = 'N'
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				ORDER BY D DESC
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_FARMACI_MI_2">
			<SQL>
				SELECT * FROM (
				SELECT /*+first_rows(100)*/ RANK() OVER (PARTITION BY S.COD_FARMACO ORDER BY S.DATA_ISO DESC) AD,
				S.CRONICITA H, S.DATA_ISO D, S.* FROM VIEW_RICETTA_FARMACI_MI S
				WHERE S.IDEN_ANAG = :iden_anag AND S.DELETED = 'N' AND S.CRONICITA = 'N'
				AND S.DATA_ISO &lt; TO_CHAR(SYSDATE, 'yyyyMMdd')
				and (
				:iden_problema is null or 
				s.iden_problema = :iden_problema
        		or s.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
        		)
				and VUA(s.iden_anag,:iden_utente, s.IDEN_MEDICO, s.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', S.OSCURATO, S.IDEN_UTENTE) = 1
				ORDER BY D DESC
				) WHERE AD &lt; 2 and rownum &lt;= :num_row
			</SQL>
		</QUERY>
		<QUERY id="STORICO_FARMACI">
			<SQL>SELECT /*+first_rows(10)*/ WRF.IDEN, WRF.DATA_ISO, WRF.FARMACO, WRF.POSOLOGIA, WRF.ESENZIONE, WRF.QUANTITA, 
        		(SELECT TP.DESCR FROM DATI$PERSONALE TP WHERE TP.IDEN = WRF.IDEN_MEDICO) MEDICO_PRESCRITTORE,
        		(SELECT TP.DESCR FROM DATI$PERSONALE TP WHERE TP.IDEN = WRF.IDEN_UTENTE) UTENTE_INSERIMENTO,
				WRF.IDEN_UTENTE, WRF.IDEN_MEDICO, WRF.OSCURATO, WRF.SITO, WRF.COD_FARMACO
        		FROM VIEW_RICETTA_FARMACI WRF
				WHERE WRF.IDEN_ANAG = :iden_anag AND DELETED = 'N'and COD_FARMACO = :cod_farmaco
				and VUA(IDEN_ANAG,:iden_utente, IDEN_MEDICO, DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', OSCURATO, WRF.IDEN_UTENTE) = 1
				{#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_ACCERTAMENTI">
			<SQL>SELECT * from (
				SELECT ric.* 
				from VIEW_RICETTA_ACCERTAMENTI ric
				WHERE ric.IDEN_ANAG = :iden_anag 
				and ric.DELETED = 'N' AND (
				(	:iden_problema is null or 
					ric.iden_problema = :iden_problema or 
					ric.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
				)
				 OR ric.CRONICITA ='S')
				and VUA(ric.iden_anag,:iden_utente, ric.IDEN_MEDICO, ric.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', ric.OSCURATO, ric.IDEN_UTENTE) = 1
				ORDER BY ric.CRONICITA DESC, ric.DATA_ISO DESC, ric.IDEN desc
				) where rownum &lt;= :num_row
			</SQL>
		</QUERY>
		<QUERY id="RICETTE_ACCERTAMENTI_MI">
			<SQL>SELECT * from (
				SELECT ric.* 
				from VIEW_RICETTA_ACCERTAMENTI_MI ric
				WHERE ric.IDEN_ANAG = :iden_anag 
				and ric.DELETED = 'N' AND (
				(	:iden_problema is null or 
					ric.iden_problema = :iden_problema or 
					ric.iden_problema in (select iden from mmg_problemi where iden_parent = :iden_problema)
				)
				 OR ric.CRONICITA ='S')
				and VUA(ric.iden_anag,:iden_utente, ric.IDEN_MEDICO, ric.DATA_ISO,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', ric.OSCURATO, ric.IDEN_UTENTE) = 1
				ORDER BY ric.CRONICITA DESC, ric.DATA_ISO DESC, ric.IDEN desc
				) where rownum &lt;= :num_row
			</SQL>
		</QUERY>
		<QUERY id="SET_DIAGNOSI">
			<SQL>with ELENCO as (select to_number(regexp_substr(x, '[^,]+', 1,
				level)) ID
				from(select :iden_problemi x from dual)
				connect by level
				&lt;= length(x) - length(replace(x, ',')) + 1)
				SELECT
				CODICE_ICD9,
				NVL(DESCRIZIONE,'')|| '-'||DESCR_ICD9 DESCRIZIONE from
				mmg_problemi where iden in (SELECT ID FROM ELENCO)
			</SQL>
		</QUERY>
		<QUERY id="ALLERGIE_INTOLLERANZE">
			<SQL>select atc_gmp, DESCRIZIONE, COD_PA from mmg_allergie_intolleranze where
				iden_anag = :iden_anag and deleted='N' and attivo ='S' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="AVVERTENZE_FARMACI">
			<SQL>with ELENCO as (select regexp_substr(x, '[^,]+', 1, level) ID
				from(select :codici_farmaci x from dual)
				connect by level &lt;=
				length(x) - length(replace(x, ',')) + 1)
				select
				ATC_GMP codice,
        		descrizione from VIEW_RR_FARMACI 
				where COD_FARMACO IN (SELECT ID FROM ELENCO) AND 
        		(ATC_GMP LIKE :codice_atc ||'%' OR (SOSTANZA LIKE '%'|| (SELECT DESCRIZIONE FROM FARMADATI$PRINCIPI_ATTIVI WHERE CODICE = :cod_pa)||'%'  and :cod_pa is not null))
			</SQL>
		</QUERY>
		<QUERY id="SITUAZIONI_CLINICHE">
			<SQL>select cod_situazione_clinica||'@'||urgenza valore,
				SITUAZIONE_CLINICA descr from MMG_RAO where cod_rao in (select
				cod_rao from mmg_rao_prestazioni where cod_prestazione =
				:cod_prestazione) order by SITUAZIONE_CLINICA
			</SQL>
		</QUERY>
		<QUERY id="GET_INFO_ACCERTAMENTO">
			<SQL>select 'Diagnosi: ' ||DIAGNOSI|| 
				'&lt;br/&gt;Urgenza: ' ||URGENZA|| 
				'&lt;br/&gt;Data prescrizione: ' ||DATA||
				'&lt;br/&gt;Data esecuzione: ' || nvl(datetimeconverter(DATA_ESECUZIONE,'yyyyMMdd','dd/MM/yyyy'),'n.d.')||  
				'&lt;br/&gt;Utente prescr.: ' ||(select descr from DATI$PERSONALE where iden = IDEN_UTENTE) ||
				'&lt;br/&gt;Medico prescr.: ' ||(select descr from DATI$PERSONALE where iden = IDEN_MEDICO) ||
				'&lt;br/&gt;Problema associato: ' ||(select problema_completo from view_problemi where iden = IDEN_problema)||
				(select '&lt;br/&gt;NRE: ' || NRE || decode(DEMATERIALIZZATA,'N','',' (DEMAT.)') from RR_RICETTA_ROSSA_TESTATA where IDEN=VRA.IDEN_RICETTA)
				AS MESSAGE,
				accertamento AS TITLE 
				FROM VIEW_RICETTA_ACCERTAMENTI_MI VRA
				WHERE IDEN = :iden
			</SQL>
		</QUERY>
		<QUERY id="GET_INFO_FARMACO">
			<SQL>select 'Utente prescr.: ' ||(select descr from DATI$PERSONALE where iden = IDEN_UTENTE) ||
        		'&lt;br/&gt;Medico prescr.: ' ||(select descr from DATI$PERSONALE where iden = IDEN_MEDICO) ||
        		'&lt;br/&gt;Ripetibile: '||RIPETIBILE||
				'&lt;br/&gt;Nota AIFA: '||nota_cuf||
     		   	'&lt;br/&gt;Suggerita: '||SUGGERITA||
				'&lt;br/&gt;Problema associato: ' ||(select problema_completo from view_problemi where iden = IDEN_problema)||
				(select '&lt;br/&gt;NRE: ' || NRE || decode(DEMATERIALIZZATA,'N','',' (DEMAT.)') from RR_RICETTA_ROSSA_TESTATA where IDEN=VRF.IDEN_RICETTA)
				AS MESSAGE,
				farmaco || ' ( ' || principio_attivo || ' ) ' AS TITLE
				FROM VIEW_RICETTA_FARMACI_MI VRF
				WHERE IDEN = :iden
			</SQL>
		</QUERY>
		<QUERY id="GET_INFO_RICETTA">
			<SQL>select 'Utente prescr.: ' ||(select descr from DATI$PERSONALE where iden = VER.UTE_INS) ||
        		'&lt;br/&gt;Medico prescr.: ' ||(select descr from DATI$PERSONALE where iden = VER.IDEN_MEDICO) ||
				'&lt;br/&gt;Data prescrizione: ' ||to_char(VER.DATA_RICETTA,'DD/MM/YYYY HH24:MI')||
				'&lt;br/&gt;Quesito: ' || VER.QUESITO||
				'&lt;br/&gt;Diagnosi ICD9: ' || VER.PROBLEMA||
				'&lt;br/&gt;SSN: ' || case when VER.TIPO_RICETTA in ('F','P') then 'Si' else 'No' end||
				'&lt;br/&gt;NRE: ' || VER.NRE || decode(DEMATERIALIZZATA,'N','',' (DEMAT.)')||
				decode(DEMATERIALIZZATA,'S', '&lt;br/&gt;Stato ricetta dema.: ' ||VERIFICA_STATO_RICETTA(VER.IDEN),'')||
        		decode(VER.TIPO_RICETTA,
					'B', '&lt;br/&gt;Ripetibile: '||VER.RIPETIBILE,
					'P', '&lt;br/&gt;Urgenza: ' ||VER.URGENZA,
					'') ||
				'&lt;br/&gt;Prescrizioni: ' || VER.ELENCO
				AS MESSAGE
				FROM VIEW_MMG_ELENCO_RICETTE VER
				WHERE IDEN = to_number(:iden)
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="PATIENT_SUMMARY">
		<QUERY id="VACCINAZIONI">
			<SQL>select descrizione as descr,iden as value from mmg_codifiche
				where tipo_dato='VACCINAZIONE' AND IDEN IN (SELECT COLUMN_VALUE FROM
				TABLE (SPLIT(:iden_vaccinazioni))) AND ATTIVO = 'S'
			</SQL>
		</QUERY>
		<QUERY id="CODICI_PRODOTTI">
			<SQL>select codice, CODICE || ' ' || descrizione DESCR from
				FARMADATI$V_ATC where CODICE_PRODOTTO = :codice_prodotto order by
				codice desc
			</SQL>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="SDJ">
		<QUERY id="Q_APPSTAMPA_CONFIG">
			<SQL>
				with APPSTAMPA_CONFIG as
					(select NOME, VALORE from CONFIG$PARAMETRI where SITO=:sito and GRUPPO='APPSTAMPA_CONFIG' and ATTIVO='S')
				select
					nvl((select VALORE from APPSTAMPA_CONFIG where NOME='ACTIVEMQ'),'{}') ACTIVEMQ,
					nvl((select VALORE from APPSTAMPA_CONFIG where NOME='APPLET'),'{}') APPLET,
					nvl((select VALORE from APPSTAMPA_CONFIG where NOME='GLOBAL'),'{}') GLOBAL,
					nvl((select VALORE from APPSTAMPA_CONFIG where NOME='NOAPPLET'),'{}') NOAPPLET
				from dual
			</SQL>
			<BINDS>
				<BIND id="sito" value="#SITO#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="ACCERTAMENTO_PROBLEMA_RICHIESTO">
			<SQL>select '' ACC_EFF, '' Q_CLINICO, '' PRI_CLI, '' MODAL_ACC,
        		(select ACCERTAMENTO FROM MMG_ACCERTAMENTI where IDEN =:iden_accertamento ) ACCERTAMENTO,
        		(select PROBLEMA_COMPLETO FROM VIEW_PROBLEMI where IDEN =:iden_problema ) PROBLEMA
        		from dual
			</SQL>
			<BINDS>
				<BIND id="iden_accertamento" value="#IDEN_ACCERTAMENTO#" type="N"></BIND>
				<BIND id="iden_problema" value="#ID_PROBLEMA#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RICERCA_ESATTA">
			<SQL>SELECT 'Ricerca esattamente il testo' DESCR, 'S' VALUE FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="Q_ALTRI_CERTIFICATI">
			<SQL>SELECT * FROM ALTRI_CERTIFICATI WHERE ATTIVO = 'S' AND
				DELETED = 'N' AND IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_OSCURAMENTI_PAZIENTE">
			<SQL>SELECT
					DECODE (
					(select count(TIPO) GRUPPO_OSCUR FROM oscuramenti_assistiti WHERE IDEN_ANAG = :iden_anag and ATTIVO = 'S' AND IDEN_UTENTE = -1), 0, 'N','S') GRUPPO_OSCURATO
					FROM DUAL
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_OSCURAMENTI_PAZIENTE_UTENTE">
			<SQL>select count(IDEN_UTENTE) UTENTE_OSCURATO 
					FROM oscuramenti_assistiti WHERE IDEN_ANAG = :iden_anag AND IDEN_UTENTE = :iden_utente AND ATTIVO = 'S'
			</SQL>
		</QUERY>
		<QUERY id="Q_CONFIGURAZIONE_GRUPPI">
			<SQL>
				select 
					codice as codice_gruppo, 
					descrizione as descrizione_gruppo 
				from mmg_gruppi 
					where codice = :codice
			</SQL>
			<BINDS>
				<BIND id="codice" value="#CODICE_GRUPPO#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CONFIGURAZIONE_UTENTI">
			<SQL>SELECT DISTINCT username,
				CONFIG$DECRYPT(U.PASSWORD) as password,
				TP.TIPO,
				TP.TIPO_MED,
				case
				when (INSTR(CPG.ID_GRUPPO,'MMG_MEDICO') > 0) or (CPG.ID_GRUPPO is null and TP.tipo = 'M' and TP.tipo_med = 'B') then
					'MED'
				WHEN (INSTR(CPG.ID_GRUPPO,'PEDIATRA')> 0) or (CPG.ID_GRUPPO is null and TP.TIPO = 'M' AND TP.TIPO_MED = 'P')THEN
					'PLS'
				WHEN (INSTR(CPG.ID_GRUPPO,'INFERMIERE') > 0) or (CPG.ID_GRUPPO is null and TP.TIPO='I') THEN
					'INF'
				WHEN (INSTR(CPG.ID_GRUPPO,'MMG_AMM') > 0) or (CPG.ID_GRUPPO is null and TP.TIPO='A') THEN
					'AMM'
				END TIPOLOGIA_UTENTE,
				CASE WHEN INSTR(CPG.ID_GRUPPO,'SUPER_ADMIN') > 0 THEN
					'S'
				ELSE
					'N'
				END AMMINISTRATORE,
				CASE WHEN INSTR(CPG.ID_GRUPPO,'DEMATESTER') > 0 THEN
					'S'
				ELSE
					'N'
				END dematerializzata_farmaci,
				CASE WHEN INSTR(CPG.ID_GRUPPO,'DEMAPRESTAZIONI') > 0 THEN
					'S'
				ELSE
					'N'
				END dematerializzata_prestazioni,
				TP.IDEN AS personale,
				tp.descr as descr_personale
				FROM CONFIG$UTENTI u 
				join DATI$PERSONALE tp on tp.iden = U.IDEN_PER 
				left JOIN CONFIG$PARAMETRI CP ON (CP.ID_GRUPPO = :username AND cp.ATTIVO = 'S' and cp.SITO = 'MMG')
				join config$parametri_gruppo CPG on (cpg.id = :username and cpg.attivo = 'S' and cpg.SITO = 'MMG' AND CPG.GRUPPO = 'PERMESSI_GRUPPO')
				WHERE u.USERNAME = :username and u.SITO in ('MMG','ALL')
				and u.attivo = 'S'
			</SQL>
			<BINDS>
				<BIND id="username" value="#UTENTE#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_UTENTI">
			<SQL>
				SELECT 
				  'CONFIGURAZIONE DELL''UTENTE ' || UPPER( :username ) || ' ASSOCIATO A ' || TP.TITOLO || ' ' || TP.NOME || ' ' || TP.COGNOME AS TITOLO,
				  TP.NOME, 
				  TP.COGNOME, 
				  TP.COD_FISC CODICE_FISCALE,
				  I.INDIRIZZO,
				  I.INDIRIZZO2,
				  I.INDIRIZZO3,
				  I.EMAIL,
				  I.PEC,
				  I.TELEFONO,
          		  I.CELLULARE,
				  I.FAX,
		          I.USERNAME USERNAME_INPS,
		          decode(I.PWD,null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw( I.PWD )))) PASSWORD_INPS,
		          decode(I.PINCODE, null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw( I.PINCODE )))) PINCODE_INPS,
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'LAYOUT' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'LAYOUT' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) LAYOUT,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'MOSTRA_NUOVO_ACCESSO' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'MOSTRA_NUOVO_ACCESSO' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) MOSTRA_NUOVO_ACCESSO,
				  
				   ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'PRIVACY_PERSISTENZA_AVVISO' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'PRIVACY_PERSISTENZA_AVVISO' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) PRIVACY_PERSISTENZA_AVVISO,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'CONFERMA_STAMPA_RICETTA' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'CONFERMA_STAMPA_RICETTA' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) CONFERMA_STAMPA_RICETTA,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'PRESCRITTORE_UGUALE_CURANTE' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'PRESCRITTORE_UGUALE_CURANTE' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) PRESCRITTORE_UGUALE_CURANTE,
				  
				  ( 
				      SELECT decode(
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'SHOW_FARMACO_ORIGINALE' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        ),'0','S','N' )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'SHOW_FARMACO_ORIGINALE' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  )
				   SHOW_FARMACO_ORIGINALE,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'ANTEPRIMA_STAMPA_MODULI' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'ANTEPRIMA_STAMPA_MODULI' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) ANTEPRIMA_STAMPA_MODULI,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'SALVATAGGIO_RAPIDO_RR' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'SALVATAGGIO_RAPIDO_RR' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) SALVATAGGIO_RAPIDO_RR,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'INVIO_RR_SAL' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'INVIO_RR_SAL' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) INVIO_RR_SAL,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'AVVISO_ESENZIONI_APERTE' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'AVVISO_ESENZIONI_APERTE' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) AVVISO_ESENZIONI_APERTE,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'AVVISO_PRESCR_NON_CRONICHE' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'AVVISO_PRESCR_NON_CRONICHE' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) AVVISO_PRESCR_NON_CRONICHE,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'SINONIMI_ACCERTAMENTI' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'SINONIMI_ACCERTAMENTI' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) SINONIMI_ACCERTAMENTI,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'FREQUENZA_ACCERTAMENTI' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'FREQUENZA_ACCERTAMENTI' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) FREQUENZA_ACCERTAMENTI,
				  				  				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_RR' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_RR' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) POSOLOGIA_RR,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'CHIEDI_SETTAGGIO_PROBLEMA' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'CHIEDI_SETTAGGIO_PROBLEMA' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) CHIEDI_SETTAGGIO_PROBLEMA,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'DESCRIZIONE_PROBLEMA' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'DESCRIZIONE_PROBLEMA' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) DESCRIZIONE_PROBLEMA,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_DEFAULT' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_DEFAULT' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) POSOLOGIA_DEFAULT,
				  
				  (
				  	SELECT DESCRIZIONE FROM MMG_POSOLOGIA WHERE CODICE = ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_DEFAULT' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'POSOLOGIA_DEFAULT' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S')  
				  ) POSOLOGIA_DEFAULT_DESCR,
				  
				  ( 
				      SELECT 
				        NVL( 
				          VALORE, 
				          ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'ALLERGIE_PERSISTENZA_AVVISO' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
				        )
				      FROM CONFIG$PARAMETRI WHERE NOME = 'ALLERGIE_PERSISTENZA_AVVISO' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				  ) ALLERGIE_PERSISTENZA_AVVISO,
          
	          	( SELECT CONTENUTO FROM MMG_REPORT WHERE ID_TABELLA = :iden_per AND TIPO_DATO = 'RICETTA_FIRMA_MEDICO' ) TIMBRO_RICETTA_ROSSA,
					  
	          	( SELECT CONTENUTO FROM MMG_REPORT WHERE ID_TABELLA = :iden_per AND TIPO_DATO = 'RICETTA_BIANCA_FIRMA_MEDICO' ) TIMBRO_RICETTA_BIANCA,
	          
	          	( SELECT CONTENUTO FROM MMG_REPORT WHERE ID_TABELLA = :iden_per AND TIPO_DATO = 'TIMBRO_FIRMA_MEDICO' ) TIMBRO_CERTIFICATO,
	          	
	          	'' OFFLINE_ATTIVO,
          	
          		( 
				  SELECT 
					NVL( 
					  VALORE, 
					  ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_CHIEDI_PASSWORD' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
					)
				  FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_CHIEDI_PASSWORD' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				) OFFLINE_CHIEDI_PASSWORD,
          		
          		( 
				  SELECT 
					NVL( 
					  VALORE, 
					  ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_AUTOSYNC' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
					)
				  FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_AUTOSYNC' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				) OFFLINE_AUTOSYNC,
				
				( 
				  SELECT 
					NVL( 
					  VALORE, 
					  ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_SINCRONIZZA_GRUPPO' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
					)
				  FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_SINCRONIZZA_GRUPPO' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				) OFFLINE_SINCRONIZZA_GRUPPO,
				
				( 
				  SELECT 
					NVL( 
					  VALORE, 
					  ( SELECT VALORE FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_IMPORTA_SIN_ACC' AND GRUPPO = 'GLOBALI' AND ATTIVO = 'S' )
					)
				  FROM CONFIG$PARAMETRI WHERE NOME = 'OFFLINE_IMPORTA_SIN_ACC' AND GRUPPO = 'UTENTI' AND ID_GRUPPO = :username AND ATTIVO = 'S'  
				) OFFLINE_IMPORTA_SIN_ACC 
          		
				FROM DATI$PERSONALE TP
				LEFT JOIN MMG_INFO_MEDICO I ON TP.IDEN = I.IDEN_PER
				INNER JOIN CONFIG$UTENTI U ON U.IDEN_PER = TP.IDEN and U.SITO in ('MMG','ALL') and U.ATTIVO='S'
				WHERE TP.IDEN = :iden_per AND U.USERNAME = :username
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="username" value="#USERNAME#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_ALTRE_STAMPE">
			<SQL>
				SELECT 
				  LC.*, 
				  A.NOME,
				  A.COGN COGNOME,
				  A.DATA,
				  A.COD_FISC,
				  C.COMUNE RESIDENZA,
				  CC.COMUNE NASCITA
				FROM DATI$ANAG A 
				LEFT JOIN DATI$COMUNI C ON C.XXX_CCOM = A.COM_RES 
				LEFT JOIN DATI$COMUNI CC ON CC.XXX_CCOM = A.COM_NASC
				LEFT JOIN LISTA_CERTIFICATI LC ON LC.IDEN = :iden AND LC.ATTIVO = 'S' AND LC.DELETED = 'N'
				WHERE A.DELETED = 'N' AND A.IDEN = :iden_anag
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_SEGNAPOSTO_CERTIFICATI">
			<SQL>SELECT '&lt;nome&gt;' VALUE, 'Nome' DESCR FROM DUAL UNION ALL
				SELECT '&lt;cognome&gt;' VALUE, 'Cognome' DESCR FROM DUAL UNION ALL
				SELECT '&lt;codice_fiscale&gt;' VALUE, 'Cod. Fiscale' DESCR FROM
				DUAL UNION ALL SELECT '&lt;data_nascita&gt;' VALUE, 'Data di
				nascita' DESCR FROM DUAL UNION ALL SELECT '&lt;luogo_nascita&gt;'
				VALUE, 'Luogo di nascita' DESCR FROM DUAL UNION ALL SELECT '&lt;indirizzo_residenza&gt;'
				VALUE, 'Indirizzo di residenza' FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="CMB_TIPO_CERTIFICATO">
			<SQL>
				SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_CODIFICHE WHERE TIPO_DATO = 'TIPO_CERTIFICATO' AND TIPO_SCHEDA = 'ALTRI_CERTIFICATI' AND ATTIVO = 'S'
			</SQL>
		</QUERY>
		
		<QUERY id="CMB_TIPO_MEDICINA_INIZIATIVA">
			<SQL>
				SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_CODIFICHE WHERE TIPO_SCHEDA = 'MEDICINA_DI_INIZIATIVA' AND TIPO_DATO = 'TIPO_MEDICINA_INIZIATIVA' AND DELETED = 'N' AND ATTIVO = 'S'
			</SQL>
		</QUERY>
		<QUERY id="CMB_TIPO_PARENTELA">
			<SQL>
				SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_CODIFICHE WHERE TIPO_DATO = 'PARENTELA' AND TIPO_SCHEDA = 'GRUPPI_FAMILIARI' AND ATTIVO = 'S' ORDER BY CODICE
			</SQL>
		</QUERY>
		<QUERY id="AC_VACCINO_TIPO">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_VACCINI WHERE
				ATTIVO = 'S'
			</SQL>
		</QUERY>
		<QUERY id="BILANCIO_INSERIMENTO">
			<SQL>select PESO, 
				ALTEZZA, 
				(select VALORE_1 from MMG_ACCERT_RILEVAZIONI where IDEN_ANAG = :iden_anag and TIPO_RILEVAZIONE = 'CIRCONF_CRANICA' and DELETED = 'N' and DATA_INS = (select max(DATA_INS)
				from MMG_ACCERT_RILEVAZIONI where IDEN_ANAG = :iden_anag and TIPO_RILEVAZIONE = 'CIRCONF_CRANICA' and DELETED = 'N' AND DATA = TO_CHAR(SYSDATE, 'YYYYMMDD'))) CIRCONFERENZA_CRANICA 
        		from MMG_ACCERT_RILEVAZIONI where IDEN_ANAG = :iden_anag 
        		and TIPO_RILEVAZIONE = 'PESO_ALTEZZA' 
        		and DELETED = 'N' 
        		and DATA = TO_CHAR(SYSDATE, 'YYYYMMDD') ORDER BY DATA_INS DESC
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CARICA_LOTTO_VACCINO">
			<SQL>select null value ,'' descr from dual union all select NR_LOTTO
				VALUE, NR_LOTTO||' - '||COD_TIPOLOGIA_VACCINO DESCR FROM
				MMG_LOTTO_VACCINI WHERE DELETED = 'N' AND UTE_INS =:iden_per
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CARICA_ULTIMA_ASSISTENZA">
			<SQL>select COGN COGNOME, NOME, SESSO, INDIR INDIRIZZO, COD_FISC C_F, DATA DATA_NASCITA, VAP.*
        		from DATI$ANAG A
        		left join (select
          		IDEN_ANAG, CASA_RIPOSO, COERENZA, AIUTO_DEAMB, ORIENTAMENTO, ABBIGLIAMENTO, INSERIMENTO_SOC, TIPO_ALIM, VISTA, AIUTO_ALIM, UDITO, CONTINENZA, PAROLA, MOB_DAL_LETTO, IGIENE,
          		IGIENE_POSTO_LETTO, MOB_INTERNA, DIAGNOSI_1, DIAGNOSI_2, DIAGNOSI_3, DIAGNOSI_4, DIAGNOSI_5, DIAGNOSI_6, DIAGNOSI_7, DIAGNOSI_8, DIAGNOSI_9, DIAGNOSI_10, ALTRO, IMP_LOG, DIAGN_DETT, RICH_MOTIV, ACC_DOM, VALORE_TOTALE,
          		rank() over (partition by IDEN_ANAG, IDEN_MED_BASE order by DATA_INS desc) RANGO
        		from VIEW_ASSISTENZA_PROGRAMMATA where IDEN_ANAG =:iden_anag and IDEN_MED_BASE =:iden_med_base
        		) VAP on VAP.IDEN_ANAG=A.IDEN and RANGO=1
        		where A.IDEN = :iden_anag
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="iden_med_base" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CHK_CONTROLLO_STOMATOLOGICO">
			<SQL>SELECT 'I' VALUE, 'I' DESCR FROM DUAL
				UNION ALL
				SELECT 'II' VALUE, 'II' DESCR FROM DUAL
				UNION ALL
				SELECT 'III' VALUE, 'III' DESCR FROM DUAL
				UNION ALL
				SELECT 'IV' VALUE, 'IV' DESCR FROM DUAL
				UNION ALL
				SELECT 'V' VALUE, 'V' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_LAYOUT">
			<SQL>
				SELECT 2 VALUE, 2 DESCR FROM DUAL UNION ALL SELECT 3 VALUE, 3 DESCR FROM DUAL UNION ALL SELECT 4 VALUE, 4 DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_TIPO_DICHIARANTE_CONSENSO">
			<SQL>
				SELECT 'T' VALUE, 'Tutore' DESCR FROM DUAL UNION ALL SELECT 'L' VALUE, 'Legale rappresentante' DESCR FROM DUAL UNION ALL SELECT 'A' VALUE, 'Amministratore di sostegno' DESCR FROM DUAL UNION ALL SELECT 'G' VALUE, 'Esercente la potestÃ  genitoriale' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_DEMASN_CONFERMA_RICETTE">
			<SQL>
				SELECT 'S,D' VALUE, 'Dematerializzate' DESCR FROM DUAL UNION ALL SELECT 'N' VALUE, 'Ricette Rosse' DESCR FROM DUAL UNION ALL SELECT 'S,N,D' VALUE, 'Entrambe' FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_DA_STAMPARE_CONFERMA_RICETTE">
			<SQL>
				SELECT 'S' VALUE, 'Stampate' DESCR FROM DUAL UNION ALL SELECT 'N' VALUE, 'Da Stampare' DESCR FROM DUAL UNION ALL SELECT 'S,N' VALUE, 'Entrambe' FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_VISUALIZZA_CONFERMA_RICETTE">
			<SQL>
				SELECT 'C,S' VALUE, 'Confermate' DESCR FROM DUAL UNION ALL SELECT 'I' VALUE, 'Non Confermate' DESCR FROM DUAL UNION ALL SELECT 'I,C,S' VALUE, 'Entrambe' FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="RAD_TIPO_DICHIARAZIONE_SOSTITUTIVA">
			<SQL>
				SELECT 'T' VALUE, 'di essere Tutore del paziente sopra indicato' DESCR FROM DUAL UNION ALL 
				SELECT 'C' VALUE, 'di essere Curatore del paziente sopra indicato' DESCR FROM DUAL UNION ALL 
				SELECT 'A' VALUE, 'di essere Amm. di sostegno del paziente sopra indicato' DESCR FROM DUAL UNION ALL  
				SELECT 'P' VALUE, 'di esercitare la potestÃ  nei confronti del minore sopra indicato' DESCR FROM DUAL 
			</SQL>
		</QUERY>
		<QUERY id="CHK_GIORNI_SETTIMANA">
			<SQL>SELECT /*+first_rows(10)*/ '1' VALUE,'lblLunedi' DESCR FROM DUAL
				UNION ALL SELECT '2' VALUE, 'lblMartedi' DESCR FROM DUAL UNION ALL
				SELECT '3' VALUE, 'lblMercoledi' DESCR FROM DUAL UNION ALL SELECT
				'4' VALUE,'lblGiovedi' DESCR FROM DUAL UNION ALL SELECT'5' VALUE,
				'lblVenerdi' DESCR FROM DUAL UNION ALL SELECT '6' VALUE, 'lblSabato'
				DESCR FROM DUAL UNION ALL SELECT '7' VALUE, 'lblDomenica' DESCR FROM
				DUAL
			</SQL>
		</QUERY>
		<QUERY id="CHK_SCELTA_BILANCIO_SALUTE">
			<SQL>SELECT 'BILANCIO_SALUTE_1' VALUE, 'lblBilancioSalute1' DESCR
				FROM DUAL UNION ALL
				SELECT 'BILANCIO_SALUTE_2' VALUE,
				'lblBilancioSalute2' DESCR FROM DUAL
				UNION ALL
				SELECT
				'BILANCIO_SALUTE_3' VALUE, 'lblBilancioSalute3' DESCR FROM DUAL
				UNION ALL
				SELECT 'BILANCIO_SALUTE_4' VALUE, 'lblBilancioSalute4'
				DESCR FROM DUAL
				UNION ALL
				SELECT 'BILANCIO_SALUTE_5' VALUE,
				'lblBilancioSalute5' DESCR FROM DUAL
				UNION ALL
				SELECT
				'BILANCIO_SALUTE_6' VALUE, 'lblBilancioSalute6' DESCR FROM DUAL
				UNION ALL
				SELECT 'BILANCIO_SALUTE_7' VALUE, 'lblBilancioSalute7'
				DESCR FROM DUAL
				UNION ALL
				SELECT 'BILANCIO_SALUTE_8' VALUE,
				'lblBilancioSalute8' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="CMB_GENERICA_ALCOL">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="LCL" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_GENERALI">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="GENERALI" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_MESTRUAZIONI">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="cmbMestrua" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_NATO_DA">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="cmbNato" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_PARENTELA">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="cmbParentela" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_PARTO">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="cmbParto" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_PRT">
			<SQL>select null as descr, null as value from dual union all select
				/*+first_rows(100)*/ descrizione as descr,iden as value from
				mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by descr desc
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="PRT" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_GENERICA_TEST_FAMILIARITA">
			<SQL>select /*+first_rows(10)*/ '1' as optgroup, '1.0' as
				descrizione, 1 as value
				from dual union all select '2' as
				optgroup,'2.0' as descrizione,2 as
				value from dual
			</SQL>
		</QUERY>
		<QUERY id="CMB_GENERICA_VACCINAZIONI">
			<SQL>select /*+first_rows(100)*/ descrizione as descr,iden as value
				from mmg_codifiche where tipo_dato=:tipo_dato order by
				descrizione
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="VACCINAZIONE" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_LOAD_VACCINAZIONI">
			<SQL>select /*+first_rows(100)*/ descrizione as descr,iden as value
				from mmg_codifiche where tipo_dato=:tipo_dato and attivo = 'S' order by
				descrizione
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="VACCINAZIONE" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_MINUTI">
			<SQL>SELECT '00' VALUE, '00' DESCR FROM DUAL UNION ALL
				SELECT '05'
				VALUE, '05' DESCR FROM DUAL UNION ALL
				SELECT '10' VALUE, '10' DESCR
				FROM DUAL UNION ALL
				SELECT '15' VALUE, '15' DESCR FROM DUAL UNION ALL
				SELECT '20' VALUE, '20' DESCR FROM DUAL UNION ALL
				SELECT '25' VALUE,
				'25' DESCR FROM DUAL UNION ALL
				SELECT '30' VALUE, '30' DESCR FROM
				DUAL UNION ALL
				SELECT '35' VALUE, '35' DESCR FROM DUAL UNION ALL
				SELECT '40' VALUE, '40' DESCR FROM DUAL UNION ALL
				SELECT '45' VALUE,
				'45' DESCR FROM DUAL UNION ALL
				SELECT '50' VALUE, '50' DESCR FROM
				DUAL UNION ALL
				SELECT '55' VALUE, '55' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="CMB_ORE">
			<SQL>SELECT '00' VALUE, '00' DESCR FROM DUAL UNION ALL
				SELECT '01'
				VALUE, '01' DESCR FROM DUAL UNION ALL
				SELECT '02' VALUE, '02' DESCR
				FROM DUAL UNION ALL
				SELECT '03' VALUE, '03' DESCR FROM DUAL UNION ALL
				SELECT '04' VALUE, '04' DESCR FROM DUAL UNION ALL
				SELECT '05' VALUE,
				'05' DESCR FROM DUAL UNION ALL
				SELECT '06' VALUE, '06' DESCR FROM
				DUAL UNION ALL
				SELECT '07' VALUE, '07' DESCR FROM DUAL UNION ALL
				SELECT '08' VALUE, '08' DESCR FROM DUAL UNION ALL
				SELECT '09' VALUE,
				'09' DESCR FROM DUAL UNION ALL
				SELECT '10' VALUE, '10' DESCR FROM
				DUAL UNION ALL
				SELECT '11' VALUE, '11' DESCR FROM DUAL UNION ALL
				SELECT '12' VALUE, '12' DESCR FROM DUAL UNION ALL
				SELECT '13' VALUE,
				'13' DESCR FROM DUAL UNION ALL
				SELECT '14' VALUE, '14' DESCR FROM
				DUAL UNION ALL
				SELECT '15' VALUE, '15' DESCR FROM DUAL UNION ALL
				SELECT '16' VALUE, '16' DESCR FROM DUAL UNION ALL
				SELECT '17' VALUE,
				'17' DESCR FROM DUAL UNION ALL
				SELECT '18' VALUE, '18' DESCR FROM
				DUAL UNION ALL
				SELECT '19' VALUE, '19' DESCR FROM DUAL UNION ALL
				SELECT '20' VALUE, '20' DESCR FROM DUAL UNION ALL
				SELECT '21' VALUE,
				'21' DESCR FROM DUAL UNION ALL
				SELECT '22' VALUE, '22' DESCR FROM
				DUAL UNION ALL
				SELECT '23' VALUE, '23' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="CMB_PAGINE">
			<SQL>select /*+first_rows(100)*/ KEY_LEGAME VALUE ,KEY_LEGAME DESCR
				from SDJ.HTML_STRUTTURA_CONFIG WHERE ATTIVO='S'
			</SQL>
		</QUERY>
		<QUERY id="CMB_PROBLEMI_MODULI">
			<SQL>select null value ,'' descr from dual
					union all 
				select PROBLEMA_COMPLETO VALUE, PROBLEMA_COMPLETO DESCR
				from VIEW_PROBLEMI
				WHERE IDEN_ANAG = :iden_anag
				AND CHIUSO = 'N' AND DELETED = 'N' and NASCOSTO = 'N'
				and VUA(IDEN_ANAG, :iden_utente, IDEN_MED, DATA,'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO',OSCURATO,UTE_INS) = 1
				and SITO in ('MMG')
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="iden_utente" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_TERAPIE">
			<SQL>select 
				null VALUE,
				'' DESCR 
				from dual
					union all 
				select 
				value, descr
				from (select 
				farmaco VALUE,
				FARMACO DESCR
				from VIEW_RICETTA_FARMACI A 
				where IDEN_ANAG = :iden_anag 
				and CRONICITA = :cronicita 
				and ATTIVO = 'S' 
				ORDER BY DATA_ISO DESC)
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="cronicita" value="S" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_SESSO">
			<SQL>select /*+first_rows(10)*/ 'Sesso 1' OPTGROUP, 'M' VALUE,
				'lblMaschio' DESCR from dual union all select /*+first_row(10)*/
				'Sesso 1' OPTGROUP, 'F' VALUE, 'lblFemmina' DESCR from dual union
				all select /*+first_row(10)*/ 'Sesso 1' OPTGROUP, 'U' VALUE,
				'lblSconosciuto' DESCR from dual union all select /*+first_row(10)*/
				'Sesso 2' OPTGROUP, 'M2' VALUE, 'lblMaschio' DESCR from dual union
				all select /*+first_row(10)*/ 'Sesso 2' OPTGROUP, 'F2' VALUE,
				'lblFemmina' DESCR from dual union all select /*+first_row(10)*/
				'Sesso 2' OPTGROUP, 'U2' VALUE, 'lblSconosciuto' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="CMB_SEZIONE_BACHECA">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N'
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="LINK" type="V"></BIND>
				<BIND id="tipo_scheda" value="BACHECA" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_TIPO_SEGNALAZIONE">
			<SQL>
				SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_CODIFICHE 
				WHERE TIPO_DATO = 'TIPO_SEGNALAZIONE' AND TIPO_SCHEDA = 'SEGNALAZIONI' AND ATTIVO = 'S' AND DELETED = 'N' 
				ORDER BY DESCRIZIONE
			</SQL>
		</QUERY>
		<QUERY id="CMB_SEZIONE_SEGNALAZIONI">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N'
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="LINK" type="V"></BIND>
				<BIND id="tipo_scheda" value="BACHECA" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="CMB_VISUALIZZAZIONE_AGENDA">
			<SQL>SELECT 'S' VALUE, 'lblGiornoSingolo' DESCR FROM DUAL UNION ALL
				SELECT 'M' VALUE, 'lblGiornoMultiplo' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="C_RICORDA">
			<SQL>select /*+first_row(10)*/ 'S' VALUE, 'lblRicorda' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="C_UTENTE_STAMPANTE">
			<SQL>select '--impostazioni globali--' DESCR, '_' value from DUAL
				union all select * from (select DESCRIZIONE || ' (' ||
				STRING_AGG(distinct USERNAME) || ')' DESCR, '_' || IDEN_PER value
				from VIEW_UTENTI_CDC
				where (COD_CDC in (select COD_CDC from VIEW_UTENTI_CDC where IDEN_PER = :iden_per)
				or (COD_CDC is null and IDEN_PER = :iden_per)) and TIPO_UTENTE='M'
				group by IDEN_PER, DESCRIZIONE
				order by DESCRIZIONE)
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="IDEN_MED_BASE_PAZIENTE">
			<SQL>select IDEN_MED_BASE FROM DATI$ANAG WHERE iden = :iden_anag</SQL>
		</QUERY>
		<QUERY id="INDAGINE_QUESITO_DATI">
			<SQL>SELECT IDEN,
				  ANAMNESI,
				  MDC_IODATO,
				  DISTURBI,
				  RISCHIO_ALLERGICO,
				  DETTAGLIO_RISCHIO_ALLERGICO,
				  PESO,
				  INSUFF_RENALE,
				  INSUFF_EPATICA,
				  INSUFF_CARDIO_VASC,
				  DIABETE,
				  STATO_GRAVIDANZA,
				  IPERTIROIDISMO,
				  MIELOMA,
				  TRATT_FARMA,
				  DETTAGLIO_TRATT_FARMA,
				  '' QUESITO,
				  '' INDAGINE
				FROM VIEW_MODULO_TC
				WHERE  iden = (SELECT iden FROM
				(select iden from VIEW_MODULO_TC WHERE IDEN_ANAG =:iden_anag and ute_ins
				=:iden_per order by data_ins desc) where rownum = 1)
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="INDAGINE_QUESITO_DATI_RM">
			<SQL> 
				select
  				IDEN, COLLABORAZIONE, COLLABORAZIONE_BIS, PESO,
				NOTIZIE_CLINICHE, ACCERTAMENTI, ESAME_RM, DOVE, PARTE_CORPO, QUANDO,
				PERCHE, CUORE, DETTAGLIO_CUORE, CERVELLO,
				DETTAGLIO_CERVELLO,
				OCCHIO_ORECCHIO, DETTAGLIO_OCCHIO_ORECCHIO, COLONNA,
				DETTAGLIO_COLONNA, VASI, DETTAGLIO_VASI, ADDOME, DETTAGLIO_ADDOME,
				TORACE, DETTAGLIO_TORACE, ARTI,
				DETTAGLIO_ARTI, ALTRI_INTERVENTI,
				DETTAGLIO_ALTRI_INTERVENTI, CORPI_METALLICI,
				DETT_CORPI_METALLICI,
				PACE_MAKER, DETTAGLIO_PACE_MAKER, VALVOLE,
				DETTAGLIO_VALVOLE,
				DISTRATTORI, DETTAGLIO_DISTRATTORI, POMPE_INFUSIONE,
				DETTAGLIO_POMPE_INFUSIONE,
				NEUROSTIMOLATORI,
				DETTAGLIO_NEUROSTIMOLATORI, DERIVAZIONE,
				DETTAGLIO_DERIVAZIONE,
				IMPIANTI, DETTAGLIO_IMPIANTI, TATUAGGI_PIERCING,
				MAGNETO_COMPATIBILITA,
				CLAUSTROFOBIA, GRAVIDANZA,
				ALLERGIE_MEZZI_CONTRASTO,
				DETTAGLIO_ALLERGIE,
				ALLERGIE_METALLI,
				DETTAGLIO_ALLERGIE_METALLI, INSUFF_RENALE, DETTAGLIO_INSUFF_RENALE,
				CREATININEMIA, AZOTEMIA,DISP_ELE_NR, CLIP_VASCOLARI, FILTRI_STENT_SPIRALI, CATETERE, 
				MED_TRANSDERMICHE, PROTESI, CORPI_ESTRANEI, CLIPS_MET, 
				FILTRI_STENT_SPIRALI_NON, SHUNT, PROTESI_ORT_MET, ESPANSORI, 
				IUD, TATUAGGI, MESI_GRAVIDANZA, DATA_ULTIMO_MESTRUO, 
				RISCHIO_ALLERGICO, DETTAGLIO_RISCHIO_ALLERGICO, INS_EPATICA, 
				DETTAGLIO_INS_EPATICA, CREATININEMIA, DATA_CREATININEMIA,
				'' QUESITO,
				'' INDAGINE
				FROM
				VIEW_MODULO_RM r WHERE iden = (SELECT iden FROM
				(select iden from VIEW_MODULO_RM WHERE IDEN_ANAG =:iden_anag and ute_ins
				=:iden_per order by data_ins desc) where rownum = 1)
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="INSERISCI_PROMEMORIA">
			<SQL>select 'S' VALUE, 'Inserisci Promemoria' DESCR 
				from dual
			</SQL>
		</QUERY>
		<QUERY id="INTERVENTI_DATA">
			<SQL>select DESCRIZIONE_ICD9 || ' ' ||TO_CHAR(TO_DATE(DATA_INTERVENTO,'YYYYMMDD'),'DD/MM/YYYY') INTERVENTI
				from MMG_INTERVENTI where IDEN_ANAG = :iden_anag and
				deleted = 'N' {#ORDER#}
			</SQL>
		</QUERY>
		<QUERY id="LIST_CLASSI_RISCHIO">
			<SQL>select descrizione as descr,iden as value from mmg_codifiche
				where tipo_dato=:tipo_dato and attivo = 'S' order by ORDINE, descrizione
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="CLASSE_RISCHIO" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="LIST_PROFILI">
			<SQL>select IDEN value, DESCRIZIONE DESCR from MMG_GRUPPI_ACC
				where ATTIVO='S' AND IDEN_UTENTE = :iden_utente order by DESCRIZIONE
			</SQL>
			<BINDS>
				<BIND id="iden_utente" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="PROBLEMA_ACCERTAMENTO">
			<SQL>select PROBLEMA from VIEW_PROBLEMI where IDEN = :iden_problema
			</SQL>
		</QUERY>
		<QUERY id="Q_MEDICINA_DI_INIZIATIVA">
			<SQL>
				SELECT * FROM MEDICINA_INIZIATIVA WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_ALTEZZA_PAZIENTE">
			<SQL>select altezza ALTEZZA from (select altezza from Mmg_Accert_Rilevazioni where iden_anag = :iden_anag and deleted = 'N' and altezza is not null order by iden desc) where rownum = 1 
			</SQL>
		</QUERY>
		<QUERY id="Q_DIABETE_PAZIENTE">
			<SQL>SELECT COUNT(*) DIABETE FROM MMG_PROBLEMI WHERE IDEN_ANAG = :iden_anag AND IDEN_MED = :iden_med AND DELETED = 'N' AND DESCR_ICD9 LIKE '%'||:descr||'%'
				and SITO in ('MMG')
			</SQL>
		</QUERY>
		<QUERY id="Q_EMAIL_PAZIENTE">
			<SQL>SELECT EMAIL FROM DATI$ANAG WHERE IDEN = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="Q_NOME_COGNOME_PAZIENTE">
			<SQL>SELECT NOME, COGN, SESSO, DATA, COM_NASC FROM DATI$ANAG WHERE IDEN = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="Q_DATI_MEDICO">
			<SQL>SELECT P.NOME,
				  P.COGNOME,
				  P.INDIRIZZO1 INDIRIZZO,
				  P.COD_ASL CODICE_ASL,
				  M.TELEFONO,
				  M.EMAIL ,
				  M.FAX 
				FROM DATI$PERSONALE P JOIN MMG_INFO_MEDICO M ON P.IDEN = M.IDEN_PER WHERE IDEN = :iden_med</SQL>
		</QUERY>
		<QUERY id="Q_INDIRIZZO_PAZIENTE">
			<SQL>SELECT INDIR INDIRIZZO FROM DATI$ANAG WHERE IDEN = :iden_anag 
			</SQL>
		</QUERY>
		<QUERY id="Q_ASSOCIAZIONE_AREA_AGENDA">
			<SQL>select 'ASSOCIAZIONE AGENDE PER IL MEDICO ' || DESCR AS TITOLO
				FROM DATI$PERSONALE WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CONSENSO_TRATTAMENTO_DATI">
			<SQL>
				select /*+first_rows(1)*/ t.CONTENUTO_XML.getClobVal() CONTENUTO FROM MMG_SCHEDE_XML t where t.IDEN_ANAG = :iden_anag AND T.SCHEDA = 'CONSENSO_TRATTAMENTO_DATI' AND IDEN IN ( SELECT MAX(IDEN) FROM MMG_SCHEDE_XML WHERE SCHEDA = 'CONSENSO_TRATTAMENTO_DATI' AND IDEN_ANAG = :iden_anag )
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_ATTIVITA_SPORTIVA">
			<SQL>
				select /*+first_rows(1)*/ t.CONTENUTO_XML.getClobVal() CONTENUTO FROM MMG_SCHEDE_XML t where t.IDEN_ANAG = :iden_anag AND T.SCHEDA = 'ATTIVITA_SPORTIVA' AND IDEN IN ( SELECT MAX(IDEN) FROM MMG_SCHEDE_XML WHERE SCHEDA = 'ATTIVITA_SPORTIVA' AND IDEN_ANAG = :iden_anag )
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		
		<QUERY id="Q_MODULO_PATENTE">
			<SQL>
				select 
    
			  A.NOME || ' ' || A.COGN NOME_COGNOME, 
			  DATETIMECONVERTER( A.DATA, 'yyyyMMdd','dd/MM/yyyy') DATA_NASCITA, 
			  A.COD_FISC, 
			  (SELECT t.CONTENUTO_XML.getClobVal() FROM MMG_SCHEDE_XML T WHERE T.IDEN_ANAG = :iden_anag AND T.SCHEDA = 'MODULO_PATENTE' AND IDEN IN ( SELECT MAX(IDEN) FROM MMG_SCHEDE_XML WHERE SCHEDA = 'MODULO_PATENTE' AND IDEN_ANAG = :iden_anag ) ) CONTENUTO,
			  C.COMUNE
			  FROM DATI$ANAG A
			  LEFT OUTER JOIN DATI$COMUNI C ON a.com_nasc = c.xxx_ccom
			  WHERE A.IDEN = :iden_anag
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		
		<QUERY id="Q_SEGNALAZIONI">
			<SQL>
				SELECT 
				  S.*,
				  TP.DESCR MEDICO,
				  DATETIMECONVERTER( S.DATA_INS, 'YYYYMMDD','DD/MM/YYYY') DATA_INSERIMENTO
				FROM 
				  SEGNALAZIONI S
				INNER JOIN DATI$PERSONALE TP ON S.UTE_INS = TP.IDEN
				LEFT JOIN DATI$ANAG A ON S.IDEN_ANAG = A.IDEN
				WHERE S.DELETED = 'N' AND S.IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		
		<QUERY id="Q_BACHECA">
			<SQL>
				SELECT (SELECT 'Promemoria per l''utente ' || DESCR FROM DATI$PERSONALE WHERE IDEN = :iden_per) LEGEND_UTENTE,
				(SELECT 'Promemoria per il paziente ' || COGN || ' ' || NOME FROM DATI$ANAG WHERE IDEN = :iden_anag) LEGEND_PAZIENTE,
				(SELECT 'Promemoria per il giorno ' || TO_CHAR( SYSDATE, 'DD/MM/YYYY') FROM DUAL) LEGEND_OGGI,
				(SELECT 'Lista delle revisioni del software MMG aggiornata alle '
					|| TO_CHAR( SYSDATE, 'HH24:MI')
					|| ' del giorno '
					|| TO_CHAR( SYSDATE, 'DD/MM/YYYY') FROM DUAL) LEGEND_AGGIORNAMENTI
				FROM DUAL
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_APPUNTI">
			<SQL>
				SELECT * FROM APPUNTI WHERE IDEN_MEDICO = :iden_medico AND IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden_medico" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CODIFICHE">
			<SQL>select /*+first_row(10)*/ CODICE value, DESCRIZIONE descr, ORDINE from MMG_CODIFICHE where {1=1} and ATTIVO = 'S' order by ORDINE</SQL>
		</QUERY>
		<QUERY id="Q_GRUPPI_FAMILIARI">
			<SQL>
				SELECT
					( SELECT 'Scelta del grado di parentela per il paziente ' || NOME || ' ' || COGN FROM DATI$ANAG WHERE IDEN = :iden_anag ) TITOLO
				FROM DUAL
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_ACCERTAMENTI">
			<SQL>
				SELECT I.* FROM UNISYS$INFORMAZIONI I WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_GRAVIDANZA">
			<SQL>
				SELECT 
					G.*, 
					get_info_gravidanza(  :iden,'WEEK' ) NSETTIMANA
					FROM MMG_GRAVIDANZE G WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CERTIFICATO_MALATTIA_INS">
			<SQL>select /*+first_row(10)*/
				AN.COGN || ' ' || AN.NOME || ' ' || DATETIMECONVERTER(AN.data,'yyyyMMdd','dd/MM/yyyy') NOME_ASSISTITO,
				INFO.USERNAME USERNAME_MEDICO,
				INFO.RICORDA_PIN,
				INFO.RICORDA_PWD,
				decode(INFO.PWD,null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(INFO.PWD )))) PWD,
				decode(INFO.PINCODE,null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(INFO.PINCODE )))) PINCODE,
				NVL(P.COD_REGIONE,'070') COD_REGIONE,
				NVL(P.COD_ASL,'102') COD_ASL,
				AN.COD_FISC,
				AN.INDIR INDIRIZZO,
				AN.COMUNE_RES COMUNE,
				NVL(AN.NUM_CIVICO, 'SNC') CIVICO,
				AN.CAP,
				AN.PROV PROVINCIA,
				AN.NOMINATIVO_VISITA NOME_REPE,
				AN.INDIR_VISITA INDIRIZZO_REPE,
				AN.COMUNE_VISITA COMUNE_REPE,
				AN.PROV_VISITA PROVINCIA_REPE,
				AN.CAP_VISITA CAP_REPE,
				AN.NUM_CIVICO_VISITA CIVICO_REPE,
				null NOTE, null TIPO_VISITA, null TIPO_CERTIFICATO, null RUOLO, null AGEVOLAZIONE, null GIORNATA_LAVORATA,
				null TRAUMA, null DATA_FINE, null DATA_INIZIO, null DATA_RILASCIO, null CODICE_ICD9, null DESCR_ICD9
				FROM VIEW_MMG_ANAGRAFICA AN, MMG_INFO_MEDICO INFO
				join DATI$PERSONALE P on INFO.IDEN_PER = P.IDEN
				WHERE AN.IDEN = :iden_anag AND INFO.IDEN_PER = :iden_per
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CERTIFICATO_MALATTIA_MOD">
			<SQL>select /*+first_row(1)*/ IDEN,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''DATA_INIZIO'']/text()') DATA_INIZIO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''USERNAME_MEDICO'']/text()') USERNAME_MEDICO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''AGEVOLAZIONE'']/text()') AGEVOLAZIONE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''CODICE_ICD9'']/text()') CODICE_ICD9,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''PROVINCIA'']/text()' ) PROVINCIA,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''COMUNE'']/text()' ) COMUNE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''COMUNE_REPE'']/text()') COMUNE_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''DATA_FINE'']/text()' ) DATA_FINE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''DATA_RILASCIO'']/text()') DATA_RILASCIO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''DESCR_ICD9'']/text()' ) DESCR_ICD9,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''GIORNATA_LAVORATA'']/text()') GIORNATA_LAVORATA,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''NOME_ASSISTITO'']/text()') NOME_ASSISTITO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''NOTE'']/text()' ) NOTE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''RUOLO'']/text()' ) RUOLO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''TIPO_CERTIFICATO'']/text()') TIPO_CERTIFICATO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''TIPO_VISITA'']/text()') TIPO_VISITA,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''TRAUMA'']/text()' ) TRAUMA,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''CAP'']/text()' ) CAP,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''CAP_REPE'']/text()' ) CAP_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''CIVICO'']/text()' ) CIVICO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''CIVICO_REPE'']/text()') CIVICO_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''COD_FISC'']/text()' ) COD_FISC,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''INDIRIZZO'']/text()' ) INDIRIZZO,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''INDIRIZZO_REPE'']/text()') INDIRIZZO_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''PROVINCIA_REPE'']/text()') PROVINCIA_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''NOME_REPE'']/text()') NOME_REPE,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''RICORDA_PIN'']/text()') RICORDA_PIN,
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''RICORDA_PWD'']/text()') RICORDA_PWD,
				(select COD_REGIONE from TAB_PER where IDEN = :iden_per) COD_REGIONE,
				(select COD_ASL from TAB_PER where IDEN = :iden_per) COD_ASL,
				case WHEN
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''RICORDA_PWD'']/text()') = 'S' THEN
				(select decode(PWD,null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(PWD)))) from MMG_INFO_MEDICO where IDEN_PER = :iden_per)
				ELSE
				NULL
				end PWD,
				case WHEN
				EXTRACTVALUE(XML_CERTIFICATO,'//CAMPO[@COL=''RICORDA_PIN'']/text()') = 'S' THEN
				(select decode(PINCODE,null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(PINCODE)))) from MMG_INFO_MEDICO where IDEN_PER = :iden_per)
				else
				null
				end PINCODE
				FROM MMG_CERTIFICATI WHERE IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_COD_FISC">
			<SQL>select COD_FISC FROM DATI$ANAG WHERE IDEN =:iden_anag</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_COMUNE_MEDICO">
			<SQL>select substr(extractvalue(CONTENUTO_XML, '//CAMPO[@COL="COMUNE"]/text()'),1,1000) COMUNE 
        		FROM MMG_SCHEDE_XML WHERE IDEN_ANAG = :iden_anag and SCHEDA = 'MMG_MODULO_MALATTIA_INFETTIVA_NOT' AND UTE_INS = :ute_ins and DATA_INS = (select max(DATA_INS)
				from MMG_SCHEDE_XML WHERE IDEN_ANAG = :iden_anag and SCHEDA = 'MMG_MODULO_MALATTIA_INFETTIVA_NOT' AND UTE_INS = :ute_ins)</SQL>
		</QUERY>
		<QUERY id="Q_CRONO_RR_ACCERTAMENTI">
			<SQL>SELECT /*+first_rows(1)*/ * FROM VIEW_CRONO_RR_ACCERTAMENTO
				WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_CRONO_RR_FARMACI">
			<SQL>SELECT /*+first_rows(1)*/ * FROM VIEW_CRONO_RR_FARMACO WHERE
				IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_DIAGNOSI_LETTERA">
			<SQL>select '' VALUE, '' DESCR from dual
				union all
				select CODICE_ICD9 VALUE, DESCR_ICD9 || ' - ' || DESCRIZIONE DESCR
				from MMG_PROBLEMI
				where IDEN_ANAG = :paziente and SITO in ('MMG')
			</SQL>
			<BINDS>
				<BIND id="paziente" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_EMPTY">
			<SQL>select null VALUE, null DESCR from dual</SQL>
		</QUERY>
		<QUERY id="Q_FILL_COMBO">
			<SQL>select '' as descr, '' as value from dual union all SELECT
				CODICE AS VALUE, DESCRIZIONE AS DESCR FROM MMG_CODIFICHE WHERE
				TIPO_DATO = :tipo_dato and TIPO_SCHEDA = :tipo_scheda and ATTIVO
				='S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_FILL_RADIO">
			<SQL>SELECT /*+first_rows(10)*/ CODICE AS VALUE, DESCRIZIONE AS DESCR
				FROM MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato and TIPO_SCHEDA
				= :tipo_scheda and ATTIVO ='S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_FILTRO_CDC_MMG">
			<SQL>select /*+first_rows(10)*/ IDEN AS VALUE, DESCR FROM DATI$PERSONALE
				WHERE IDEN = :iden_med_base
			</SQL>
			<BINDS>
				<BIND id="username" value="#USERNAME#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_FILTRO_MEDICO">
			<SQL>SELECT  value, descr from (
				select distinct IDEN_PER VALUE, DESCRIZIONE DESCR
				FROM VIEW_UTENTI_CDC
				WHERE COD_CDC IN (
						SELECT COD_CDC
						FROM VIEW_UTENTI_CDC
						WHERE IDEN_PER = :iden_per
					) and TIPO_UTENTE='M'
				)
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_FORNITURA_VACCINO">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR,
				ORDINE from MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND
				TIPO_SCHEDA = :tipo_scheda and ATTIVO = 'S' AND DELETED = 'N' ORDER
				BY ORDINE
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="FORNITURA" type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_INSERIMENTO_VACCINO" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_GRUPPO_SANGUIGNO">
			<SQL>select null as value, '' as descr from dual union all select
				/*+first_row(10)*/ CODICE AS VALUE, DESCRIZIONE AS DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'GRUPPO_SANGUIGNO' AND ATTIVO =
				'S' AND DELETED = 'N'
			</SQL>
		</QUERY>
		<QUERY id="Q_INDAGINE">
			<!-- <SQL>SELECT STRING_AGG(COALESCE(MA.ACCERTAMENTO, VRA.DESCRIZIONE)) INDAGINE from MMG_ACCERTAMENTI MA JOIN VIEW_RR_ACCERTAMENTI VRA ON MA.CODICE_ACCERTAMENTO = VRA.CODICE 
					where MA.IDEN IN(select COLUMN_VALUE from table(split(:iden_accertamento)))
			</SQL> -->
			<SQL>
				SELECT COALESCE(MA.ACCERTAMENTO, VRA.DESCRIZIONE) INDAGINE from MMG_ACCERTAMENTI MA JOIN VIEW_RR_ACCERTAMENTI VRA ON MA.CODICE_ACCERTAMENTO = VRA.CODICE where MA.IDEN =:iden_accertamento
			</SQL>
		</QUERY>
		<QUERY id="Q_QUESITO">
			<SQL>select PROBLEMA_COMPLETO QUESITO from VIEW_PROBLEMI where IDEN =:iden_problema
			</SQL>
		</QUERY>
		<QUERY id="Q_QUESITO_FROM_RR_TESTATA">
			<SQL>select QUESITO from RR_RICETTA_ROSSA_TESTATA where IDEN =:iden_ricetta
			</SQL>
		</QUERY>
		<QUERY id="Q_INFO_MEDICO">
			<SQL>SELECT /*+first_row(1)*/ USERNAME, decode(PWD, null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw(PWD )))) PWD, 
				decode(PINCODE, null, null, utl_raw.cast_to_varchar2(utl_encode.base64_decode(utl_raw.cast_to_raw( PINCODE )))) PINCODE FROM
				MMG_INFO_MEDICO WHERE IDEN_PER = :iden_per
			</SQL>
			<BINDS>
				<BIND id="iden_per" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_LUOGO_ESECUZIONE">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR,
				ORDINE from MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND
				TIPO_SCHEDA = :tipo_scheda and ATTIVO = 'S' AND DELETED = 'N' ORDER
				BY ORDINE
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="LUOGO_ESECUZIONE" type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_INSERIMENTO_VACCINO" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MEDICO_CURANTE">
			<SQL>select /*+first_rows(10)*/ iden , descr medico from DATI$PERSONALE
				WHERE IDEN = :iden_med_base
			</SQL>
			<BINDS>
				<BIND id="iden_med_base" value="#IDEN_MED_BASE#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MMG_ASSISTENZA_PROGR">
			<SQL>select * FROM VIEW_ASSISTENZA_PROGRAMMATA WHERE IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MMG_LETTERA">
			<SQL>select NOME, COGNOME, INDIRIZZO, LOCALITA, CAP, RECAPITO_TEL,
				E_MAIL, DIAGNOSI, DETTAGLIO, CORPO_LETTERA FROM VIEW_MMG_LETTERA
				WHERE IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MMG_PRIORITA_CLINICA">
			<SQL>select VIS_RICH ACCERTAMENTO, MODAL_ACC, PRI_CLI, Q_CLINICO,
				ACC_EFF, SOSP_DIAGN PROBLEMA FROM VIEW_PRIORITA_CLINICA WHERE
				IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MMG_SOSTITUZIONE_MEDICO">
			<SQL>select
				s.iden,s.iden_med,s.iden_med_sostituto,s.data_inizio,s.data_fine,s.tipo_sostituzione,s.note,
				(select descr from DATI$PERSONALE where iden=s.iden_med_sostituto) med_sostituto,
				(select descr from DATI$PERSONALE where iden=s.iden_med) med_curante,
				s.liquidazione, s.SOST_GRUPPO,
				(select data_inizio from mmg_medico_sostituzioni where iden_parent = s.iden and tipo_sostituzione='VIRTUALE') data_inizio_visione,
				decode((select count(iden) from mmg_medico_sostituzioni where iden_parent = s.iden and tipo_sostituzione='VIRTUALE'),1,'S','N') visione
				from mmg_medico_sostituzioni s where s.iden = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_MODULO_ARMI_PROFESSIONE">
			<SQL>SELECT a.iden,A.IDEN_PRF IDEN_PRF,prof.DESCR PROFESSIONE
			 FROM anag a LEFT JOIN DATI$PROFESSIONI prof ON prof.iden = a.iden_prf
			  WHERE A.IDEN = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="Q_NON_NOTE_ALLERGIA">
			<SQL>SELECT /*+first_rows(10)*/ CODICE AS VALUE, DESCRIZIONE AS DESCR
				FROM MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato and TIPO_SCHEDA
				= :tipo_scheda and ATTIVO ='S' order by ordine
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="ALLERGIA_INTOLLERANZE_NON_NOTE"
					type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_PATIENT_SUMMARY" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_NOTE_PROBLEMA_INSERIMENTO">
			<SQL>SELECT NOTE FROM MMG_PROBLEMI WHERE IDEN = :iden_problema AND DELETED = 'N'</SQL>
		</QUERY>
		<QUERY id="Q_PRIVACY">
			<SQL>
				select /*+first_rows(1)*/ t.privacy_paziente privacy FROM anag t where t.iden = :iden_anag
			</SQL>
		</QUERY>
		<QUERY id="Q_PROBLEMA">
			<SQL>select /*+first_row(1)*/ * FROM MMG_PROBLEMI where IDEN = :IDEN_PROBLEMA
			</SQL>
			<BINDS>
				<BIND id="IDEN_PROBLEMA" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_REPORT_VACCINI_ANNI">
			<SQL>SELECT COUNT(*) REPORT from (SELECT distinct 
				   MP.DESCRIZIONE,
				   A.COGN || ' ' || A.nome PAZIENTE,
				   MPS.DATA_PIP as DATA_PIP_ORDER,
				   AGEINYEARS(A.DATA) ETA,
				  DATA_DIFF_MONTHS(MPS.DATA_PIP, a.data) AS eta_vaccino_mesi,
				  DATA_DIFF_YEARS(MPS.DATA_PIP, a.data) AS eta_vaccino_anni,
				   a.sesso,
				   A.DATA,
				   MV.TIPO_VACCINO_ANTINFLUENZALE
				FROM MMG_PIP_SVOLTE MPS
				   INNER JOIN MMG_PIP MP ON (MPS.IDEN_PIP=MP.IDEN AND MP.CODICE = '16')
				   INNER JOIN mmg_vaccini_paziente mv ON (mv.iden_ppip = MPS.IDEN)
				   INNER JOIN DATI$ANAG A ON (A.IDEN = MPS.IDEN_ANAG)
				   join VIEW_UTENTI_ASSISTITI VVV on VVV.IDEN_ANAG=MPS.IDEN_ANAG and VVV.IDEN_UTENTE=:iden_utente and VVV.IDEN_MEDICO_PAZIENTE=mps.IDEN_MED and to_char(mps.DATA_ins,'yyyymmdd') between VVV.DATA_inizio and VVV.DATA_FINE and VVV.RELAZIONE='ASSISTITO')
				WHERE  
				   (TIPO_VACCINO_ANTINFLUENZALE is not null and TIPO_VACCINO_ANTINFLUENZALE = :tipo_vaccino )
				   and data_pip_order between to_char((sysdate-180), 'yyyymmdd') and to_char(sysdate, 'yyyymmdd')
				   and sesso like :sesso
				   and eta_vaccino_anni between :da and :a
			</SQL>
		</QUERY>
		<QUERY id="Q_REPORT_VACCINI_MESI">
			<SQL>SELECT COUNT(*) REPORT from (SELECT distinct 
				   MP.DESCRIZIONE,
				   A.COGN || ' ' || A.nome PAZIENTE,
				   MPS.DATA_PIP as DATA_PIP_ORDER,
				   AGEINYEARS(A.DATA) ETA,
				  DATA_DIFF_MONTHS(MPS.DATA_PIP, a.data) AS eta_vaccino_mesi,
				  DATA_DIFF_YEARS(MPS.DATA_PIP, a.data) AS eta_vaccino_anni,
				   a.sesso,
				   A.DATA,
				   MV.TIPO_VACCINO_ANTINFLUENZALE
				FROM MMG_PIP_SVOLTE MPS
				   INNER JOIN MMG_PIP MP ON (MPS.IDEN_PIP=MP.IDEN AND MP.CODICE = '16')
				   INNER JOIN mmg_vaccini_paziente mv ON (mv.iden_ppip = MPS.IDEN)
				   INNER JOIN DATI$ANAG A ON (A.IDEN = MPS.IDEN_ANAG)
				   join VIEW_UTENTI_ASSISTITI VVV on VVV.IDEN_ANAG=MPS.IDEN_ANAG and VVV.IDEN_UTENTE=:iden_utente and VVV.IDEN_MEDICO_PAZIENTE=mps.IDEN_MED and to_char(mps.DATA_ins,'yyyymmdd') between VVV.DATA_inizio and VVV.DATA_FINE and VVV.RELAZIONE='ASSISTITO')
				WHERE  
				   (TIPO_VACCINO_ANTINFLUENZALE is not null and TIPO_VACCINO_ANTINFLUENZALE = :tipo_vaccino )
				   and data_pip_order between to_char((sysdate-180), 'yyyymmdd') and to_char(sysdate, 'yyyymmdd')
				   and sesso like :sesso
				   and eta_vaccino_mesi between :da and :a
			</SQL>
		</QUERY>
		<QUERY id="Q_RH_SANGUIGNO">
			<SQL>select null as value, '' as descr from dual union all select
				/*+first_row(10)*/ CODICE AS VALUE, DESCRIZIONE AS DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'GRUPPO_SANGUIGNO_RH' AND ATTIVO
				= 'S' AND DELETED = 'N'
			</SQL>
		</QUERY>
		<QUERY id="Q_RICARICA_ANAMNESI_PRE_NEONATALE">
			<SQL>SELECT * from VIEW_ANAMNESI_PRE_NEONATALE WHERE IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RICARICA_MODULO_RM">
			<SQL> select 
					COLLABORAZIONE, PESO, 
					NOTIZIE_CLINICHE, INDAGINE, ACCERTAMENTI, QUESITO, ESAME_RM, DOVE, PARTE_CORPO, 
					QUANDO, PERCHE, CUORE, DETTAGLIO_CUORE, CERVELLO, DETTAGLIO_CERVELLO, 
					OCCHIO_ORECCHIO, DETTAGLIO_OCCHIO_ORECCHIO, COLONNA, DETTAGLIO_COLONNA, VASI, 
					DETTAGLIO_VASI, ADDOME, DETTAGLIO_ADDOME, TORACE, DETTAGLIO_TORACE, ARTI, 
					DETTAGLIO_ARTI, ALTRI_INTERVENTI, DETTAGLIO_ALTRI_INTERVENTI, CORPI_METALLICI, 
					DETT_CORPI_METALLICI, PACE_MAKER, DETTAGLIO_PACE_MAKER, VALVOLE, DETTAGLIO_VALVOLE, 
					DISTRATTORI, DETTAGLIO_DISTRATTORI, POMPE_INFUSIONE, DETTAGLIO_POMPE_INFUSIONE, 
					NEUROSTIMOLATORI, DETTAGLIO_NEUROSTIMOLATORI, DERIVAZIONE, DETTAGLIO_DERIVAZIONE, 
					IMPIANTI, DETTAGLIO_IMPIANTI, TATUAGGI_PIERCING, MAGNETO_COMPATIBILITA, CLAUSTROFOBIA, 
					GRAVIDANZA, ALLERGIE_MEZZI_CONTRASTO, DETTAGLIO_ALLERGIE, ALLERGIE_METALLI, 
					DETTAGLIO_ALLERGIE_METALLI, INSUFF_RENALE, DETTAGLIO_INSUFF_RENALE, COLLABORAZIONE_BIS,
					DISP_ELE_NR, CLIP_VASCOLARI, FILTRI_STENT_SPIRALI, CATETERE, 
					MED_TRANSDERMICHE, PROTESI, CORPI_ESTRANEI, CLIPS_MET, 
					FILTRI_STENT_SPIRALI_NON, SHUNT, PROTESI_ORT_MET, ESPANSORI, 
					IUD, TATUAGGI, MESI_GRAVIDANZA, DATA_ULTIMO_MESTRUO, 
					RISCHIO_ALLERGICO, DETTAGLIO_RISCHIO_ALLERGICO, INS_EPATICA, 
					DETTAGLIO_INS_EPATICA, CREATININEMIA, DATA_CREATININEMIA
					 AZOTEMIA, IDEN_ANAG 
 				from VIEW_MODULO_RM 
 				where IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RICARICA_MODULO_TC">
			<SQL>select ANAMNESI, CREATINENEMIA, DATA_CREATINENEMIA, VFGF, DATA_VFGF, QUESITO, INDAGINE, PESO, MDC_IODATO, DISTURBI,
				RISCHIO_ALLERGICO, DETTAGLIO_RISCHIO_ALLERGICO, INSUFF_RENALE, DETTAGLIO_DISTURBI,
				INSUFF_EPATICA, INSUFF_CARDIO_VASC, DIABETE, STATO_GRAVIDANZA, COLLABORAZIONE, COLLABORAZIONE_BIS,
				IPERTIROIDISMO,
				MIELOMA,
				TRATT_FARMA,
				DETTAGLIO_TRATT_FARMA
				FROM
				VIEW_MODULO_TC WHERE IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RICARICA_VACCINO">
			<SQL>select X.IDEN,
				X.DATA,
				X.UTE_INS,
				X.IDEN_ANAG,
				X.CODICE,
				X.NR_LOTTO,
				X.COD_FORNITORE,
				X.DESCR_FORNITORE,
				X.LUOGO_ESECUZIONE,
				X.TIPO_VACCINO_ANTINFLUENZALE,
				X.IDEN_PPIP,
				X.DATA_SCADENZA,
				(select DESCRIZIONE from MMG_VACCINI where CODICE=X.CODICE) COD_VAC,
				(select IDEN_CLASSI from MMG_PIP_SVOLTE where IDEN=X.IDEN_PPIP) CLASSI
				from MMG_VACCINI_PAZIENTE X where IDEN =:iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RIEPILOGO_BILANCIO_SALUTE">
			<SQL>select string_agg(substr(scheda,length(scheda),1)) bilanci_compilati
				from mmg_schede_xml
				where scheda like 'BILANCIO_SALUTE%'
				and iden_anag=:iden_anag and DELETED = 'N' 
				AND VUA(IDEN_ANAG, :iden_med, UTE_INS, DATA, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', OSCURATO)=1
			</SQL>
			<BINDS>
				<BIND id="iden_med" value="#UTE_INS#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_RR_URGENZA">
			<SQL>select /*+first_rows(100)*/ descrizione as descr,CODICE as
				value, ORDINE from mmg_codifiche where tipo_dato=:tipo_dato AND
				TIPO_SCHEDA = :tipo_scheda and attivo = 'S' order by ORDINE
			</SQL>
			<BINDS>
				<BIND id="tipo_scheda" value="RICETTA_ROSSA" type="V"></BIND>
				<BIND id="tipo_dato" value="RR_URGENZA" type="V"></BIND>
			</BINDS>
		</QUERY>
		
		<QUERY id="SELECT_POCI">
			<SQL>select /*+first_rows(10)*/ CODICE as VALUE, DESCRIZIONE as DESCR
				from mmg_codifiche
				where tipo_dato = :tipo_dato AND TIPO_SCHEDA = :tipo_scheda and attivo = 'S' order by ORDINE
			</SQL>
			<BINDS>
				<BIND id="tipo_scheda" value="RICETTA_ROSSA" type="V"></BIND>
				<BIND id="tipo_dato" value="RR_POCI" type="V"></BIND>
			</BINDS>
		</QUERY>
		
		<QUERY id="Q_SCADENZARIO">
			<SQL>select /*+first_rows(1)*/ * from SCADENZARIO where IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>

		<QUERY id="Q_SCHEDA_ANAGRAFICA">
			<SQL>select * from view_scheda_anagrafica where iden = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_ANAGRAFICA_PRIVACY">
			<SQL>select
				cogn as cognome,
				nome,
				nome || ' ' || cogn AS PAZIENTE,
				DATETIMECONVERTER(data,'YYYYmmDD','DD/mm/YYYY') as data_nascita,
				data as data_iso,
				descr_nasc||' ('||prov_nasc|| ')' as com_nascita,
				indirizzo_residenza as residenza,
				indir as indirizzo,
				descr_res || '(' || prov_res || ') ' as comune,
				tel,
				cod_fisc
				from view_scheda_anagrafica where iden = :iden
			</SQL>
		</QUERY>
		<QUERY id="Q_INFO_CONSENSO_MMG">
			<SQL>select iden, SCHEDA AS CONSENSO from mmg_schede_xml where iden_anag = :iden_anag and scheda in ('CONSENSO_PRIVACY_MMG','CONSENSO_PRIVACY_MMG_V2') AND deleted = 'N'
			</SQL>
		</QUERY>
		<QUERY id="Q_MERGE_CONSENSO_MMG">
			<SQL>select 
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="PAZIENTE"]/text()'),1,1000)PAZIENTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="LUOGO_NASCITA"]/text()'),1,1000)LUOGO_NASCITA,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="DATA_NASCITA"]/text()'),1,1000)DATA_NASCITA_ISO,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@KEY_CAMPO="txtSottoscrittoDataNascita"]/text()'),1,1000)DATA_NASCITA,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="RESIDENZA"]/text()'),1,1000)RESIDENZA,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="CODICE_FISCALE"]/text()'),1,1000)CODICE_FISCALE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="TIPO_GARANTE"]/text()'),1,1000)TIPO_GARANTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="GARANTE_PAZIENTE"]/text()'),1,1000)GARANTE_PAZIENTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="LUOGO_NASCITA_GARANTE"]/text()'),1,1000)LUOGO_NASCITA_GARANTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@KEY_CAMPO="txtGaranteDataNascita"]/text()'),1,1000)DATA_NASCITA_GARANTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="DATA_NASCITA_GARANTE"]/text()'),1,1000)DATA_NASCITA_GARANTE_ISO,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="RESIDENZA_GARANTE"]/text()'),1,1000)RESIDENZA_GARANTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="CODICE_FISCALE_GARANTE"]/text()'),1,1000)CODICE_FISCALE_GARANTE,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="CONSENSO_DATI"]/text()'),1,1000)CONSENSO_DATI,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="CONSENSO_DATI_SENSIBILI"]/text()'),1,1000)CONSENSO_DATI_SENSIBILI,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="SOSTITUTO"]/text()'),1,1000)SOSTITUTO,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="SPECIALISTA"]/text()'),1,1000)SPECIALISTA,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="ASSOCIATI"]/text()'),1,1000)ASSOCIATI,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="COLLABORATORI"]/text()'),1,1000)COLLABORATORI,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="CONSENSO_PERSONALE_ASL"]/text()'),1,1000)CONSENSO_PERSONALE_ASL,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="NOM_1"]/text()'),1,1000)NOM_1,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="TEL_1"]/text()'),1,1000)TEL_1,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="NOM_2"]/text()'),1,1000)NOM_2,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="TEL_2"]/text()'),1,1000)TEL_2,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="NOM_3"]/text()'),1,1000)NOM_3,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="TEL_3"]/text()'),1,1000)TEL_3,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@KEY_CAMPO="txtDataRecepimento"]/text()'),1,1000)DATA_RECEPIMENTO,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="DATA_RECEPIMENTO"]/text()'),1,1000)DATA_RECEPIMENTO_ISO,
				SUBSTR(extractvalue(CONTENUTO_XML,'//CAMPO[@COL="RECEPIMENTO"]/text()'),1,1000)OPE_RECEPIMENTO,
				a.cogn as cognome,
				a.nome,
				a.descr_res,
				a.PROV_RES,
				a.INDIR,
				a.cod_fisc,
				a.INDIRIZZO_RESIDENZA,
				a.DESCR_NASC
				from mmg_schede_xml ms 
				join view_scheda_anagrafica a on ms.iden_anag = a.iden
				where ms.iden = :iden
				</SQL>
		</QUERY>
		<QUERY id="Q_SCHEDA_DIARIO">
			<SQL>SELECT /*+first_rows(10)*/ m.note,m.* FROM MMG_DIARIO m WHERE IDEN = :iden_diario
			</SQL>
			<BINDS>
				<BIND id="iden_diario" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_SCHEDA_INFO_FARMACO">
			<SQL>select /*+first_rows(1)*/ DESCRIZIONE,PRINCIPIO_ATTIVO,
			 	CODICE_PRODOTTO, REGIME_SSN,TIPO_PRODOTTO, FORMA, ATC_GMP, CLASSE, PREZZO_EURO,
				CONSERVAZIONE, VALIDITA_DOPO_APERTURA, CONTENITORE, PRESCRIVILITA,
				GRUPPO_TERAPEUTICO, PRESCR_MAX_PEZZI FROM FARMADATI$V_PRODOTTI
				where codice_prodotto =:iden_farm
			</SQL>
			<BINDS>
				<BIND id="iden_farm" value="#COD_FARMACO#" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_SCHEDA_PATIENT_SUMMARY">
			<SQL>SELECT * FROM VIEW_MMG_PATIENT_SUMMARY where iden_anag = :iden_anag</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_ABBIGLIAMENTO">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Abbigliamento' AND TIPO_SCHEDA
				= 'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_AIUTO_ALIM">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Aiuto_Alim' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_AIUTO_DEAMB">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Aiuto_Deamb' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_ALIM">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Tipo_Alim' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_ALLERGIA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and attivo = 'S' order by ordine
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="ALLERGIA_INTOLLERANZE" type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_PATIENT_SUMMARY" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_COERENZA">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Coerenza' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="Primo_cmb" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_CONTINENZA">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Continenza' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_IGIENE">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Igiene' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_IGIENE_LETTO">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Igiene_Posto_Letto' AND
				TIPO_SCHEDA = 'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_INS_SOC">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Inserimento_Soc' AND
				TIPO_SCHEDA = 'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_MOB_INTERNA">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Mob_Interna' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_MOB_LETTO">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Mob_dal_Letto' AND TIPO_SCHEDA
				= 'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_ORIENTAMENTO">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Orientamento' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_PAROLA">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Parola' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_SOSTANZA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ORDINE FROM
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and attivo = 'S' order by ORDINE
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="TIPOLOGIA_SOSTANZA" type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_PATIENT_SUMMARY" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_UDITO">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Udito' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_TIPOLOGIA_VISTA">
			<SQL>select '' value, '' descr, 0 ordine from dual union all select
				/*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'Vista' AND TIPO_SCHEDA =
				'MMG_ASSISTENZA_PROGR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="Q_ULTIMO_SALVATAGGIO_ANAMNESI_PRE_NEONATALE">
			<SQL>select * from VIEW_ANAMNESI_PRE_NEONATALE where DATA_INS =
				(select max(DATA_INS) from VIEW_ANAMNESI_PRE_NEONATALE where
				IDEN_ANAG =:iden_anag) and IDEN_ANAG =:iden_anag
			</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_ACCESSO">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='NUOVO_ACCESSO' AND TIPO_DATO =
				'TIPOLOGIA_ACCESSO' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_ACC_GRUPPI">
			<SQL>SELECT DESCRIZIONE DESCR, CODICE VALUE FROM MMG_GRUPPI_ACC
				WHERE DESCRIZIONE IS NOT NULL AND ATTIVO = 'S' ORDER BY DESCRIZIONE
			</SQL>
		</QUERY>
		<QUERY id="R_AGEVOLAZIONI">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='CERTIFICATO_MALATTIA' AND TIPO_DATO =
				'AGEVOLAZIONI' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_ALLATTAMENTO">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR, ORDINE FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA = 'BILANCIO_SALUTE_1' AND TIPO_DATO =
				'ALLATTAMENTO' and attivo = 'S'  order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_ANAGRAFE">
			<SQL>select /*+first_rows(10)*/ 'ASSISTITI' VALUE, 'lblAssistiti'
				DESCR from dual union all select /*+first_rows(10)*/ 'SANITARIA'
				VALUE, 'lblSanitaria' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_ANAGRAFE_ASSISTITI">
			<SQL>select /*+first_rows(1)*/ 'SSN' VALUE, 'lblSSN' DESCR from dual
				union all
				/*select /*+first_rows(1)*/ /*'LP' VALUE, 'lblLP' DESCR from
				dual union all*/
				select /*+first_rows(1)*/ 'MEDGRUP' VALUE,
				'lblMEDGRUP' DESCR from
				dual union all
				select /*+first_rows(1)*/
				'SPEC' VALUE, 'lblSPEC' DESCR from dual union
				all
				select
				/*+first_rows(1)*/ 'REV' VALUE, 'lblREV' DESCR from dual union all
				select /*+first_rows(1)*/ 'DEC' VALUE, 'lblDEC' DESCR from dual
				union all
				select /*+first_rows(1)*/ 'TUTTI' VALUE, 'lblTUT' DESCR
				from dual
			</SQL>
		</QUERY>
		<QUERY id="R_ASSENZA_ALLERGIE">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA = 'MMG_PATIENT_SUMMARY' AND TIPO_DATO =
				'Assenza_Allergie' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_BLOCCO">
			<SQL>select /*+first_rows(100)*/ descrizione as descr,CODICE as value
				from mmg_codifiche where tipo_dato='BLOCCO_PRESCRIZIONI' AND
				TIPO_SCHEDA = 'CRONO_RR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_CHIUSO_APERTO">
			<SQL>SELECT /*+first_rows(10)*/ CODICE AS VALUE, DESCRIZIONE AS DESCR
				FROM MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato and TIPO_SCHEDA
				= :tipo_scheda and ATTIVO ='S' order by ordine
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="ATTR_PROBLEMA" type="V"></BIND>
				<BIND id="tipo_scheda" value="FILTRI_PROBLEMA" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_CHIUSURA_PROBLEMA">
			<SQL>Select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'CHIUSURA_PROBLEMA' AND
				TIPO_SCHEDA = 'CHIUSURA_PROBLEMA' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_COD_DESCR">
			<SQL>select /*+first_row(10)*/ 'CODICE' VALUE, 'lblCodice' DESCR from
				dual union all select /*+first_row(10)*/ 'DESCRIZIONE' VALUE,
				'lblDescrizione' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_FILL_RADIO">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_MODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N'
			</SQL>
		</QUERY>
		<QUERY id="R_FLUOROPROFILASSI">
			<SQL>select /*+first_row(10)*/ '0' VALUE, 'lblSiCasa' DESCR from dual
				union all select /*+first_row(10)*/ '1' VALUE, 'lblSiScuola' DESCR
				from dual union all select /*+first_row(10)*/ '2' VALUE, 'lblNo'
				DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_GRAVIDANZA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR,
				ordine FROM MMG_CODIFICHE WHERE TIPO_DATO = 'Gravidanza' AND
				TIPO_SCHEDA = 'MMG_ANAMNESI_PRE_NEONATALE' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="RICARICA_NUOVO_ACCESSO">
			<SQL>select IDEN, DATA DATA_INS, COD_TIPOLOGIA_ACCESSO, NOTE,
				COD_REGIME_ACCESSO, INDIRIZZO_ACCESSO, OPERATORE_ACCESSO from MMG_ACCESSI where IDEN = :iden
			</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="RICARICA_VISITA">
			<SQL>SELECT * FROM VIEW_VISITE WHERE IDEN = :iden</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="LOAD_SCHEDA_XML_BY_IDEN">
			<SQL>select /*+first_rows(1)*/ IDEN, t.CONTENUTO_XML.getClobVal() CONTENUTO FROM MMG_SCHEDE_XML t where t.IDEN = :iden</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="LOAD_SCHEDA_XML_LAST">
			<SQL>select /*+first_rows(1)*/ t.IDEN, t.CONTENUTO_XML.getClobVal() CONTENUTO FROM 
			(select IDEN, CONTENUTO_XML from MMG_SCHEDE_XML where IDEN_ANAG = :iden_anag and SCHEDA = :scheda AND DELETED = 'N' 
			AND VUA(IDEN_ANAG, :ute_ins, IDEN_MED, DATA, 'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', OSCURATO, UTE_INS)=1 order by data_ins desc) t where rownum=1</SQL>
			<BINDS>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
				<BIND id="scheda" value="#KEY_LEGAME#" type="V"></BIND>
				<BIND id="ute_ins" value="#UTE_INS#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_LIQUID">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR,
				ordine FROM MMG_CODIFICHE WHERE TIPO_DATO = 'Liquid' AND
				TIPO_SCHEDA = 'MMG_RICHIESTA_SOST' and attivo = 'S'  order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_LIQUIDO_ANAMNESI_NEONATALE">
			<SQL>select /*+first_rows(10)*/ 'L' VALUE, 'Limpido' DESCR from dual
				union all select /*+first_rows(10)*/ 'T' VALUE, 'Tinto' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="R_LIVELLO_RIFERITO">
			<SQL>select CODICE value, DESCRIZIONE DESCR, ORDINE from
				MMG_CODIFICHE where TIPO_SCHEDA = 'MMG_MODULO_AMMISSIONE_RETE_SERVIZI'
				and TIPO_DATO = 'Livello' and attivo = 'S' order by ORDINE
			</SQL>
		</QUERY>
		<QUERY id="R_MEDICI_SELEZIONATI">
			<SQL>select VALORE1 as value, VALORE2 as descr from
				MMG_VALORI_TEMPORANEI where UTE_INS in (:idenUtente) ORDER BY
				ORDINE, DESCR
			</SQL>
			<BINDS>
				<BIND id="idenUtente" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_ND">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N'
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="ND" type="V"></BIND>
				<BIND id="tipo_scheda" value="MMG_ANAMNESI_PRE_NEONATALE" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_PARTO_I">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_SCHEDA = 'MMG_ANAMNESI_PRE_NEONATALE'
				AND TIPO_DATO = 'Parto_I' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_PARTO_II">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_SCHEDA = 'MMG_ANAMNESI_PRE_NEONATALE'
				AND TIPO_DATO = 'Parto_II' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_PARTO_III">
			<SQL>select CODICE value, DESCRIZIONE DESCR, ORDINE from
				MMG_CODIFICHE where TIPO_SCHEDA = 'MMG_ANAMNESI_PRE_NEONATALE'
				and TIPO_DATO = 'Parto_III' and attivo = 'S' order by ORDINE
			</SQL>
		</QUERY>
		<QUERY id="R_POSITIVO_NEGATIVO">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N' order by ordine
			</SQL>
			<BINDS>
				<BIND id="tipo_scheda" value="GENERICO" type="V"></BIND>
				<BIND id="tipo_dato" value="POSITIVO_NEGATIVO" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_PRESENTAZIONE">
			<SQL>SELECT CODICE VALUE, DESCRIZIONE DESCR, ordine FROM
				MMG_CODIFICHE WHERE TIPO_SCHEDA = 'MMG_ANAMNESI_PRE_NEONATALE'
				AND TIPO_DATO = 'Presentazione' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_PRIORITA_BACHECA">
			<SQL>SELECT /*+first_rows(10)*/ 0 VALUE, 'lblNessunaPriorita' DESCR
				FROM DUAL UNION ALL
				SELECT /*+first_rows(10)*/ 1 VALUE,
				'lblBassaPriorita' DESCR FROM DUAL
				UNION ALL
				SELECT
				/*+first_rows(10)*/ 2 VALUE, 'lblMediaPriorita' DESCR FROM DUAL
				UNION ALL
				SELECT /*+first_rows(10)*/ 3 VALUE, 'lblAltaPriorita' DESCR
				FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_PRIORITA_SEGNALAZIONI">
			<SQL>SELECT /*+first_rows(10)*/ 0 VALUE, 'lblNessunaPriorita' DESCR
				FROM DUAL UNION ALL
				SELECT /*+first_rows(10)*/ 1 VALUE,
				'lblBassaPriorita' DESCR FROM DUAL
				UNION ALL
				SELECT
				/*+first_rows(10)*/ 2 VALUE, 'lblMediaPriorita' DESCR FROM DUAL
				UNION ALL
				SELECT /*+first_rows(10)*/ 3 VALUE, 'lblAltaPriorita' DESCR
				FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_PREFERENZA_CONTATTO">
			<SQL>
				SELECT /*+first_rows(10)*/ 'EMAIL' VALUE, 'lblEmail' DESCR FROM DUAL UNION ALL
				SELECT /*+first_rows(10)*/ 'TEL' VALUE, 'lblTelefono' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_RICETTA">
			<SQL>
				SELECT /*+first_rows(1)*/ 'R' VALUE, 'lblRicettaRossa' DESCR FROM DUAL UNION ALL SELECT /*+first_rows(1)*/ 'B' VALUE, 'lblRicettaBianca' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_PRESCRIZIONE">
			<SQL>
				SELECT /*+first_rows(1)*/ 'FARMACI_OFFLINE' VALUE, 'lblFarmaci' DESCR FROM DUAL UNION ALL SELECT /*+first_rows(1)*/ 'ACCERTAMENTI_OFFLINE' VALUE, 'lblAccertamenti' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_PROBLEMA_ACCORPAMENTO">
			<SQL>select /*+first_row(100)*/ distinct VP.IDEN VALUE ,
				VP.PROBLEMA||'('|| VP.CODICE_ICD9||' - '|| VP.DESCR_ICD9||')' DESCR
				from VIEW_PROBLEMI VP 
				where VP.IDEN_ANAG = :iden_anag
				and VP.CHIUSO = 'N' AND VP.NASCOSTO='N' AND IDEN_PARENT IS NULL 
				and iden != :iden_problema
				and	VUA(vp.IDEN_ANAG,:iden_utente,vp.iden_med,to_char(vp.data_ins,'YYYYMMDD'),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', VP.OSCURATO, VP.UTE_INS)=1
				and VP.SITO in ('MMG')
				ORDER BY VP.IDEN DESC
			</SQL>
			<BINDS>
				<BIND id="iden_utente" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_PROBLEMA_ATTIVO">
			<SQL>select /*+first_row(100)*/ distinct VP.IDEN VALUE ,
				VP.PROBLEMA||'('|| VP.CODICE_ICD9||' - '|| VP.DESCR_ICD9||')'||' '||DECODE(VP.TIPO_PROBLEMA, 'SOS', '(SOSPETTO)', '') DESCR
				from VIEW_PROBLEMI VP 
				where VP.IDEN_ANAG = :iden_anag and
				VP.CHIUSO = 'N' AND VP.NASCOSTO='N'
				and	VUA(vp.IDEN_ANAG,:iden_utente,vp.iden_med,to_char(vp.data_ins,'YYYYMMDD'),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', VP.OSCURATO, VP.UTE_INS)=1
				and VP.SITO in ('MMG')
				ORDER BY VP.IDEN DESC
			</SQL>
			<BINDS>
				<BIND id="iden_utente" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_PROBLEMA">
			<SQL>select /*+first_row(100)*/ distinct VP.IDEN VALUE ,
				VP.PROBLEMA||'('|| VP.CODICE_ICD9||' - '|| VP.DESCR_ICD9||')' DESCR
				from VIEW_PROBLEMI VP 
				where VP.IDEN_ANAG = :iden_anag 
				AND VP.NASCOSTO='N' 
				and	VUA(vp.IDEN_ANAG,:iden_utente,vp.iden_med,to_char(vp.data_ins,'YYYYMMDD'),'ASSISTITO,SOSTITUTO,GRUPPO,SOSTITUTO_GRUPPO', VP.OSCURATO, VP.UTE_INS)=1
				and VP.SITO in ('MMG')
				ORDER BY VP.IDEN DESC
			</SQL>
			<BINDS>
				<BIND id="iden_utente" value="#IDEN_PER#" type="N"></BIND>
				<BIND id="iden_anag" value="#IDEN_ANAG#" type="N"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_PT">
			<SQL>select /*+first_rows(100)*/ descrizione as descr,CODICE as value
				from mmg_codifiche where tipo_dato='PIANO_TERAPEUTICO' AND
				TIPO_SCHEDA = 'CRONO_RR' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_QTA_PASTIGLIA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'QTA_PASTIGLIA' AND TIPO_SCHEDA
				= 'MMG_SCELTA_POSOLOGIA' AND ATTIVO = 'S' AND DELETED = 'N' order by
				ordine
			</SQL>
		</QUERY>
		<QUERY id="R_QTA_TEMPISTICA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'TEMPISTICHE' AND TIPO_SCHEDA =
				'MMG_SCELTA_POSOLOGIA' AND ATTIVO = 'S' AND DELETED = 'N' order by
				ordine
			</SQL>
		</QUERY>
		<QUERY id="R_REGIME_ACCESSO">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='NUOVO_ACCESSO' AND TIPO_DATO = 'REGIME_ACCESSO'
				and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_RUOLO_MEDICO">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='CERTIFICATO_MALATTIA' AND TIPO_DATO =
				'RUOLO_MEDICO' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_SCELTA_ALLEGATO_PAZIENTE_EPISODIO">
			<SQL>select /*+first_row(1)*/ 'P' VALUE, 'Paziente' DESCR from dual
				union all select /*+first_row(1)*/ 'E' VALUE, 'Episodio' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="R_SESSO">
			<SQL>select /*+first_row(10)*/ 'M' VALUE, 'lblMaschio' DESCR from
				dual union all select /*+first_row(10)*/ 'F' VALUE, 'lblFemmina'
				DESCR from dual union all select /*+first_row(10)*/ 'U' VALUE,
				'lblSconosciuto' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SESSO_M_F_TUTTI">
			<SQL>select /*+first_row(10)*/ 'M' VALUE, 'lblMaschio' DESCR from
				dual union all select /*+first_row(10)*/ 'F' VALUE, 'lblFemmina'
				DESCR from dual union all select /*+first_row(10)*/ 'U' VALUE,
				'lblTutti' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_MESI_ANNI">
			<SQL>select /*+first_row(10)*/ 'M' VALUE, 'lblMesi' DESCR from
				dual union all select /*+first_row(10)*/ 'A' VALUE, 'lblAnni'
				DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SINISTRA_DESTRA">
			<SQL>select /*+first_row(10)*/ codice VALUE, descrizione DESCR from
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and ATTIVO = 'S' AND DELETED = 'N'
			</SQL>
			<BINDS>
				<BIND id="tipo_dato" value="SX_DX" type="V"></BIND>
				<BIND id="tipo_scheda" value="GENERICO" type="V"></BIND>
			</BINDS>
		</QUERY>
		<QUERY id="R_CONCEDE_NEGA">
			<SQL>select /*+first_rows(10)*/ 'S' VALUE, 'lblConcede' DESCR from dual
				union all select /*+first_rows(10)*/ 'N' VALUE, 'lblNega' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO">
			<SQL>select /*+first_rows(1)*/ 'S' VALUE, 'lblSi' DESCR from dual
				union all
				select /*+first_rows(1)*/ 'N' VALUE, 'lblNo' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO_MIDDLE">
			<SQL>select /*+first_rows(1)*/ 'S' VALUE, 'lblSi' DESCR from dual
				union all
				select /*+first_rows(1)*/ 'Q' VALUE, 'lblMiddleOption' DESCR from dual
				union all
				select /*+first_rows(1)*/ 'N' VALUE, 'lblNo' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_PRIORITA">
			<SQL>select /*+first_rows(1)*/ 0 VALUE, 'lblPriorita0' DESCR from dual
				union all
				select /*+first_rows(1)*/ 1 VALUE, 'lblPriorita1' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_DESCRIZIONE_PROBLEMA">
			<SQL>
				SELECT 'CP' VALUE, 'lblCodiceProblema' DESCR FROM DUAL UNION ALL SELECT 'PC' VALUE,  'lblProblemaCodice' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="CMB_TIPOLOGIA_APPUNTI">
			<SQL>
				SELECT 'CONSIGLI' VALUE, 'lblConsigli' DESCR FROM DUAL UNION ALL SELECT 'PROTOCOLLI' VALUE, 'lblProtocolli' DESCR FROM DUAL UNION ALL SELECT 'GENERICO' VALUE, 'lblGenerico' DESCR FROM DUAL 
			</SQL>
		</QUERY>
		<QUERY id="R_ATTIVA_OFFLINE">
			<SQL>select /*+first_rows(10)*/ 'S' VALUE, 'lblOffAttivo' DESCR from dual
				union all select /*+first_rows(10)*/ 'PC' VALUE, 'lblAttPC' DESCR from dual 
				union all select /*+first_rows(10)*/ 'NOTPC' VALUE, 'lblNotAttPC' DESCR from dual
				union all select /*+first_rows(10)*/ 'N' VALUE, 'lblOffNotAttivo' DESCR from dual 
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO_PASSATO">
			<SQL>select /*+first_rows(10)*/ 'S' VALUE, 'lblSi' DESCR from dual
				union all select /*+first_rows(10)*/ 'N' VALUE, 'lblNo' DESCR from
				dual union all select /*+first_rows(10)*/ 'P' VALUE, 'lblPassato' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO_DATO_NON_NOTO">
			<SQL>select /*+first_row(10)*/ 'S' VALUE, 'lblSi' DESCR from dual
				union all select /*+first_row(10)*/ 'N' VALUE, 'lblNo' DESCR from
				dual union all select /*+first_row(10)*/ 'Non_Noto' VALUE,
				'lblDato_non_noto' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO_NON_NOTO">
			<SQL>select /*+first_row(10)*/ 'S' VALUE, 'lblSi' DESCR from dual
				union all select /*+first_row(10)*/ 'N' VALUE, 'lblNo' DESCR from
				dual union all select /*+first_row(10)*/ 'Non_Noto' VALUE,
				'lblNon_Noto' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_SI_NO_PD">
			<SQL>select /*+first_row(10)*/ 'SPD' VALUE, 'lblSi' DESCR from dual
				union all select /*+first_row(10)*/ 'NPM' VALUE, 'lblNo' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="R_STATO_MATERIALE">
			<SQL>select /*+first_row(10)*/ 'S' VALUE, 'Solido' DESCR from dual
				union all select /*+first_row(10)*/ 'L' VALUE, 'Liquido' DESCR from
				dual union all select /*+first_row(10)*/ 'A' VALUE, 'Altro' DESCR
				from dual
			</SQL>
		</QUERY>
		<QUERY id="R_TEST_COMBS">
			<SQL>select /*+first_rows(10)*/ 'S' VALUE, 'Positivo' DESCR from dual union
				all select /*+first_rows(10)*/ 'N' VALUE, 'Negativo' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_AGENDA">
			<SQL>SELECT 'P' VALUE, 'lblTipoAgendaPosti' DESCR FROM DUAL UNION ALL
				SELECT 'T' VALUE,'lblTipoAgendaTempo' DESCR FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_CERTIFICATO">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='CERTIFICATO_MALATTIA' AND TIPO_DATO =
				'TIPO_CERTIFICATO' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_DOC_ALLEGATO"><!-- SI PUO' ELIMINARE -->
			<SQL>select /*+first_row(1)*/ CODICE VALUE,DESCRIZIONE DESCR from
				MMG_CODIFICHE WHERE TIPO_SCHEDA='SCHEDA_DOCUMENTI_ALLEGATI' AND
				TIPO_DATO ='CMB_TIPO_DOCUMENTO' AND DELETED='N' and attivo = 'S' 
			</SQL>
		</QUERY>
		<QUERY id="R_TIPOLOGIA_CDC">
			<SQL>select /*+first_row(1)*/ '0' VALUE, 'Reparto' DESCR from dual
				union all select /*+first_row(10)*/ '1' VALUE, 'Ambulatorio' DESCR
				from dual union all select /*+first_row(1)*/ '2' VALUE, 'Entrambi'
				DESCR from dual union all select /*+first_row(1)*/ '4' VALUE,
				'Radiologia' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_PROBLEMA">
			<SQL>Select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'TIPO_PROBLEMA' AND TIPO_SCHEDA
				= 'INSERIMENTO_PROBLEMA' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="CMB_ESENZIONI_GRAVIDANZA">
			<SQL>
				select COD_ESENZIONE VALUE, DESCR from DATI$ESENZIONI where COD_ESENZIONE like 'M%'
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_PROBLEMA_1">
			<SQL>Select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = :tipo_dato AND TIPO_SCHEDA =
				:tipo_scheda and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_RILEVAZIONE">
			<SQL>select /*+first_row(10)*/ 'BMI' VALUE, 'BMI' DESCR from dual union all
				 select /*+first_row(10)*/ 'Cuore' VALUE, 'Cuore' DESCR from dual union all
				 select /*+first_row(10)*/ 'Pressione' VALUE, 'Pressione' DESCR from dual union all
				 select /*+first_row(10)*/ 'Alcol' VALUE, 'Alcol' DESCR from dual union all
				 select /*+first_row(10)*/ 'Fumo' VALUE, 'Fumo' DESCR from dual union all
				 select /*+first_row(10)*/ 'Altro' VALUE, 'Altro' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_SCELTA_ESA">
			<SQL>Select 'HB' VALUE, 'lblHumanBody' DESCR From DUAL Union All
				Select 'ACR' VALUE, 'lblACR' DESCR From DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_SCHEDA">
			<SQL>select CODICE value, DESCRIZIONE DESCR, ORDINE from
				MMG_CODIFICHE where TIPO_SCHEDA = 'FILTRI' and TIPO_DATO =
				'tipoScheda' and attivo = 'S' order by ORDINE
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_VACCINO">
			<SQL>select 'AI' VALUE, 'Antiinfluenzale' DESCR FROM DUAL UNION ALL
				SELECT 'A' VALUE, 'Altro' DESCR from dual
			</SQL>
		</QUERY>
		<QUERY id="R_TIPO_VISITA">
			<SQL>SELECT CODICE VALUE ,DESCRIZIONE DESCR FROM MMG_CODIFICHE
				WHERE TIPO_SCHEDA ='CERTIFICATO_MALATTIA' AND TIPO_DATO =
				'TIPO_VISITA' and attivo = 'S' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_PRESTAZIONE_RR">
			<SQL>
				select 'Suggerita' DESCR, 'S' VALUE FROM DUAL UNION ALL select 'Ricovero' DESCR, 'R' VALUE FROM DUAL UNION ALL select 'Altro' DESCR, 'A' VALUE FROM DUAL
			</SQL>
		</QUERY>
		<QUERY id="R_ULTIMI_ACCESSI">
			<SQL>select /*+first_rows(1)*/ 'SI' VALUE, 'lblSi' DESCR from dual
				union all
				select /*+first_rows(1)*/ 'NO' VALUE, 'lblNo' DESCR from
				dual
			</SQL>
		</QUERY>
		<QUERY id="R_UNITA_MISURA">
			<SQL>select /*+first_row(10)*/ CODICE VALUE, DESCRIZIONE DESCR FROM
				MMG_CODIFICHE WHERE TIPO_DATO = 'UDM' and ATTIVO = 'S' AND
				DELETED = 'N' order by ordine
			</SQL>
		</QUERY>
		<QUERY id="R_VACCINO_ADIUVATO">
			<SQL>select CODICE VALUE, DESCRIZIONE DESCR, ORDINE FROM
				MMG_CODIFICHE WHERE TIPO_SCHEDA = 'MMG_INSERIMENTO_VACCINO' AND
				TIPO_DATO = 'Adiuvato' and attivo = 'S' order by ORDINE
			</SQL>
		</QUERY>
		<QUERY id="VACCINI_ASL">
			<SQL>select VACCINI_CONSEGNATI, NUMERO_LOTTO from
				VIEW_CONTEGGIO_VACCINI where IDEN_MED_BASE = :IDEN_MED and
				DATA_INS = (select max(DATA_INS)
				from VIEW_CONTEGGIO_VACCINI
				where IDEN_MED_BASE = :IDEN_MED)
			</SQL>
			<BINDS>
				<BIND id="IDEN_MED" value="#IDEN_PER#" type="N"></BIND>
			</BINDS>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="AGENDA">
		<QUERY id="LOAD_EVENTS_BY_MEDICO">
			<SQL>
				select xmlelement("data",xmlagg(xmlelement("event", xmlattributes(iden as "id"), 
  				xmlelement("text", xmlcdata(note)),xmlelement("start_date", to_char(data_ini,'yyyy-MM-dd HH24:mi')),xmlelement("end_date", to_char(data_fine,'yyyy-MM-dd HH24:mi')),xmlelement("type", tipo),xmlelement("id_medico", iden_med),xmlelement("rec_type", rec_type),xmlelement("event_pid", event_pid),xmlelement("event_length", event_length)))).getClobVal() EVENTI from agenda_eventi
				where iden_med = :iden_med and data_ini &lt;= to_date(:data_fine,'yyyyMMdd') and data_fine &gt;= to_date(:data_ini,'yyyyMMdd') and stato &lt;&gt; 'X'
			</SQL>
		</QUERY>
		<QUERY id="LOAD_EVENTS_BY_GRUPPO">
			<SQL>
				with medici as (SELECT regexp_substr(x, '[^,]+', 1, level) id_medico from (
  			 	select :id_medici X from dual
				) connect by level &lt;= length(x) - length(replace(x,',')) + 1)
				select xmlelement("data",xmlagg(xmlelement("event", xmlattributes(iden as "id"), 
  				xmlelement("text", xmlcdata(note)),xmlelement("start_date", to_char(data_ini,'yyyy-MM-dd HH24:mi')),xmlelement("end_date", to_char(data_fine,'yyyy-MM-dd HH24:mi')),xmlelement("type", tipo),xmlelement("id_medico", iden_med),xmlelement("rec_type", rec_type),xmlelement("event_pid", event_pid),xmlelement("event_length", event_length)))).getClobVal() EVENTI from agenda_eventi
				inner join  medici on iden_med = id_medico
				where data_ini &lt;= to_date(:data_fine,'yyyyMMdd') and data_fine &gt;= to_date(:data_ini,'yyyyMMdd') and stato &lt;&gt; 'X'
			</SQL>
		</QUERY>
		<QUERY id="LOAD_ORARI">
			<SQL>
				with medici as (SELECT regexp_substr(x, '[^,]+', 1, level) id_medico from (
  			 	select :id_medici X from dual
				) connect by level &lt;= length(x) - length(replace(x,',')) + 1)
				select iden, iden_medico, extractvalue(XML,'//CAMPO[@KEY_CAMPO=''ORARI'']') orari from AGENDA_CONFIGURAZIONE
				inner join  medici on iden_medico = id_medico
			</SQL>
		</QUERY>
		<QUERY id="LOAD_CONFIGURAZIONE">
			<SQL>select /*+first_rows(1)*/ IDEN, t.XML.getClobVal() CONTENUTO FROM AGENDA_CONFIGURAZIONE t where t.IDEN = :iden</SQL>
			<BINDS>
				<BIND id="iden" value="#IDEN#" type="N"></BIND>
			</BINDS>
		</QUERY>
	</QUERY_GROUP>
	<QUERY_GROUP id="PRIVACY">
		<QUERY id="GET_OSCURAMENTO_SCHEDA">
			<SQL>
				select oscuramento from oscuramenti_schede where iden_anag = :iden_anag and key_legame = :key_legame and deleted = 'N'
			</SQL>
		</QUERY>
		<QUERY id="GET_LISTA_CONSENSI">
		    <SQL>
		        select MMG_PERMESSI.GET_PERMESSI_ABILITATI_STRING(null) PERMESSI_DEFAULT from dual
		    </SQL>
		</QUERY>
	</QUERY_GROUP>
</QUERIES>
